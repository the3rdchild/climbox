{"file":"/home/user/climbox/packages/api/src/utils/temperature.test.ts","mappings":"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","names":[],"sources":["/home/user/climbox/packages/api/src/utils/temperature.test.ts"],"sourcesContent":["import {\r\n  calculateDegreeHeatingDays,\r\n  getMMM,\r\n  getHistoricalMonthlyMeans,\r\n} from './temperature';\r\n\r\n// Mock functions\r\nfunction getSeaSurfaceTemperatures(siteID: number) {\r\n  return Array.from(Array(siteID), (_, index) => index);\r\n}\r\n\r\nfunction getMaximumMonthlyMean(siteID: number) {\r\n  return 27.5 + siteID;\r\n}\r\n\r\ntest('Not enough SST.', () => {\r\n  const seaSurfaceTemperatures = getSeaSurfaceTemperatures(1);\r\n  const maximumMonthlyMean = getMaximumMonthlyMean(1);\r\n  return expect(() => {\r\n    calculateDegreeHeatingDays(seaSurfaceTemperatures, maximumMonthlyMean);\r\n  }).toThrow(Error);\r\n});\r\n\r\ntest('Undefined maximumMonthlyMean', () => {\r\n  const seaSurfaceTemperatures = getSeaSurfaceTemperatures(84);\r\n  return expect(() => {\r\n    calculateDegreeHeatingDays(seaSurfaceTemperatures, null);\r\n  }).toThrow(Error);\r\n});\r\n\r\ntest('Calculates data as expected.', () => {\r\n  const seaSurfaceTemperatures = getSeaSurfaceTemperatures(84);\r\n  const maximumMonthlyMean = getMaximumMonthlyMean(1);\r\n  const DHD = calculateDegreeHeatingDays(\r\n    seaSurfaceTemperatures,\r\n    maximumMonthlyMean,\r\n  );\r\n  expect(DHD).toBe(1512);\r\n});\r\n\r\ntest('Get MMM as expected.', async () => {\r\n  jest.setTimeout(60000);\r\n  await getMMM(0, 0).then((data) => expect(data).toEqual(28.95));\r\n  await getMMM(-89.9, -10).then((data) => expect(data).toEqual(26.55));\r\n  await getMMM(-108.0, -53.1).then((data) => expect(data).toEqual(7.94));\r\n});\r\n\r\ntest('Get HistoricalMonthlyMeans as expected.', async () => {\r\n  jest.setTimeout(60000);\r\n  await getHistoricalMonthlyMeans(0, 0).then((data) =>\r\n    expect(data).toEqual([\r\n      { month: 1, temperature: 27.65 },\r\n      { month: 2, temperature: 28.24 },\r\n      { month: 3, temperature: 28.68 },\r\n      { month: 4, temperature: 28.95 },\r\n      { month: 5, temperature: 28.06 },\r\n      { month: 6, temperature: 25.83 },\r\n      { month: 7, temperature: 25.06 },\r\n      { month: 8, temperature: 24.82 },\r\n      { month: 9, temperature: 25.44 },\r\n      { month: 10, temperature: 26.25 },\r\n      { month: 11, temperature: 26.7 },\r\n      { month: 12, temperature: 27.03 },\r\n    ]),\r\n  );\r\n});\r\n"],"version":3}