1cc333d5be3abb2d7d2034f05cd9178b
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.errorSchema = void 0;
const common_1 = require("@nestjs/common");
const swagger_1 = require("@nestjs/swagger");
class ErrorResponse {
}
__decorate([
    (0, swagger_1.ApiProperty)({ example: 400 }),
    __metadata("design:type", Number)
], ErrorResponse.prototype, "statusCode", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Validation failed' }),
    __metadata("design:type", String)
], ErrorResponse.prototype, "message", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ example: 'Bad Request' }),
    __metadata("design:type", String)
], ErrorResponse.prototype, "error", void 0);
const errorTemplates = {
    [common_1.HttpStatus.BAD_REQUEST]: {
        statusCode: common_1.HttpStatus.BAD_REQUEST,
        message: 'Validation failed',
        error: 'Bad Request',
    },
    [common_1.HttpStatus.UNAUTHORIZED]: {
        statusCode: common_1.HttpStatus.UNAUTHORIZED,
        message: 'Not authorized',
        error: 'Unauthorized',
    },
    [common_1.HttpStatus.NOT_FOUND]: {
        statusCode: common_1.HttpStatus.NOT_FOUND,
        message: 'Resource not found',
        error: 'Not Found',
    },
};
const errorSchema = (errorCode) => {
    const errorResponse = errorTemplates[errorCode];
    return {
        type: 'object',
        properties: {
            statusCode: {
                type: 'number',
                example: errorResponse.statusCode,
            },
            message: {
                type: 'string',
                example: errorResponse.message,
            },
            error: {
                type: 'string',
                example: errorResponse.error,
            },
        },
    };
};
exports.errorSchema = errorSchema;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvdXNlci9jbGltYm94L3BhY2thZ2VzL2FwaS9zcmMvZG9jcy9lcnJvci5kdG8udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsMkNBQTRDO0FBQzVDLDZDQUE4QztBQUc5QyxNQUFNLGFBQWE7Q0FTbEI7QUFSQztJQUFDLElBQUEscUJBQVcsRUFBQyxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQzs7aURBQ1g7QUFFbkI7SUFBQyxJQUFBLHFCQUFXLEVBQUMsRUFBRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsQ0FBQzs7OENBQzlCO0FBRWhCO0lBQUMsSUFBQSxxQkFBVyxFQUFDLEVBQUUsT0FBTyxFQUFFLGFBQWEsRUFBRSxDQUFDOzs0Q0FDMUI7QUFHaEIsTUFBTSxjQUFjLEdBQWtDO0lBQ3BELENBQUMsbUJBQVUsQ0FBQyxXQUFXLENBQUMsRUFBRTtRQUN4QixVQUFVLEVBQUUsbUJBQVUsQ0FBQyxXQUFXO1FBQ2xDLE9BQU8sRUFBRSxtQkFBbUI7UUFDNUIsS0FBSyxFQUFFLGFBQWE7S0FDckI7SUFDRCxDQUFDLG1CQUFVLENBQUMsWUFBWSxDQUFDLEVBQUU7UUFDekIsVUFBVSxFQUFFLG1CQUFVLENBQUMsWUFBWTtRQUNuQyxPQUFPLEVBQUUsZ0JBQWdCO1FBQ3pCLEtBQUssRUFBRSxjQUFjO0tBQ3RCO0lBQ0QsQ0FBQyxtQkFBVSxDQUFDLFNBQVMsQ0FBQyxFQUFFO1FBQ3RCLFVBQVUsRUFBRSxtQkFBVSxDQUFDLFNBQVM7UUFDaEMsT0FBTyxFQUFFLG9CQUFvQjtRQUM3QixLQUFLLEVBQUUsV0FBVztLQUNuQjtDQUNGLENBQUM7QUFFSyxNQUFNLFdBQVcsR0FBRyxDQUFDLFNBQWlCLEVBQWdCLEVBQUU7SUFDN0QsTUFBTSxhQUFhLEdBQUcsY0FBYyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBRWhELE9BQU87UUFDTCxJQUFJLEVBQUUsUUFBUTtRQUNkLFVBQVUsRUFBRTtZQUNWLFVBQVUsRUFBRTtnQkFDVixJQUFJLEVBQUUsUUFBUTtnQkFDZCxPQUFPLEVBQUUsYUFBYSxDQUFDLFVBQVU7YUFDbEM7WUFDRCxPQUFPLEVBQUU7Z0JBQ1AsSUFBSSxFQUFFLFFBQVE7Z0JBQ2QsT0FBTyxFQUFFLGFBQWEsQ0FBQyxPQUFPO2FBQy9CO1lBQ0QsS0FBSyxFQUFFO2dCQUNMLElBQUksRUFBRSxRQUFRO2dCQUNkLE9BQU8sRUFBRSxhQUFhLENBQUMsS0FBSzthQUM3QjtTQUNGO0tBQ0YsQ0FBQztBQUNKLENBQUMsQ0FBQztBQXBCVyxRQUFBLFdBQVcsZUFvQnRCIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9ob21lL3VzZXIvY2xpbWJveC9wYWNrYWdlcy9hcGkvc3JjL2RvY3MvZXJyb3IuZHRvLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBTdGF0dXMgfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7XHJcbmltcG9ydCB7IEFwaVByb3BlcnR5IH0gZnJvbSAnQG5lc3Rqcy9zd2FnZ2VyJztcclxuaW1wb3J0IHsgU2NoZW1hT2JqZWN0IH0gZnJvbSAnQG5lc3Rqcy9zd2FnZ2VyL2Rpc3QvaW50ZXJmYWNlcy9vcGVuLWFwaS1zcGVjLmludGVyZmFjZSc7XHJcblxyXG5jbGFzcyBFcnJvclJlc3BvbnNlIHtcclxuICBAQXBpUHJvcGVydHkoeyBleGFtcGxlOiA0MDAgfSlcclxuICBzdGF0dXNDb2RlOiBudW1iZXI7XHJcblxyXG4gIEBBcGlQcm9wZXJ0eSh7IGV4YW1wbGU6ICdWYWxpZGF0aW9uIGZhaWxlZCcgfSlcclxuICBtZXNzYWdlOiBzdHJpbmc7XHJcblxyXG4gIEBBcGlQcm9wZXJ0eSh7IGV4YW1wbGU6ICdCYWQgUmVxdWVzdCcgfSlcclxuICBlcnJvcjogc3RyaW5nO1xyXG59XHJcblxyXG5jb25zdCBlcnJvclRlbXBsYXRlczogUmVjb3JkPG51bWJlciwgRXJyb3JSZXNwb25zZT4gPSB7XHJcbiAgW0h0dHBTdGF0dXMuQkFEX1JFUVVFU1RdOiB7XHJcbiAgICBzdGF0dXNDb2RlOiBIdHRwU3RhdHVzLkJBRF9SRVFVRVNULFxyXG4gICAgbWVzc2FnZTogJ1ZhbGlkYXRpb24gZmFpbGVkJyxcclxuICAgIGVycm9yOiAnQmFkIFJlcXVlc3QnLFxyXG4gIH0sXHJcbiAgW0h0dHBTdGF0dXMuVU5BVVRIT1JJWkVEXToge1xyXG4gICAgc3RhdHVzQ29kZTogSHR0cFN0YXR1cy5VTkFVVEhPUklaRUQsXHJcbiAgICBtZXNzYWdlOiAnTm90IGF1dGhvcml6ZWQnLFxyXG4gICAgZXJyb3I6ICdVbmF1dGhvcml6ZWQnLFxyXG4gIH0sXHJcbiAgW0h0dHBTdGF0dXMuTk9UX0ZPVU5EXToge1xyXG4gICAgc3RhdHVzQ29kZTogSHR0cFN0YXR1cy5OT1RfRk9VTkQsXHJcbiAgICBtZXNzYWdlOiAnUmVzb3VyY2Ugbm90IGZvdW5kJyxcclxuICAgIGVycm9yOiAnTm90IEZvdW5kJyxcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGVycm9yU2NoZW1hID0gKGVycm9yQ29kZTogbnVtYmVyKTogU2NoZW1hT2JqZWN0ID0+IHtcclxuICBjb25zdCBlcnJvclJlc3BvbnNlID0gZXJyb3JUZW1wbGF0ZXNbZXJyb3JDb2RlXTtcclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIHR5cGU6ICdvYmplY3QnLFxyXG4gICAgcHJvcGVydGllczoge1xyXG4gICAgICBzdGF0dXNDb2RlOiB7XHJcbiAgICAgICAgdHlwZTogJ251bWJlcicsXHJcbiAgICAgICAgZXhhbXBsZTogZXJyb3JSZXNwb25zZS5zdGF0dXNDb2RlLFxyXG4gICAgICB9LFxyXG4gICAgICBtZXNzYWdlOiB7XHJcbiAgICAgICAgdHlwZTogJ3N0cmluZycsXHJcbiAgICAgICAgZXhhbXBsZTogZXJyb3JSZXNwb25zZS5tZXNzYWdlLFxyXG4gICAgICB9LFxyXG4gICAgICBlcnJvcjoge1xyXG4gICAgICAgIHR5cGU6ICdzdHJpbmcnLFxyXG4gICAgICAgIGV4YW1wbGU6IGVycm9yUmVzcG9uc2UuZXJyb3IsXHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIH07XHJcbn07XHJcbiJdLCJ2ZXJzaW9uIjozfQ==