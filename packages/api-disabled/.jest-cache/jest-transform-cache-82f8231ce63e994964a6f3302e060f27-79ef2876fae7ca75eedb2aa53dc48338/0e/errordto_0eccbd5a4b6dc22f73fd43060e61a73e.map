{"file":"/home/user/climbox/packages/api/src/docs/error.dto.ts","mappings":";;;;;;;;;;;;AAAA,2CAA4C;AAC5C,6CAA8C;AAG9C,MAAM,aAAa;CASlB;AARC;IAAC,IAAA,qBAAW,EAAC,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;;iDACX;AAEnB;IAAC,IAAA,qBAAW,EAAC,EAAE,OAAO,EAAE,mBAAmB,EAAE,CAAC;;8CAC9B;AAEhB;IAAC,IAAA,qBAAW,EAAC,EAAE,OAAO,EAAE,aAAa,EAAE,CAAC;;4CAC1B;AAGhB,MAAM,cAAc,GAAkC;IACpD,CAAC,mBAAU,CAAC,WAAW,CAAC,EAAE;QACxB,UAAU,EAAE,mBAAU,CAAC,WAAW;QAClC,OAAO,EAAE,mBAAmB;QAC5B,KAAK,EAAE,aAAa;KACrB;IACD,CAAC,mBAAU,CAAC,YAAY,CAAC,EAAE;QACzB,UAAU,EAAE,mBAAU,CAAC,YAAY;QACnC,OAAO,EAAE,gBAAgB;QACzB,KAAK,EAAE,cAAc;KACtB;IACD,CAAC,mBAAU,CAAC,SAAS,CAAC,EAAE;QACtB,UAAU,EAAE,mBAAU,CAAC,SAAS;QAChC,OAAO,EAAE,oBAAoB;QAC7B,KAAK,EAAE,WAAW;KACnB;CACF,CAAC;AAEK,MAAM,WAAW,GAAG,CAAC,SAAiB,EAAgB,EAAE;IAC7D,MAAM,aAAa,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC;IAEhD,OAAO;QACL,IAAI,EAAE,QAAQ;QACd,UAAU,EAAE;YACV,UAAU,EAAE;gBACV,IAAI,EAAE,QAAQ;gBACd,OAAO,EAAE,aAAa,CAAC,UAAU;aAClC;YACD,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;gBACd,OAAO,EAAE,aAAa,CAAC,OAAO;aAC/B;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,QAAQ;gBACd,OAAO,EAAE,aAAa,CAAC,KAAK;aAC7B;SACF;KACF,CAAC;AACJ,CAAC,CAAC;AApBW,QAAA,WAAW,eAoBtB","names":[],"sources":["/home/user/climbox/packages/api/src/docs/error.dto.ts"],"sourcesContent":["import { HttpStatus } from '@nestjs/common';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { SchemaObject } from '@nestjs/swagger/dist/interfaces/open-api-spec.interface';\r\n\r\nclass ErrorResponse {\r\n  @ApiProperty({ example: 400 })\r\n  statusCode: number;\r\n\r\n  @ApiProperty({ example: 'Validation failed' })\r\n  message: string;\r\n\r\n  @ApiProperty({ example: 'Bad Request' })\r\n  error: string;\r\n}\r\n\r\nconst errorTemplates: Record<number, ErrorResponse> = {\r\n  [HttpStatus.BAD_REQUEST]: {\r\n    statusCode: HttpStatus.BAD_REQUEST,\r\n    message: 'Validation failed',\r\n    error: 'Bad Request',\r\n  },\r\n  [HttpStatus.UNAUTHORIZED]: {\r\n    statusCode: HttpStatus.UNAUTHORIZED,\r\n    message: 'Not authorized',\r\n    error: 'Unauthorized',\r\n  },\r\n  [HttpStatus.NOT_FOUND]: {\r\n    statusCode: HttpStatus.NOT_FOUND,\r\n    message: 'Resource not found',\r\n    error: 'Not Found',\r\n  },\r\n};\r\n\r\nexport const errorSchema = (errorCode: number): SchemaObject => {\r\n  const errorResponse = errorTemplates[errorCode];\r\n\r\n  return {\r\n    type: 'object',\r\n    properties: {\r\n      statusCode: {\r\n        type: 'number',\r\n        example: errorResponse.statusCode,\r\n      },\r\n      message: {\r\n        type: 'string',\r\n        example: errorResponse.message,\r\n      },\r\n      error: {\r\n        type: 'string',\r\n        example: errorResponse.error,\r\n      },\r\n    },\r\n  };\r\n};\r\n"],"version":3}