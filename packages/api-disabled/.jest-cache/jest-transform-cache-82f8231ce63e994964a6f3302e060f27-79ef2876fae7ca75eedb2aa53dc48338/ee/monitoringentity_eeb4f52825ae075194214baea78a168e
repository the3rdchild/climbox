bec360612fe1a83a3a8df10be1fce0f0
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Monitoring = void 0;
const typeorm_1 = require("typeorm");
const swagger_1 = require("@nestjs/swagger");
const class_transformer_1 = require("class-transformer");
const sites_entity_1 = require("../sites/sites.entity");
const users_entity_1 = require("../users/users.entity");
const monitoring_metric_enum_1 = require("./schemas/monitoring-metric.enum");
let Monitoring = class Monitoring {
};
__decorate([
    (0, swagger_1.ApiProperty)({ example: 1 }),
    (0, class_transformer_1.Exclude)(),
    (0, typeorm_1.PrimaryGeneratedColumn)(),
    __metadata("design:type", Number)
], Monitoring.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: 'enum', enum: monitoring_metric_enum_1.MonitoringMetric, nullable: false }),
    __metadata("design:type", String)
], Monitoring.prototype, "metric", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => users_entity_1.User, { onDelete: 'CASCADE' }),
    (0, typeorm_1.JoinColumn)({ name: 'user_id' }),
    (0, typeorm_1.Index)(),
    __metadata("design:type", users_entity_1.User)
], Monitoring.prototype, "user", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => sites_entity_1.Site, { onDelete: 'CASCADE', nullable: false }),
    (0, typeorm_1.JoinColumn)({ name: 'site_id' }),
    (0, typeorm_1.Index)(),
    __metadata("design:type", sites_entity_1.Site)
], Monitoring.prototype, "site", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)({ name: 'timestamp' }),
    (0, typeorm_1.Index)(),
    __metadata("design:type", Date)
], Monitoring.prototype, "timestamp", void 0);
Monitoring = __decorate([
    (0, typeorm_1.Entity)()
], Monitoring);
exports.Monitoring = Monitoring;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvdXNlci9jbGltYm94L3BhY2thZ2VzL2FwaS9zcmMvbW9uaXRvcmluZy9tb25pdG9yaW5nLmVudGl0eS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSxxQ0FRaUI7QUFDakIsNkNBQThDO0FBQzlDLHlEQUE0QztBQUM1Qyx3REFBNkM7QUFDN0Msd0RBQTZDO0FBQzdDLDZFQUFvRTtBQUc3RCxJQUFNLFVBQVUsR0FBaEIsTUFBTSxVQUFVO0NBc0J0QixDQUFBO0FBckJDO0lBQUMsSUFBQSxxQkFBVyxFQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDO0lBQzNCLElBQUEsMkJBQU8sR0FBRTtJQUNULElBQUEsZ0NBQXNCLEdBQUU7O3NDQUNkO0FBRVg7SUFBQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSx5Q0FBZ0IsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLENBQUM7OzBDQUN6QztBQUV6QjtJQUFDLElBQUEsbUJBQVMsRUFBQyxHQUFHLEVBQUUsQ0FBQyxtQkFBSSxFQUFFLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxDQUFDO0lBQzlDLElBQUEsb0JBQVUsRUFBQyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsQ0FBQztJQUMvQixJQUFBLGVBQUssR0FBRTs4QkFDRixtQkFBSTt3Q0FBQztBQUVYO0lBQUMsSUFBQSxtQkFBUyxFQUFDLEdBQUcsRUFBRSxDQUFDLG1CQUFJLEVBQUUsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsQ0FBQztJQUMvRCxJQUFBLG9CQUFVLEVBQUMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLENBQUM7SUFDL0IsSUFBQSxlQUFLLEdBQUU7OEJBQ0YsbUJBQUk7d0NBQUM7QUFFWDtJQUFDLElBQUEsMEJBQWdCLEVBQUMsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLENBQUM7SUFDdkMsSUFBQSxlQUFLLEdBQUU7OEJBQ0csSUFBSTs2Q0FBQztBQXJCTCxVQUFVO0lBRHRCLElBQUEsZ0JBQU0sR0FBRTtHQUNJLFVBQVUsQ0FzQnRCO0FBdEJZLGdDQUFVIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9ob21lL3VzZXIvY2xpbWJveC9wYWNrYWdlcy9hcGkvc3JjL21vbml0b3JpbmcvbW9uaXRvcmluZy5lbnRpdHkudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBDb2x1bW4sXHJcbiAgQ3JlYXRlRGF0ZUNvbHVtbixcclxuICBFbnRpdHksXHJcbiAgSW5kZXgsXHJcbiAgSm9pbkNvbHVtbixcclxuICBNYW55VG9PbmUsXHJcbiAgUHJpbWFyeUdlbmVyYXRlZENvbHVtbixcclxufSBmcm9tICd0eXBlb3JtJztcclxuaW1wb3J0IHsgQXBpUHJvcGVydHkgfSBmcm9tICdAbmVzdGpzL3N3YWdnZXInO1xyXG5pbXBvcnQgeyBFeGNsdWRlIH0gZnJvbSAnY2xhc3MtdHJhbnNmb3JtZXInO1xyXG5pbXBvcnQgeyBTaXRlIH0gZnJvbSAnLi4vc2l0ZXMvc2l0ZXMuZW50aXR5JztcclxuaW1wb3J0IHsgVXNlciB9IGZyb20gJy4uL3VzZXJzL3VzZXJzLmVudGl0eSc7XHJcbmltcG9ydCB7IE1vbml0b3JpbmdNZXRyaWMgfSBmcm9tICcuL3NjaGVtYXMvbW9uaXRvcmluZy1tZXRyaWMuZW51bSc7XHJcblxyXG5ARW50aXR5KClcclxuZXhwb3J0IGNsYXNzIE1vbml0b3Jpbmcge1xyXG4gIEBBcGlQcm9wZXJ0eSh7IGV4YW1wbGU6IDEgfSlcclxuICBARXhjbHVkZSgpXHJcbiAgQFByaW1hcnlHZW5lcmF0ZWRDb2x1bW4oKVxyXG4gIGlkOiBudW1iZXI7XHJcblxyXG4gIEBDb2x1bW4oeyB0eXBlOiAnZW51bScsIGVudW06IE1vbml0b3JpbmdNZXRyaWMsIG51bGxhYmxlOiBmYWxzZSB9KVxyXG4gIG1ldHJpYzogTW9uaXRvcmluZ01ldHJpYztcclxuXHJcbiAgQE1hbnlUb09uZSgoKSA9PiBVc2VyLCB7IG9uRGVsZXRlOiAnQ0FTQ0FERScgfSlcclxuICBASm9pbkNvbHVtbih7IG5hbWU6ICd1c2VyX2lkJyB9KVxyXG4gIEBJbmRleCgpXHJcbiAgdXNlcjogVXNlcjtcclxuXHJcbiAgQE1hbnlUb09uZSgoKSA9PiBTaXRlLCB7IG9uRGVsZXRlOiAnQ0FTQ0FERScsIG51bGxhYmxlOiBmYWxzZSB9KVxyXG4gIEBKb2luQ29sdW1uKHsgbmFtZTogJ3NpdGVfaWQnIH0pXHJcbiAgQEluZGV4KClcclxuICBzaXRlOiBTaXRlO1xyXG5cclxuICBAQ3JlYXRlRGF0ZUNvbHVtbih7IG5hbWU6ICd0aW1lc3RhbXAnIH0pXHJcbiAgQEluZGV4KClcclxuICB0aW1lc3RhbXA6IERhdGU7XHJcbn1cclxuIl0sInZlcnNpb24iOjN9