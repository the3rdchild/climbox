{"version":3,"names":["cov_vx6k6r4nn","actualCoverage","turf_1","s","require","sofar_availability_points_1","__importDefault","exports","AVAILABLE_POINTS","type","features","default","map","coordinate","f","geometry","coordinates","getSofarNearestAvailablePoint","point","longitude","latitude","nearestPoint","poly","pointCoordinates","booleanPointInPolygon","b"],"sources":["/home/user/climbox/packages/api/src/utils/sofar-availability.ts"],"sourcesContent":["import type { FeatureCollection, Point, Polygon } from 'geojson';\r\nimport { nearestPoint, booleanPointInPolygon } from '@turf/turf';\r\nimport availabilityPoints from './sofar-availability-points';\r\n\r\nexport const AVAILABLE_POINTS: FeatureCollection<Point> = {\r\n  type: 'FeatureCollection',\r\n  features: availabilityPoints.map((coordinate) => ({\r\n    type: 'Feature',\r\n    geometry: {\r\n      type: 'Point',\r\n      coordinates: coordinate,\r\n    },\r\n  })),\r\n};\r\n\r\nexport function getSofarNearestAvailablePoint(point: Point): [number, number] {\r\n  // deconstructing number[] into [number, number] in order to make typescript compiler happy\r\n  const [longitude, latitude] = nearestPoint(point, AVAILABLE_POINTS).geometry\r\n    .coordinates;\r\n\r\n  const poly: Polygon = {\r\n    type: 'Polygon',\r\n    coordinates: [\r\n      [\r\n        [\r\n          ((180 + longitude - 0.25) % 360) - 180,\r\n          ((90 + latitude + 0.25) % 180) - 90,\r\n        ],\r\n        [\r\n          ((180 + longitude - 0.25) % 360) - 180,\r\n          ((90 + latitude - 0.25) % 180) - 90,\r\n        ],\r\n        [\r\n          ((180 + longitude + 0.25) % 360) - 180,\r\n          ((90 + latitude - 0.25) % 180) - 90,\r\n        ],\r\n        [\r\n          ((180 + longitude + 0.25) % 360) - 180,\r\n          ((90 + latitude + 0.25) % 180) - 90,\r\n        ],\r\n\r\n        // first again\r\n        [\r\n          ((180 + longitude - 0.25) % 360) - 180,\r\n          ((90 + latitude + 0.25) % 180) - 90,\r\n        ],\r\n      ],\r\n    ],\r\n  };\r\n\r\n  const pointCoordinates = point.coordinates;\r\n\r\n  return booleanPointInPolygon(point, poly)\r\n    ? (pointCoordinates as [number, number])\r\n    : [longitude, latitude];\r\n}\r\n"],"mappings":"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"}