{"file":"/home/user/climbox/packages/api/src/time-series/latest-data.entity.ts","mappings":";;;;;;;;;;;;AAAA,6CAA8C;AAC9C,qCAOiB;AACjB,+FAAkF;AAClF,wDAA6C;AAC7C,wEAA+D;AAC/D,6DAAkD;AAClD,iDAAwC;AAmCjC,IAAM,UAAU,GAAhB,MAAM,UAAU;CA2BtB,CAAA;AA1BC;IAAC,IAAA,qBAAW,EAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;IAC3B,IAAA,gCAAsB,GAAE;;sCACd;AAEX;IAAC,IAAA,gBAAM,EAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;8BACjB,IAAI;6CAAC;AAEhB;IAAC,IAAA,qBAAW,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;IAC/B,IAAA,gBAAM,EAAC,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;;yCAC7B;AAEd;IAAC,IAAA,mBAAS,EAAC,GAAG,EAAE,CAAC,mBAAI,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;8BAC1D,mBAAI;wCAAC;AAEX;IAAC,IAAA,qBAAW,EAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;IAC5B,IAAA,oBAAU,EAAC,CAAC,UAAsB,EAAE,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC;;0CACzC;AAEf;IAAC,IAAA,mBAAS,EAAC,GAAG,EAAE,CAAC,2CAAe,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;+CACtC;AAEpC;IAAC,IAAA,gBAAM,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,6BAAU,EAAE,CAAC;;0CACxB;AAEnB;IAAC,IAAA,gBAAM,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,qBAAM,EAAE,CAAC;;0CACxB;AA1BJ,UAAU;IAjCtB,IAAA,oBAAU,EAAC;QACV,UAAU,EAAE,CAAC,UAAsB,EAAE,EAAE;YACrC,OAAO,CACL,UAAU;iBACP,kBAAkB,EAAE;iBACpB,MAAM,CACL,qEAAqE,CACtE;iBACA,SAAS,CAAC,QAAQ,CAAC;iBACnB,SAAS,CAAC,WAAW,CAAC;iBACtB,SAAS,CAAC,OAAO,CAAC;iBAClB,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC;iBAC3B,SAAS,CAAC,SAAS,CAAC;iBACpB,SAAS,CAAC,iBAAiB,CAAC;iBAC5B,IAAI,CAAC,+BAAU,EAAE,aAAa,CAAC;iBAC/B,SAAS,CAAC,SAAS,EAAE,SAAS,EAAE,oCAAoC,CAAC;gBACtE,4EAA4E;iBAC3E,KAAK,CAAC,+CAA+C,CAAC;gBACvD,gDAAgD;iBAC/C,OAAO,CACN,wEAAwE,CACzE;iBACA,OAAO,CACN,sEAAsE,CACvE;iBACA,OAAO,CACN,6EAA6E,CAC9E;iBACA,OAAO,CAAC,mDAAmD,EAAE,MAAM,CAAC,CACxE,CAAC;QACJ,CAAC;QACD,YAAY,EAAE,IAAI;KACnB,CAAC;GACW,UAAU,CA2BtB;AA3BY,gCAAU","names":[],"sources":["/home/user/climbox/packages/api/src/time-series/latest-data.entity.ts"],"sourcesContent":["import { ApiProperty } from '@nestjs/swagger';\r\nimport {\r\n  Column,\r\n  DataSource,\r\n  ManyToOne,\r\n  PrimaryGeneratedColumn,\r\n  RelationId,\r\n  ViewEntity,\r\n} from 'typeorm';\r\nimport { SiteSurveyPoint } from '../site-survey-points/site-survey-points.entity';\r\nimport { Site } from '../sites/sites.entity';\r\nimport { SourceType } from '../sites/schemas/source-type.enum';\r\nimport { TimeSeries } from './time-series.entity';\r\nimport { Metric } from './metrics.enum';\r\n\r\n@ViewEntity({\r\n  expression: (dataSource: DataSource) => {\r\n    return (\r\n      dataSource\r\n        .createQueryBuilder()\r\n        .select(\r\n          'DISTINCT ON (metric, type, site_id, survey_point_id) time_series.id',\r\n        )\r\n        .addSelect('metric')\r\n        .addSelect('timestamp')\r\n        .addSelect('value')\r\n        .addSelect('type', 'source')\r\n        .addSelect('site_id')\r\n        .addSelect('survey_point_id')\r\n        .from(TimeSeries, 'time_series')\r\n        .innerJoin('sources', 'sources', 'sources.id = time_series.source_id')\r\n        // Limit data to the past week. Bonus, it makes view refreshes a lot faster.\r\n        .where(\"timestamp >= current_date - INTERVAL '7 days'\")\r\n        // Look a bit further in the past for sonde data\r\n        .orWhere(\r\n          \"type IN ('sonde') AND (timestamp >= current_date - INTERVAL '2 years')\",\r\n        )\r\n        .orWhere(\r\n          \"type IN ('hui') AND (timestamp >= current_date - INTERVAL '2 years')\",\r\n        )\r\n        .orWhere(\r\n          \"type IN ('sheet_data') AND (timestamp >= current_date - INTERVAL '2 years')\",\r\n        )\r\n        .orderBy('metric, type, site_id, survey_point_id, timestamp', 'DESC')\r\n    );\r\n  },\r\n  materialized: true,\r\n})\r\nexport class LatestData {\r\n  @ApiProperty({ example: 1 })\r\n  @PrimaryGeneratedColumn()\r\n  id: number;\r\n\r\n  @Column({ nullable: false })\r\n  timestamp: Date;\r\n\r\n  @ApiProperty({ example: 11.05 })\r\n  @Column({ type: 'float', nullable: false })\r\n  value: number;\r\n\r\n  @ManyToOne(() => Site, { onDelete: 'CASCADE', nullable: false })\r\n  site: Site;\r\n\r\n  @ApiProperty({ example: 15 })\r\n  @RelationId((latestData: LatestData) => latestData.site)\r\n  siteId: number;\r\n\r\n  @ManyToOne(() => SiteSurveyPoint, { onDelete: 'CASCADE', nullable: true })\r\n  surveyPoint: SiteSurveyPoint | null;\r\n\r\n  @Column({ type: 'enum', enum: SourceType })\r\n  source: SourceType;\r\n\r\n  @Column({ type: 'enum', enum: Metric })\r\n  metric: Metric;\r\n}\r\n"],"version":3}