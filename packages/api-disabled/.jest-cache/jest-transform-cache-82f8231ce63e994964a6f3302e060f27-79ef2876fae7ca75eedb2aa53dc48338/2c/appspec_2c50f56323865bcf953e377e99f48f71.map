{"file":"/home/user/climbox/packages/api/test/app.spec.ts","mappings":";;;;;;;;;;;AACA,iDAA6C;AAC7C,6EAAyE;AACzE,wDAAoD;AACpD,0EAAsE;AACtE,0EAAsE;AACtE,8DAA0D;AAC1D,+FAAqF;AACrF,0FAAsF;AACtF,8DAA0D;AAC1D,wDAAoD;AACpD,8DAA0D;AAC1D,uEAAoE;AAEpE,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,MAAM,WAAW,GAAG,0BAAW,CAAC,WAAW,EAAE,CAAC;IAC9C,IAAI,GAAqB,CAAC;IAE1B,SAAS,CAAC,GAAS,EAAE;QACnB,iBAAiB;QACjB,GAAG,GAAG,MAAM,WAAW,CAAC,MAAM,EAAE,CAAC;IACnC,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;QACvC,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gBAAgB,EAAE,GAAG,EAAE;QACxB,MAAM,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,iCAAiC,EAAE,oCAAgB,CAAC,CAAC;IAE9D,QAAQ,CAAC,mBAAmB,EAAE,sBAAS,CAAC,CAAC;IAEzC,QAAQ,CAAC,6CAA6C,EAAE,0CAAgB,CAAC,CAAC;IAE1E,QAAQ,CAAC,+BAA+B,EAAE,kCAAe,CAAC,CAAC;IAE3D,QAAQ,CAAC,gCAAgC,EAAE,kCAAe,CAAC,CAAC;IAE5D,QAAQ,CAAC,uBAAuB,EAAE,0BAAW,CAAC,CAAC;IAE/C,QAAQ,CAAC,2CAA2C,EAAE,4CAAoB,CAAC,CAAC;IAE5E,QAAQ,CAAC,iCAAiC,EAAE,0BAAW,CAAC,CAAC;IAEzD,QAAQ,CAAC,oBAAoB,EAAE,sBAAS,CAAC,CAAC;IAE1C,QAAQ,CAAC,wBAAwB,EAAE,0BAAW,CAAC,CAAC;IAEhD,QAAQ,CAAC,8BAA8B,EAAE,iCAAe,CAAC,CAAC;IAE1D,QAAQ,CAAC,GAAS,EAAE;QAClB,MAAM,WAAW,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC,CAAA,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/home/user/climbox/packages/api/test/app.spec.ts"],"sourcesContent":["import { INestApplication } from '@nestjs/common';\r\nimport { TestService } from './test.service';\r\nimport { healthCheckTests } from '../src/health-check/health-check.spec';\r\nimport { userTests } from '../src/users/users.spec';\r\nimport { collectionTests } from '../src/collections/collections.spec';\r\nimport { timeSeriesTests } from '../src/time-series/time-series.spec';\r\nimport { regionTests } from '../src/regions/regions.spec';\r\nimport { surveyPointTests } from '../src/site-survey-points/site-survey-points.spec';\r\nimport { siteApplicationTests } from '../src/site-applications/site-application.spec';\r\nimport { surveyTests } from '../src/surveys/surveys.spec';\r\nimport { siteTests } from '../src/sites/sites.spec';\r\nimport { sensorTests } from '../src/sensors/sensors.spec';\r\nimport { monitoringTests } from '../src/monitoring/monitoring.spec';\r\n\r\ndescribe('AppController (e2e)', () => {\r\n  const testService = TestService.getInstance();\r\n  let app: INestApplication;\r\n\r\n  beforeAll(async () => {\r\n    // Initialize app\r\n    app = await testService.getApp();\r\n  });\r\n\r\n  it('timezone should always be UTC', () => {\r\n    expect(new Date().getTimezoneOffset()).toBe(0);\r\n  });\r\n\r\n  it('App is defined', () => {\r\n    expect(app).toBeDefined();\r\n  });\r\n\r\n  describe('HealthCheck (e2e) /health-check', healthCheckTests);\r\n\r\n  describe('User (e2e) /users', userTests);\r\n\r\n  describe('Site SurveyPoints (e2e) /site-survey-points', surveyPointTests);\r\n\r\n  describe('Collection (e2e) /collections', collectionTests);\r\n\r\n  describe('Time Series (e2e) /time-series', timeSeriesTests);\r\n\r\n  describe('Region (e2e) /regions', regionTests);\r\n\r\n  describe('Site Application {e2e) /site-applications', siteApplicationTests);\r\n\r\n  describe('Survey (e2e) /sites/:id/surveys', surveyTests);\r\n\r\n  describe('Sites (e2e) /sites', siteTests);\r\n\r\n  describe('Sensors (e2e) /sensors', sensorTests);\r\n\r\n  describe('Monitoring (e2e) /monitoring', monitoringTests);\r\n\r\n  afterAll(async () => {\r\n    await testService.cleanUpApp();\r\n  });\r\n});\r\n"],"version":3}