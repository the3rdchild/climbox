{"file":"/home/user/climbox/packages/api/src/utils/sofar-availability.test.ts","mappings":";;AAAA,+CAA4C;AAC5C,6DAG8B;AAE9B,IAAI,CAAC,6CAA6C,EAAE,GAAG,EAAE;IACvD,MAAM,CAAC,qCAAgB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IACxD,MAAM,CAAC,qCAAgB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC;AACvE,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,sCAAsC,EAAE,GAAG,EAAE;IAChD,MAAM,KAAK,GAAG,IAAA,yBAAW,EAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;IAC3C,MAAM,UAAU,GAAG,IAAA,kDAA6B,EAAC,KAAK,CAAC,CAAC;IACxD,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,aAAa,EAAE,GAAG,EAAE;IACvB,MAAM,KAAK,GAAG,IAAA,yBAAW,EAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAChC,MAAM,UAAU,GAAG,IAAA,kDAA6B,EAAC,KAAK,CAAC,CAAC;IACxD,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC","names":[],"sources":["/home/user/climbox/packages/api/src/utils/sofar-availability.test.ts"],"sourcesContent":["import { createPoint } from './coordinates';\r\nimport {\r\n  AVAILABLE_POINTS,\r\n  getSofarNearestAvailablePoint,\r\n} from './sofar-availability';\r\n\r\ntest('getting Sofar Wave Model availability zones', () => {\r\n  expect(AVAILABLE_POINTS.type).toBe('FeatureCollection');\r\n  expect(AVAILABLE_POINTS.features.length).toBeGreaterThanOrEqual(100);\r\n});\r\n\r\ntest('snapping point to availability zones', () => {\r\n  const point = createPoint(150.091, -5.432);\r\n  const validPoint = getSofarNearestAvailablePoint(point);\r\n  expect(validPoint).toEqual([150, -5]);\r\n});\r\n\r\ntest('null island', () => {\r\n  const point = createPoint(0, 0);\r\n  const validPoint = getSofarNearestAvailablePoint(point);\r\n  expect(validPoint).toEqual([0, 0]);\r\n});\r\n"],"version":3}