aad0c8a6f7954597ae9106b22a4fc370
"use strict";

/* istanbul ignore next */
function cov_1bq6n67btm() {
  var path = "/home/user/climbox/packages/api/src/workers/dailyData.ts";
  var hash = "e2d6fe6a58d9fb167db79b0e2feec5070763d377";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/user/climbox/packages/api/src/workers/dailyData.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 22
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "13": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "14": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "15": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 206
        }
      },
      "16": {
        start: {
          line: 17,
          column: 17
        },
        end: {
          line: 17,
          column: 34
        }
      },
      "17": {
        start: {
          line: 18,
          column: 18
        },
        end: {
          line: 18,
          column: 36
        }
      },
      "18": {
        start: {
          line: 19,
          column: 19
        },
        end: {
          line: 19,
          column: 55
        }
      },
      "19": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 32
        }
      },
      "20": {
        start: {
          line: 21,
          column: 17
        },
        end: {
          line: 21,
          column: 42
        }
      },
      "21": {
        start: {
          line: 22,
          column: 23
        },
        end: {
          line: 22,
          column: 55
        }
      },
      "22": {
        start: {
          line: 23,
          column: 28
        },
        end: {
          line: 23,
          column: 65
        }
      },
      "23": {
        start: {
          line: 24,
          column: 15
        },
        end: {
          line: 24,
          column: 39
        }
      },
      "24": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 41
        }
      },
      "25": {
        start: {
          line: 26,
          column: 22
        },
        end: {
          line: 26,
          column: 53
        }
      },
      "26": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 49
        }
      },
      "27": {
        start: {
          line: 28,
          column: 25
        },
        end: {
          line: 28,
          column: 59
        }
      },
      "28": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 51
        }
      },
      "29": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 50,
          column: 7
        }
      },
      "30": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "31": {
        start: {
          line: 34,
          column: 43
        },
        end: {
          line: 34,
          column: 45
        }
      },
      "32": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 38,
          column: 14
        }
      },
      "33": {
        start: {
          line: 41,
          column: 38
        },
        end: {
          line: 41,
          column: 249
        }
      },
      "34": {
        start: {
          line: 44,
          column: 44
        },
        end: {
          line: 44,
          column: 89
        }
      },
      "35": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 48,
          column: 15
        }
      },
      "36": {
        start: {
          line: 52,
          column: 0
        },
        end: {
          line: 52,
          column: 52
        }
      },
      "37": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 77,
          column: 7
        }
      },
      "38": {
        start: {
          line: 55,
          column: 65
        },
        end: {
          line: 55,
          column: 69
        }
      },
      "39": {
        start: {
          line: 56,
          column: 46
        },
        end: {
          line: 58,
          column: 33
        }
      },
      "40": {
        start: {
          line: 59,
          column: 62
        },
        end: {
          line: 65,
          column: 10
        }
      },
      "41": {
        start: {
          line: 67,
          column: 43
        },
        end: {
          line: 67,
          column: 123
        }
      },
      "42": {
        start: {
          line: 68,
          column: 37
        },
        end: {
          line: 68,
          column: 99
        }
      },
      "43": {
        start: {
          line: 69,
          column: 32
        },
        end: {
          line: 69,
          column: 206
        }
      },
      "44": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 76,
          column: 10
        }
      },
      "45": {
        start: {
          line: 79,
          column: 0
        },
        end: {
          line: 79,
          column: 36
        }
      },
      "46": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 81,
          column: 95
        }
      },
      "47": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 95,
          column: 7
        }
      },
      "48": {
        start: {
          line: 85,
          column: 25
        },
        end: {
          line: 85,
          column: 39
        }
      },
      "49": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 49
        }
      },
      "50": {
        start: {
          line: 87,
          column: 22
        },
        end: {
          line: 93,
          column: 24
        }
      },
      "51": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 99
        }
      },
      "52": {
        start: {
          line: 97,
          column: 0
        },
        end: {
          line: 97,
          column: 50
        }
      },
      "53": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 99,
          column: 93
        }
      },
      "54": {
        start: {
          line: 101,
          column: 0
        },
        end: {
          line: 101,
          column: 34
        }
      },
      "55": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 118,
          column: 7
        }
      },
      "56": {
        start: {
          line: 104,
          column: 22
        },
        end: {
          line: 113,
          column: 19
        }
      },
      "57": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "58": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 65
        }
      },
      "59": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 65
        }
      },
      "60": {
        start: {
          line: 117,
          column: 56
        },
        end: {
          line: 117,
          column: 63
        }
      },
      "61": {
        start: {
          line: 120,
          column: 0
        },
        end: {
          line: 120,
          column: 70
        }
      },
      "62": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 167,
          column: 7
        }
      },
      "63": {
        start: {
          line: 124,
          column: 31
        },
        end: {
          line: 124,
          column: 76
        }
      },
      "64": {
        start: {
          line: 125,
          column: 36
        },
        end: {
          line: 125,
          column: 91
        }
      },
      "65": {
        start: {
          line: 126,
          column: 25
        },
        end: {
          line: 132,
          column: 81
        }
      },
      "66": {
        start: {
          line: 133,
          column: 22
        },
        end: {
          line: 133,
          column: 32
        }
      },
      "67": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 98
        }
      },
      "68": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 165,
          column: 32
        }
      },
      "69": {
        start: {
          line: 135,
          column: 57
        },
        end: {
          line: 165,
          column: 10
        }
      },
      "70": {
        start: {
          line: 136,
          column: 35
        },
        end: {
          line: 136,
          column: 70
        }
      },
      "71": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 141,
          column: 13
        }
      },
      "72": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 88
        }
      },
      "73": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 23
        }
      },
      "74": {
        start: {
          line: 143,
          column: 37
        },
        end: {
          line: 143,
          column: 100
        }
      },
      "75": {
        start: {
          line: 144,
          column: 27
        },
        end: {
          line: 144,
          column: 188
        }
      },
      "76": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 164,
          column: 13
        }
      },
      "77": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 55
        }
      },
      "78": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 163,
          column: 17
        }
      },
      "79": {
        start: {
          line: 152,
          column: 41
        },
        end: {
          line: 152,
          column: 85
        }
      },
      "80": {
        start: {
          line: 153,
          column: 20
        },
        end: {
          line: 159,
          column: 35
        }
      },
      "81": {
        start: {
          line: 162,
          column: 20
        },
        end: {
          line: 162,
          column: 116
        }
      },
      "82": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 126
        }
      },
      "83": {
        start: {
          line: 169,
          column: 0
        },
        end: {
          line: 169,
          column: 46
        }
      },
      "84": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 182,
          column: 7
        }
      },
      "85": {
        start: {
          line: 172,
          column: 22
        },
        end: {
          line: 172,
          column: 57
        }
      },
      "86": {
        start: {
          line: 173,
          column: 26
        },
        end: {
          line: 173,
          column: 59
        }
      },
      "87": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 72
        }
      },
      "88": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "89": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 70
        }
      },
      "90": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 51
        }
      },
      "91": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 33
        }
      },
      "92": {
        start: {
          line: 184,
          column: 0
        },
        end: {
          line: 184,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 11,
            column: 57
          }
        },
        loc: {
          start: {
            line: 11,
            column: 71
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "8": {
        name: "getDegreeHeatingDays",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 29
          }
        },
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 30
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 31,
            column: 43
          },
          end: {
            line: 31,
            column: 44
          }
        },
        loc: {
          start: {
            line: 31,
            column: 56
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 31
      },
      "10": {
        name: "getDailyData",
        decl: {
          start: {
            line: 53,
            column: 9
          },
          end: {
            line: 53,
            column: 21
          }
        },
        loc: {
          start: {
            line: 53,
            column: 39
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 53
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 54,
            column: 43
          },
          end: {
            line: 54,
            column: 44
          }
        },
        loc: {
          start: {
            line: 54,
            column: 56
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 54
      },
      "12": {
        name: "hasNoData",
        decl: {
          start: {
            line: 80,
            column: 9
          },
          end: {
            line: 80,
            column: 18
          }
        },
        loc: {
          start: {
            line: 80,
            column: 25
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 80
      },
      "13": {
        name: "getWeeklyAlertLevel",
        decl: {
          start: {
            line: 83,
            column: 9
          },
          end: {
            line: 83,
            column: 28
          }
        },
        loc: {
          start: {
            line: 83,
            column: 62
          },
          end: {
            line: 96,
            column: 1
          }
        },
        line: 83
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 84,
            column: 43
          },
          end: {
            line: 84,
            column: 44
          }
        },
        loc: {
          start: {
            line: 84,
            column: 56
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 84
      },
      "15": {
        name: "getMaxAlert",
        decl: {
          start: {
            line: 98,
            column: 9
          },
          end: {
            line: 98,
            column: 20
          }
        },
        loc: {
          start: {
            line: 98,
            column: 56
          },
          end: {
            line: 100,
            column: 1
          }
        },
        line: 98
      },
      "16": {
        name: "getSitesIdsWithoutDataForDate",
        decl: {
          start: {
            line: 102,
            column: 9
          },
          end: {
            line: 102,
            column: 38
          }
        },
        loc: {
          start: {
            line: 102,
            column: 66
          },
          end: {
            line: 119,
            column: 1
          }
        },
        line: 102
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 103,
            column: 43
          },
          end: {
            line: 103,
            column: 44
          }
        },
        loc: {
          start: {
            line: 103,
            column: 56
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 103
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 117,
            column: 46
          },
          end: {
            line: 117,
            column: 47
          }
        },
        loc: {
          start: {
            line: 117,
            column: 56
          },
          end: {
            line: 117,
            column: 63
          }
        },
        line: 117
      },
      "19": {
        name: "getSitesDailyData",
        decl: {
          start: {
            line: 122,
            column: 9
          },
          end: {
            line: 122,
            column: 26
          }
        },
        loc: {
          start: {
            line: 122,
            column: 59
          },
          end: {
            line: 168,
            column: 1
          }
        },
        line: 122
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 123,
            column: 43
          },
          end: {
            line: 123,
            column: 44
          }
        },
        loc: {
          start: {
            line: 123,
            column: 56
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 123
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 135,
            column: 47
          },
          end: {
            line: 135,
            column: 48
          }
        },
        loc: {
          start: {
            line: 135,
            column: 57
          },
          end: {
            line: 165,
            column: 10
          }
        },
        line: 135
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 135,
            column: 89
          },
          end: {
            line: 135,
            column: 90
          }
        },
        loc: {
          start: {
            line: 135,
            column: 102
          },
          end: {
            line: 165,
            column: 9
          }
        },
        line: 135
      },
      "23": {
        name: "runDailyUpdate",
        decl: {
          start: {
            line: 170,
            column: 9
          },
          end: {
            line: 170,
            column: 23
          }
        },
        loc: {
          start: {
            line: 170,
            column: 36
          },
          end: {
            line: 183,
            column: 1
          }
        },
        line: 170
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 171,
            column: 43
          },
          end: {
            line: 171,
            column: 44
          }
        },
        loc: {
          start: {
            line: 171,
            column: 56
          },
          end: {
            line: 182,
            column: 5
          }
        },
        line: 171
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 11,
            column: 22
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 27
          }
        }, {
          start: {
            line: 11,
            column: 31
          },
          end: {
            line: 11,
            column: 51
          }
        }, {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 11
      },
      "6": {
        loc: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 12,
            column: 37
          },
          end: {
            line: 12,
            column: 40
          }
        }, {
          start: {
            line: 12,
            column: 43
          },
          end: {
            line: 12,
            column: 61
          }
        }],
        line: 12
      },
      "7": {
        loc: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 15
          }
        }, {
          start: {
            line: 12,
            column: 19
          },
          end: {
            line: 12,
            column: 33
          }
        }],
        line: 12
      },
      "8": {
        loc: {
          start: {
            line: 45,
            column: 20
          },
          end: {
            line: 48,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 20
          },
          end: {
            line: 45,
            column: 43
          }
        }, {
          start: {
            line: 45,
            column: 47
          },
          end: {
            line: 48,
            column: 13
          }
        }],
        line: 45
      },
      "9": {
        loc: {
          start: {
            line: 56,
            column: 46
          },
          end: {
            line: 58,
            column: 33
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 57,
            column: 14
          },
          end: {
            line: 57,
            column: 45
          }
        }, {
          start: {
            line: 58,
            column: 14
          },
          end: {
            line: 58,
            column: 33
          }
        }],
        line: 56
      },
      "10": {
        loc: {
          start: {
            line: 67,
            column: 43
          },
          end: {
            line: 67,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 43
          },
          end: {
            line: 67,
            column: 67
          }
        }, {
          start: {
            line: 67,
            column: 71
          },
          end: {
            line: 67,
            column: 123
          }
        }],
        line: 67
      },
      "11": {
        loc: {
          start: {
            line: 68,
            column: 37
          },
          end: {
            line: 68,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 37
          },
          end: {
            line: 68,
            column: 63
          }
        }, {
          start: {
            line: 68,
            column: 67
          },
          end: {
            line: 68,
            column: 99
          }
        }],
        line: 68
      },
      "12": {
        loc: {
          start: {
            line: 69,
            column: 112
          },
          end: {
            line: 69,
            column: 205
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 69,
            column: 173
          },
          end: {
            line: 69,
            column: 179
          }
        }, {
          start: {
            line: 69,
            column: 182
          },
          end: {
            line: 69,
            column: 205
          }
        }],
        line: 69
      },
      "13": {
        loc: {
          start: {
            line: 69,
            column: 112
          },
          end: {
            line: 69,
            column: 170
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 112
          },
          end: {
            line: 69,
            column: 138
          }
        }, {
          start: {
            line: 69,
            column: 142
          },
          end: {
            line: 69,
            column: 170
          }
        }],
        line: 69
      },
      "14": {
        loc: {
          start: {
            line: 75,
            column: 31
          },
          end: {
            line: 75,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 75,
            column: 92
          },
          end: {
            line: 75,
            column: 98
          }
        }, {
          start: {
            line: 75,
            column: 101
          },
          end: {
            line: 75,
            column: 124
          }
        }],
        line: 75
      },
      "15": {
        loc: {
          start: {
            line: 75,
            column: 31
          },
          end: {
            line: 75,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 31
          },
          end: {
            line: 75,
            column: 57
          }
        }, {
          start: {
            line: 75,
            column: 61
          },
          end: {
            line: 75,
            column: 89
          }
        }],
        line: 75
      },
      "16": {
        loc: {
          start: {
            line: 94,
            column: 15
          },
          end: {
            line: 94,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 94,
            column: 64
          },
          end: {
            line: 94,
            column: 86
          }
        }, {
          start: {
            line: 94,
            column: 89
          },
          end: {
            line: 94,
            column: 98
          }
        }],
        line: 94
      },
      "17": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "18": {
        loc: {
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 114,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 114,
            column: 53
          },
          end: {
            line: 114,
            column: 59
          }
        }, {
          start: {
            line: 114,
            column: 62
          },
          end: {
            line: 114,
            column: 76
          }
        }],
        line: 114
      },
      "19": {
        loc: {
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 114,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 114,
            column: 28
          }
        }, {
          start: {
            line: 114,
            column: 32
          },
          end: {
            line: 114,
            column: 50
          }
        }],
        line: 114
      },
      "20": {
        loc: {
          start: {
            line: 126,
            column: 84
          },
          end: {
            line: 132,
            column: 16
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 127,
            column: 14
          },
          end: {
            line: 131,
            column: 13
          }
        }, {
          start: {
            line: 132,
            column: 14
          },
          end: {
            line: 132,
            column: 16
          }
        }],
        line: 126
      },
      "21": {
        loc: {
          start: {
            line: 126,
            column: 84
          },
          end: {
            line: 126,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 84
          },
          end: {
            line: 126,
            column: 91
          }
        }, {
          start: {
            line: 126,
            column: 95
          },
          end: {
            line: 126,
            column: 113
          }
        }],
        line: 126
      },
      "22": {
        loc: {
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 141,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 141,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "23": {
        loc: {
          start: {
            line: 151,
            column: 16
          },
          end: {
            line: 163,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 16
          },
          end: {
            line: 163,
            column: 17
          }
        }, {
          start: {
            line: 161,
            column: 21
          },
          end: {
            line: 163,
            column: 17
          }
        }],
        line: 151
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    inputSourceMap: {
      file: "/home/user/climbox/packages/api/src/workers/dailyData.ts",
      mappings: ";;;;;;;;;;;;;;;AAAA,kDAAkD;AAClD,mCAAyE;AACzE,qCAAqD;AAErD,wDAAgC;AAChC,iCAAiC;AACjC,2CAAwC;AACxC,wDAA6C;AAC7C,kEAAuD;AACvD,wCAAuC;AACvC,0CAAqE;AACrE,sDAAkE;AAElE,kDAAmE;AACnE,4DAA8D;AAC9D,oDAAoD;AAEpD,SAAsB,oBAAoB,CACxC,QAAgB,EAChB,SAAiB,EACjB,SAAe,EACf,cAA6B;;QAE7B,IAAI;YACF,wCAAwC;YACxC,MAAM,sBAAsB,GAAG,EAAc,CAAC;YAC9C,OAAO;gBACL,KAAK,EAAE,IAAA,wCAA0B,EAAC,sBAAsB,EAAE,cAAc,CAAC;gBACzE,SAAS,EAAE,SAAS,CAAC,WAAW,EAAE;aACnC,CAAC;SACH;QAAC,WAAM;YACN,MAAM,iBAAiB,GAAG,MAAM,IAAA,4BAAoB,EAClD,uBAAW,CAAC,kBAAkB,EAC9B,4BAAgB,CAAC,uBAAW,CAAC,kBAAkB,CAAC,CAAC,iBAAiB,EAClE,QAAQ,EACR,SAAS,EACT,SAAS,EACT,EAAE,CACH,CAAC;YAEF,uCAAuC;YACvC,wDAAwD;YACxD,MAAM,uBAAuB,GAAG,IAAA,qBAAa,EAAC,iBAAiB,CAAC,CAAC;YACjE,OAAO,CACL,uBAAuB,IAAI;gBACzB,KAAK,EAAE,uBAAuB,CAAC,KAAK,GAAG,CAAC;gBACxC,SAAS,EAAE,uBAAuB,CAAC,SAAS;aAC7C,CACF,CAAC;SACH;IACH,CAAC;CAAA;AAjCD,oDAiCC;AAED,SAAsB,YAAY,CAChC,IAAU,EACV,SAAe;;QAEf,MAAM,EAAE,OAAO,EAAE,cAAc,EAAE,mBAAmB,EAAE,GAAG,IAAI,CAAC;QAC9D,MAAM,CAAC,aAAa,EAAE,YAAY,CAAC,GAAG,mBAAmB;YACvD,CAAC,CAAE,mBAA6B,CAAC,WAAW;YAC5C,CAAC,CAAE,OAAiB,CAAC,WAAW,CAAC;QAEnC,MAAM,CAAC,iBAAiB,EAAE,wBAAwB,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;YACtE,gCAAgC;YAChC,oEAAoE;YACpE,oBAAoB,CAClB,YAAY,EACZ,aAAa,EACb,SAAS,EACT,cAAc,CACf;YACD,IAAA,4BAAoB,EAClB,uBAAW,CAAC,kBAAkB,EAC9B,4BAAgB,CAAC,uBAAW,CAAC,kBAAkB,CAAC;iBAC7C,6BAA6B,EAChC,YAAY,EACZ,aAAa,EACb,SAAS,EACT,EAAE,CACH;SACF,CAAC,CAAC;QAEH,2BAA2B;QAC3B,MAAM,0BAA0B,GAC9B,wBAAwB,IAAI,IAAA,qBAAa,EAAC,wBAAwB,CAAC,CAAC;QACtE,MAAM,oBAAoB,GACxB,0BAA0B,IAAI,0BAA0B,CAAC,KAAK,CAAC;QAEjE,MAAM,eAAe,GAAG,IAAA,oCAAmB,EACzC,cAAc,EACd,oBAAoB,EACpB,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,KAAK,CACzB,CAAC;QAEF,OAAO;YACL,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE;YACrB,IAAI,EAAE,SAAS;YACf,eAAe;YACf,oBAAoB;YACpB,iBAAiB,EAAE,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,KAAK;SAC5C,CAAC;IACJ,CAAC;CAAA;AAhDD,oCAgDC;AAED,SAAS,SAAS,CAAC,IAAoB;IACrC,OAAO,MAAM,CAAC,MAAM,CAAC,IAAA,aAAI,EAAC,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,oBAAW,CAAC,CAAC;AACtE,CAAC;AAED,SAAsB,mBAAmB,CACvC,mBAA0C,EAC1C,IAAU,EACV,IAAU;;QAEV,MAAM,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QAChC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QACzC,MAAM,KAAK,GAAG,MAAM,mBAAmB;aACpC,kBAAkB,CAAC,WAAW,CAAC;aAC/B,MAAM,CAAC,gCAAgC,EAAE,kBAAkB,CAAC;aAC5D,QAAQ,CAAC,6BAA6B,EAAE,EAAE,QAAQ,EAAE,CAAC;aACrD,QAAQ,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,CAAC;aAC7C,QAAQ,CAAC,wBAAwB,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC;aACrD,SAAS,EAAE,CAAC;QAEf,OAAO,IAAA,iBAAQ,EAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC;IAC/E,CAAC;CAAA;AAhBD,kDAgBC;AAED,SAAgB,WAAW,CACzB,eAAwB,EACxB,gBAAyB;IAEzB,OAAO,IAAA,aAAM,EAAC,CAAC,gBAAgB,EAAE,eAAe,CAAC,CAAC,MAAM,CAAC,iBAAQ,CAAC,CAAC,CAAC;AACtE,CAAC;AALD,kCAKC;AAED,SAAsB,6BAA6B,CACjD,UAAsB,EACtB,IAAU,EACV,OAAkB;;QAElB,MAAM,KAAK,GAAG,UAAU;aACrB,aAAa,CAAC,mBAAI,CAAC;aACnB,kBAAkB,CAAC,GAAG,CAAC;aACvB,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC;aACpB,KAAK,CACJ;;;;;QAKE,EACF,EAAE,IAAI,EAAE,CACT,CAAC;QAEJ,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,EAAE;YACnB,KAAK,CAAC,QAAQ,CAAC,uBAAuB,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;SACtD;QAED,OAAO,CAAC,MAAM,KAAK,CAAC,UAAU,EAAkB,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC3E,CAAC;CAAA;AAxBD,sEAwBC;AAED,+BAA+B;AAC/B,SAAsB,iBAAiB,CACrC,UAAsB,EACtB,SAAe,EACf,OAAkB;;QAElB,MAAM,cAAc,GAAG,UAAU,CAAC,aAAa,CAAC,mBAAI,CAAC,CAAC;QACtD,MAAM,mBAAmB,GAAG,UAAU,CAAC,aAAa,CAAC,6BAAS,CAAC,CAAC;QAChE,MAAM,QAAQ,GAAG,MAAM,cAAc,CAAC,IAAI,iCACrC,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC;YAC/B,CAAC,CAAC;gBACE,KAAK,EAAE;oBACL,EAAE,EAAE,IAAA,YAAE,EAAC,OAAO,CAAC;iBAChB;aACF;YACH,CAAC,CAAC,EAAE,CAAC,KACP,MAAM,EAAE,IAAA,0BAAa,EAAC,cAAc,CAAC,IACrC,CAAC;QACH,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,eAAM,CAAC,GAAG,CACR,YAAY,QAAQ,CAAC,MAAM,cAAc,SAAS,CAAC,YAAY,EAAE,GAAG,CACrE,CAAC;QACF,MAAM,kBAAQ,CAAC,GAAG,CAChB,QAAQ,EACR,CAAO,IAAI,EAAE,EAAE;YACb,MAAM,cAAc,GAAG,MAAM,YAAY,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAE3D,qDAAqD;YACrD,IAAI,SAAS,CAAC,cAAc,CAAC,EAAE;gBAC7B,eAAM,CAAC,GAAG,CAAC,sCAAsC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;gBAC/D,OAAO;aACR;YAED,+BAA+B;YAC/B,MAAM,gBAAgB,GAAG,MAAM,mBAAmB,CAChD,mBAAmB,EACnB,SAAS,EACT,IAAI,CACL,CAAC;YAEF,MAAM,MAAM,GAAG,mBAAmB,CAAC,MAAM,iCACpC,cAAc,KACjB,gBAAgB,EAAE,WAAW,CAC3B,cAAc,CAAC,eAAe,EAC9B,gBAAgB,CACjB,IACD,CAAC;YACH,IAAI;gBACF,gCAAgC;gBAChC,MAAM,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACxC;YAAC,OAAO,GAAG,EAAE;gBACZ,2BAA2B;gBAC3B,IAAI,IAAA,YAAG,EAAC,GAAG,EAAE,YAAY,CAAC,KAAK,oBAAoB,EAAE;oBACnD,MAAM,YAAY,GAAG,IAAA,eAAM,EAAC,MAAM,EAAE,cAAK,CAAC,CAAC;oBAC3C,MAAM,mBAAmB;yBACtB,kBAAkB,CAAC,WAAW,CAAC;yBAC/B,MAAM,EAAE;yBACR,KAAK,CAAC,oBAAoB,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC;yBACjD,QAAQ,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC;yBAC3D,GAAG,CAAC,YAAY,CAAC;yBACjB,OAAO,EAAE,CAAC;iBACd;qBAAM;oBACL,OAAO,CAAC,KAAK,CACX,gCACE,IAAI,CAAC,EACP,MAAM,SAAS,CAAC,YAAY,EAAE,KAAK,GAAG,GAAG,CAC1C,CAAC;iBACH;aACF;QACH,CAAC,CAAA,EACD,EAAE,WAAW,EAAE,CAAC,EAAE,CACnB,CAAC;QACF,eAAM,CAAC,GAAG,CACR,WAAW,QAAQ,CAAC,MAAM,aACxB,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,IAC7C,UAAU,CACX,CAAC;IACJ,CAAC;CAAA;AA5ED,8CA4EC;AAED,SAAsB,cAAc,CAAC,UAAsB;;QACzD,MAAM,KAAK,GAAG,gBAAQ,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAE1C,MAAM,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;QACpD,OAAO,CAAC,GAAG,CAAC,mCAAmC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;QAChE,IAAI;YACF,MAAM,iBAAiB,CAAC,UAAU,EAAE,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC1D,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;SACxC;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACtB;IACH,CAAC;CAAA;AAXD,wCAWC",
      names: [],
      sources: ["/home/user/climbox/packages/api/src/workers/dailyData.ts"],
      sourcesContent: ["/** Worker to process daily data for all sites. */\r\nimport { get, isNil, isNumber, isUndefined, omit, omitBy } from 'lodash';\r\nimport { DataSource, In, Repository } from 'typeorm';\r\nimport { Point } from 'geojson';\r\nimport Bluebird from 'bluebird';\r\nimport { DateTime } from 'luxon';\r\nimport { Logger } from '@nestjs/common';\r\nimport { Site } from '../sites/sites.entity';\r\nimport { DailyData } from '../sites/daily-data.entity';\r\nimport { getMax } from '../utils/math';\r\nimport { getLatestData, getSofarHindcastData } from '../utils/sofar';\r\nimport { calculateDegreeHeatingDays } from '../utils/temperature';\r\nimport { SofarDailyData, ValueWithTimestamp } from '../utils/sofar.types';\r\nimport { SofarModels, sofarVariableIDs } from '../utils/constants';\r\nimport { calculateAlertLevel } from '../utils/bleachingAlert';\r\nimport { getAllColumns } from '../utils/site.utils';\r\n\r\nexport async function getDegreeHeatingDays(\r\n  latitude: number,\r\n  longitude: number,\r\n  endOfDate: Date,\r\n  maxMonthlyMean: number | null,\r\n): Promise<ValueWithTimestamp | undefined> {\r\n  try {\r\n    // TODO - Get data for the past 84 days.\r\n    const seaSurfaceTemperatures = [] as number[];\r\n    return {\r\n      value: calculateDegreeHeatingDays(seaSurfaceTemperatures, maxMonthlyMean),\r\n      timestamp: endOfDate.toISOString(),\r\n    };\r\n  } catch {\r\n    const degreeHeatingWeek = await getSofarHindcastData(\r\n      SofarModels.NOAACoralReefWatch,\r\n      sofarVariableIDs[SofarModels.NOAACoralReefWatch].degreeHeatingWeek,\r\n      latitude,\r\n      longitude,\r\n      endOfDate,\r\n      96,\r\n    );\r\n\r\n    // Check if there are any data returned\r\n    // Grab the last one and convert it to degreeHeatingDays\r\n    const latestDegreeHeatingWeek = getLatestData(degreeHeatingWeek);\r\n    return (\r\n      latestDegreeHeatingWeek && {\r\n        value: latestDegreeHeatingWeek.value * 7,\r\n        timestamp: latestDegreeHeatingWeek.timestamp,\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function getDailyData(\r\n  site: Site,\r\n  endOfDate: Date,\r\n): Promise<SofarDailyData> {\r\n  const { polygon, maxMonthlyMean, nearestNOAALocation } = site;\r\n  const [NOAALongitude, NOAALatitude] = nearestNOAALocation\r\n    ? (nearestNOAALocation as Point).coordinates\r\n    : (polygon as Point).coordinates;\r\n\r\n  const [degreeHeatingDays, satelliteTemperatureData] = await Promise.all([\r\n    // Calculate Degree Heating Days\r\n    // Calculating Degree Heating Days requires exactly 84 days of data.\r\n    getDegreeHeatingDays(\r\n      NOAALatitude,\r\n      NOAALongitude,\r\n      endOfDate,\r\n      maxMonthlyMean,\r\n    ),\r\n    getSofarHindcastData(\r\n      SofarModels.NOAACoralReefWatch,\r\n      sofarVariableIDs[SofarModels.NOAACoralReefWatch]\r\n        .analysedSeaSurfaceTemperature,\r\n      NOAALatitude,\r\n      NOAALongitude,\r\n      endOfDate,\r\n      96,\r\n    ),\r\n  ]);\r\n\r\n  // Get satelliteTemperature\r\n  const latestSatelliteTemperature =\r\n    satelliteTemperatureData && getLatestData(satelliteTemperatureData);\r\n  const satelliteTemperature =\r\n    latestSatelliteTemperature && latestSatelliteTemperature.value;\r\n\r\n  const dailyAlertLevel = calculateAlertLevel(\r\n    maxMonthlyMean,\r\n    satelliteTemperature,\r\n    degreeHeatingDays?.value,\r\n  );\r\n\r\n  return {\r\n    site: { id: site.id },\r\n    date: endOfDate,\r\n    dailyAlertLevel,\r\n    satelliteTemperature,\r\n    degreeHeatingDays: degreeHeatingDays?.value,\r\n  };\r\n}\r\n\r\nfunction hasNoData(data: SofarDailyData) {\r\n  return Object.values(omit(data, 'site', 'date')).every(isUndefined);\r\n}\r\n\r\nexport async function getWeeklyAlertLevel(\r\n  dailyDataRepository: Repository<DailyData>,\r\n  date: Date,\r\n  site: Site,\r\n): Promise<number | undefined> {\r\n  const pastWeek = new Date(date);\r\n  pastWeek.setDate(pastWeek.getDate() - 6);\r\n  const query = await dailyDataRepository\r\n    .createQueryBuilder('dailyData')\r\n    .select('MAX(dailyData.dailyAlertLevel)', 'weeklyAlertLevel')\r\n    .andWhere('dailyData.date >= :pastWeek', { pastWeek })\r\n    .andWhere('dailyData.date <= :date', { date })\r\n    .andWhere('dailyData.site = :site', { site: site.id })\r\n    .getRawOne();\r\n\r\n  return isNumber(query.weeklyAlertLevel) ? query.weeklyAlertLevel : undefined;\r\n}\r\n\r\nexport function getMaxAlert(\r\n  dailyAlertLevel?: number,\r\n  weeklyAlertLevel?: number,\r\n) {\r\n  return getMax([weeklyAlertLevel, dailyAlertLevel].filter(isNumber));\r\n}\r\n\r\nexport async function getSitesIdsWithoutDataForDate(\r\n  dataSource: DataSource,\r\n  date: Date,\r\n  siteIds?: number[],\r\n): Promise<number[]> {\r\n  const query = dataSource\r\n    .getRepository(Site)\r\n    .createQueryBuilder('s')\r\n    .select('s.id', 'id')\r\n    .where(\r\n      `NOT EXISTS (\r\n        SELECT 1\r\n        FROM daily_data dd\r\n        WHERE dd.site_id = s.id\r\n        AND dd.date = :date\r\n      )`,\r\n      { date },\r\n    );\r\n\r\n  if (siteIds?.length) {\r\n    query.andWhere('s.id IN (:...siteIds)', { siteIds });\r\n  }\r\n\r\n  return (await query.getRawMany<{ id: number }>()).map((site) => site.id);\r\n}\r\n\r\n/* eslint-disable no-console */\r\nexport async function getSitesDailyData(\r\n  dataSource: DataSource,\r\n  endOfDate: Date,\r\n  siteIds?: number[],\r\n) {\r\n  const siteRepository = dataSource.getRepository(Site);\r\n  const dailyDataRepository = dataSource.getRepository(DailyData);\r\n  const allSites = await siteRepository.find({\r\n    ...(siteIds && siteIds.length > 0\r\n      ? {\r\n          where: {\r\n            id: In(siteIds),\r\n          },\r\n        }\r\n      : {}),\r\n    select: getAllColumns(siteRepository),\r\n  });\r\n  const start = new Date();\r\n  Logger.log(\r\n    `Updating ${allSites.length} sites for ${endOfDate.toDateString()}.`,\r\n  );\r\n  await Bluebird.map(\r\n    allSites,\r\n    async (site) => {\r\n      const dailyDataInput = await getDailyData(site, endOfDate);\r\n\r\n      // If no data returned from the update function, skip\r\n      if (hasNoData(dailyDataInput)) {\r\n        Logger.log(`No data has been fetched. Skipping ${site.id}...`);\r\n        return;\r\n      }\r\n\r\n      // Calculate weekly alert level\r\n      const weeklyAlertLevel = await getWeeklyAlertLevel(\r\n        dailyDataRepository,\r\n        endOfDate,\r\n        site,\r\n      );\r\n\r\n      const entity = dailyDataRepository.create({\r\n        ...dailyDataInput,\r\n        weeklyAlertLevel: getMaxAlert(\r\n          dailyDataInput.dailyAlertLevel,\r\n          weeklyAlertLevel,\r\n        ),\r\n      });\r\n      try {\r\n        // Try to save daily data entity\r\n        await dailyDataRepository.save(entity);\r\n      } catch (err) {\r\n        // Update instead of insert\r\n        if (get(err, 'constraint') === 'no_duplicated_date') {\r\n          const filteredData = omitBy(entity, isNil);\r\n          await dailyDataRepository\r\n            .createQueryBuilder('dailyData')\r\n            .update()\r\n            .where('site_id = :site_id', { site_id: site.id })\r\n            .andWhere('Date(date) = Date(:date)', { date: entity.date })\r\n            .set(filteredData)\r\n            .execute();\r\n        } else {\r\n          console.error(\r\n            `Error updating data for Site ${\r\n              site.id\r\n            } & ${endOfDate.toDateString()}: ${err}.`,\r\n          );\r\n        }\r\n      }\r\n    },\r\n    { concurrency: 8 },\r\n  );\r\n  Logger.log(\r\n    `Updated ${allSites.length} sites in ${\r\n      (new Date().valueOf() - start.valueOf()) / 1000\r\n    } seconds`,\r\n  );\r\n}\r\n\r\nexport async function runDailyUpdate(dataSource: DataSource) {\r\n  const today = DateTime.utc().endOf('day');\r\n\r\n  const yesterday = today.set({ day: today.day - 1 });\r\n  console.log(`Daily Update for data ending on ${yesterday.day}`);\r\n  try {\r\n    await getSitesDailyData(dataSource, yesterday.toJSDate());\r\n    console.log('Completed daily update.');\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e2d6fe6a58d9fb167db79b0e2feec5070763d377"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1bq6n67btm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1bq6n67btm();
var __awaiter =
/* istanbul ignore next */
(cov_1bq6n67btm().s[0]++,
/* istanbul ignore next */
(cov_1bq6n67btm().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1bq6n67btm().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_1bq6n67btm().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_1bq6n67btm().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_1bq6n67btm().f[1]++;
    cov_1bq6n67btm().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_1bq6n67btm().f[2]++;
      cov_1bq6n67btm().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_1bq6n67btm().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_1bq6n67btm().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_1bq6n67btm().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_1bq6n67btm().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_1bq6n67btm().f[4]++;
      cov_1bq6n67btm().s[4]++;
      try {
        /* istanbul ignore next */
        cov_1bq6n67btm().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1bq6n67btm().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_1bq6n67btm().f[5]++;
      cov_1bq6n67btm().s[7]++;
      try {
        /* istanbul ignore next */
        cov_1bq6n67btm().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1bq6n67btm().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_1bq6n67btm().f[6]++;
      cov_1bq6n67btm().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_1bq6n67btm().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_1bq6n67btm().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_1bq6n67btm().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[4][1]++, []))).next());
  });
}));
var __importDefault =
/* istanbul ignore next */
(cov_1bq6n67btm().s[12]++,
/* istanbul ignore next */
(cov_1bq6n67btm().b[5][0]++, this) &&
/* istanbul ignore next */
(cov_1bq6n67btm().b[5][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1bq6n67btm().b[5][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1bq6n67btm().f[7]++;
  cov_1bq6n67btm().s[13]++;
  return (
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[7][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[7][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[6][0]++, mod) :
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[6][1]++, {
      "default": mod
    })
  );
}));
/* istanbul ignore next */
cov_1bq6n67btm().s[14]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1bq6n67btm().s[15]++;
exports.runDailyUpdate = exports.getSitesDailyData = exports.getSitesIdsWithoutDataForDate = exports.getMaxAlert = exports.getWeeklyAlertLevel = exports.getDailyData = exports.getDegreeHeatingDays = void 0;
/** Worker to process daily data for all sites. */
const lodash_1 =
/* istanbul ignore next */
(cov_1bq6n67btm().s[16]++, require("lodash"));
const typeorm_1 =
/* istanbul ignore next */
(cov_1bq6n67btm().s[17]++, require("typeorm"));
const bluebird_1 =
/* istanbul ignore next */
(cov_1bq6n67btm().s[18]++, __importDefault(require("bluebird")));
const luxon_1 =
/* istanbul ignore next */
(cov_1bq6n67btm().s[19]++, require("luxon"));
const common_1 =
/* istanbul ignore next */
(cov_1bq6n67btm().s[20]++, require("@nestjs/common"));
const sites_entity_1 =
/* istanbul ignore next */
(cov_1bq6n67btm().s[21]++, require("../sites/sites.entity"));
const daily_data_entity_1 =
/* istanbul ignore next */
(cov_1bq6n67btm().s[22]++, require("../sites/daily-data.entity"));
const math_1 =
/* istanbul ignore next */
(cov_1bq6n67btm().s[23]++, require("../utils/math"));
const sofar_1 =
/* istanbul ignore next */
(cov_1bq6n67btm().s[24]++, require("../utils/sofar"));
const temperature_1 =
/* istanbul ignore next */
(cov_1bq6n67btm().s[25]++, require("../utils/temperature"));
const constants_1 =
/* istanbul ignore next */
(cov_1bq6n67btm().s[26]++, require("../utils/constants"));
const bleachingAlert_1 =
/* istanbul ignore next */
(cov_1bq6n67btm().s[27]++, require("../utils/bleachingAlert"));
const site_utils_1 =
/* istanbul ignore next */
(cov_1bq6n67btm().s[28]++, require("../utils/site.utils"));
function getDegreeHeatingDays(latitude, longitude, endOfDate, maxMonthlyMean) {
  /* istanbul ignore next */
  cov_1bq6n67btm().f[8]++;
  cov_1bq6n67btm().s[29]++;
  return __awaiter(this, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1bq6n67btm().f[9]++;
    cov_1bq6n67btm().s[30]++;
    try {
      // TODO - Get data for the past 84 days.
      const seaSurfaceTemperatures =
      /* istanbul ignore next */
      (cov_1bq6n67btm().s[31]++, []);
      /* istanbul ignore next */
      cov_1bq6n67btm().s[32]++;
      return {
        value: (0, temperature_1.calculateDegreeHeatingDays)(seaSurfaceTemperatures, maxMonthlyMean),
        timestamp: endOfDate.toISOString()
      };
    } catch (_a) {
      const degreeHeatingWeek =
      /* istanbul ignore next */
      (cov_1bq6n67btm().s[33]++, yield (0, sofar_1.getSofarHindcastData)(constants_1.SofarModels.NOAACoralReefWatch, constants_1.sofarVariableIDs[constants_1.SofarModels.NOAACoralReefWatch].degreeHeatingWeek, latitude, longitude, endOfDate, 96));
      // Check if there are any data returned
      // Grab the last one and convert it to degreeHeatingDays
      const latestDegreeHeatingWeek =
      /* istanbul ignore next */
      (cov_1bq6n67btm().s[34]++, (0, sofar_1.getLatestData)(degreeHeatingWeek));
      /* istanbul ignore next */
      cov_1bq6n67btm().s[35]++;
      return (
        /* istanbul ignore next */
        (cov_1bq6n67btm().b[8][0]++, latestDegreeHeatingWeek) &&
        /* istanbul ignore next */
        (cov_1bq6n67btm().b[8][1]++, {
          value: latestDegreeHeatingWeek.value * 7,
          timestamp: latestDegreeHeatingWeek.timestamp
        })
      );
    }
  });
}
/* istanbul ignore next */
cov_1bq6n67btm().s[36]++;
exports.getDegreeHeatingDays = getDegreeHeatingDays;
function getDailyData(site, endOfDate) {
  /* istanbul ignore next */
  cov_1bq6n67btm().f[10]++;
  cov_1bq6n67btm().s[37]++;
  return __awaiter(this, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1bq6n67btm().f[11]++;
    const {
      polygon,
      maxMonthlyMean,
      nearestNOAALocation
    } =
    /* istanbul ignore next */
    (cov_1bq6n67btm().s[38]++, site);
    const [NOAALongitude, NOAALatitude] =
    /* istanbul ignore next */
    (cov_1bq6n67btm().s[39]++, nearestNOAALocation ?
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[9][0]++, nearestNOAALocation.coordinates) :
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[9][1]++, polygon.coordinates));
    const [degreeHeatingDays, satelliteTemperatureData] =
    /* istanbul ignore next */
    (cov_1bq6n67btm().s[40]++, yield Promise.all([
    // Calculate Degree Heating Days
    // Calculating Degree Heating Days requires exactly 84 days of data.
    getDegreeHeatingDays(NOAALatitude, NOAALongitude, endOfDate, maxMonthlyMean), (0, sofar_1.getSofarHindcastData)(constants_1.SofarModels.NOAACoralReefWatch, constants_1.sofarVariableIDs[constants_1.SofarModels.NOAACoralReefWatch].analysedSeaSurfaceTemperature, NOAALatitude, NOAALongitude, endOfDate, 96)]));
    // Get satelliteTemperature
    const latestSatelliteTemperature =
    /* istanbul ignore next */
    (cov_1bq6n67btm().s[41]++,
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[10][0]++, satelliteTemperatureData) &&
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[10][1]++, (0, sofar_1.getLatestData)(satelliteTemperatureData)));
    const satelliteTemperature =
    /* istanbul ignore next */
    (cov_1bq6n67btm().s[42]++,
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[11][0]++, latestSatelliteTemperature) &&
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[11][1]++, latestSatelliteTemperature.value));
    const dailyAlertLevel =
    /* istanbul ignore next */
    (cov_1bq6n67btm().s[43]++, (0, bleachingAlert_1.calculateAlertLevel)(maxMonthlyMean, satelliteTemperature,
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[13][0]++, degreeHeatingDays === null) ||
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[13][1]++, degreeHeatingDays === void 0) ?
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[12][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[12][1]++, degreeHeatingDays.value)));
    /* istanbul ignore next */
    cov_1bq6n67btm().s[44]++;
    return {
      site: {
        id: site.id
      },
      date: endOfDate,
      dailyAlertLevel,
      satelliteTemperature,
      degreeHeatingDays:
      /* istanbul ignore next */
      (cov_1bq6n67btm().b[15][0]++, degreeHeatingDays === null) ||
      /* istanbul ignore next */
      (cov_1bq6n67btm().b[15][1]++, degreeHeatingDays === void 0) ?
      /* istanbul ignore next */
      (cov_1bq6n67btm().b[14][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1bq6n67btm().b[14][1]++, degreeHeatingDays.value)
    };
  });
}
/* istanbul ignore next */
cov_1bq6n67btm().s[45]++;
exports.getDailyData = getDailyData;
function hasNoData(data) {
  /* istanbul ignore next */
  cov_1bq6n67btm().f[12]++;
  cov_1bq6n67btm().s[46]++;
  return Object.values((0, lodash_1.omit)(data, 'site', 'date')).every(lodash_1.isUndefined);
}
function getWeeklyAlertLevel(dailyDataRepository, date, site) {
  /* istanbul ignore next */
  cov_1bq6n67btm().f[13]++;
  cov_1bq6n67btm().s[47]++;
  return __awaiter(this, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1bq6n67btm().f[14]++;
    const pastWeek =
    /* istanbul ignore next */
    (cov_1bq6n67btm().s[48]++, new Date(date));
    /* istanbul ignore next */
    cov_1bq6n67btm().s[49]++;
    pastWeek.setDate(pastWeek.getDate() - 6);
    const query =
    /* istanbul ignore next */
    (cov_1bq6n67btm().s[50]++, yield dailyDataRepository.createQueryBuilder('dailyData').select('MAX(dailyData.dailyAlertLevel)', 'weeklyAlertLevel').andWhere('dailyData.date >= :pastWeek', {
      pastWeek
    }).andWhere('dailyData.date <= :date', {
      date
    }).andWhere('dailyData.site = :site', {
      site: site.id
    }).getRawOne());
    /* istanbul ignore next */
    cov_1bq6n67btm().s[51]++;
    return (0, lodash_1.isNumber)(query.weeklyAlertLevel) ?
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[16][0]++, query.weeklyAlertLevel) :
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[16][1]++, undefined);
  });
}
/* istanbul ignore next */
cov_1bq6n67btm().s[52]++;
exports.getWeeklyAlertLevel = getWeeklyAlertLevel;
function getMaxAlert(dailyAlertLevel, weeklyAlertLevel) {
  /* istanbul ignore next */
  cov_1bq6n67btm().f[15]++;
  cov_1bq6n67btm().s[53]++;
  return (0, math_1.getMax)([weeklyAlertLevel, dailyAlertLevel].filter(lodash_1.isNumber));
}
/* istanbul ignore next */
cov_1bq6n67btm().s[54]++;
exports.getMaxAlert = getMaxAlert;
function getSitesIdsWithoutDataForDate(dataSource, date, siteIds) {
  /* istanbul ignore next */
  cov_1bq6n67btm().f[16]++;
  cov_1bq6n67btm().s[55]++;
  return __awaiter(this, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1bq6n67btm().f[17]++;
    const query =
    /* istanbul ignore next */
    (cov_1bq6n67btm().s[56]++, dataSource.getRepository(sites_entity_1.Site).createQueryBuilder('s').select('s.id', 'id').where(`NOT EXISTS (
        SELECT 1
        FROM daily_data dd
        WHERE dd.site_id = s.id
        AND dd.date = :date
      )`, {
      date
    }));
    /* istanbul ignore next */
    cov_1bq6n67btm().s[57]++;
    if (
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[19][0]++, siteIds === null) ||
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[19][1]++, siteIds === void 0) ?
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[18][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[18][1]++, siteIds.length)) {
      /* istanbul ignore next */
      cov_1bq6n67btm().b[17][0]++;
      cov_1bq6n67btm().s[58]++;
      query.andWhere('s.id IN (:...siteIds)', {
        siteIds
      });
    } else
    /* istanbul ignore next */
    {
      cov_1bq6n67btm().b[17][1]++;
    }
    cov_1bq6n67btm().s[59]++;
    return (yield query.getRawMany()).map(site => {
      /* istanbul ignore next */
      cov_1bq6n67btm().f[18]++;
      cov_1bq6n67btm().s[60]++;
      return site.id;
    });
  });
}
/* istanbul ignore next */
cov_1bq6n67btm().s[61]++;
exports.getSitesIdsWithoutDataForDate = getSitesIdsWithoutDataForDate;
/* eslint-disable no-console */
function getSitesDailyData(dataSource, endOfDate, siteIds) {
  /* istanbul ignore next */
  cov_1bq6n67btm().f[19]++;
  cov_1bq6n67btm().s[62]++;
  return __awaiter(this, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1bq6n67btm().f[20]++;
    const siteRepository =
    /* istanbul ignore next */
    (cov_1bq6n67btm().s[63]++, dataSource.getRepository(sites_entity_1.Site));
    const dailyDataRepository =
    /* istanbul ignore next */
    (cov_1bq6n67btm().s[64]++, dataSource.getRepository(daily_data_entity_1.DailyData));
    const allSites =
    /* istanbul ignore next */
    (cov_1bq6n67btm().s[65]++, yield siteRepository.find(Object.assign(Object.assign({},
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[21][0]++, siteIds) &&
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[21][1]++, siteIds.length > 0) ?
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[20][0]++, {
      where: {
        id: (0, typeorm_1.In)(siteIds)
      }
    }) :
    /* istanbul ignore next */
    (cov_1bq6n67btm().b[20][1]++, {})), {
      select: (0, site_utils_1.getAllColumns)(siteRepository)
    })));
    const start =
    /* istanbul ignore next */
    (cov_1bq6n67btm().s[66]++, new Date());
    /* istanbul ignore next */
    cov_1bq6n67btm().s[67]++;
    common_1.Logger.log(`Updating ${allSites.length} sites for ${endOfDate.toDateString()}.`);
    /* istanbul ignore next */
    cov_1bq6n67btm().s[68]++;
    yield bluebird_1.default.map(allSites, site => {
      /* istanbul ignore next */
      cov_1bq6n67btm().f[21]++;
      cov_1bq6n67btm().s[69]++;
      return __awaiter(this, void 0, void 0, function* () {
        /* istanbul ignore next */
        cov_1bq6n67btm().f[22]++;
        const dailyDataInput =
        /* istanbul ignore next */
        (cov_1bq6n67btm().s[70]++, yield getDailyData(site, endOfDate));
        // If no data returned from the update function, skip
        /* istanbul ignore next */
        cov_1bq6n67btm().s[71]++;
        if (hasNoData(dailyDataInput)) {
          /* istanbul ignore next */
          cov_1bq6n67btm().b[22][0]++;
          cov_1bq6n67btm().s[72]++;
          common_1.Logger.log(`No data has been fetched. Skipping ${site.id}...`);
          /* istanbul ignore next */
          cov_1bq6n67btm().s[73]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_1bq6n67btm().b[22][1]++;
        }
        // Calculate weekly alert level
        const weeklyAlertLevel =
        /* istanbul ignore next */
        (cov_1bq6n67btm().s[74]++, yield getWeeklyAlertLevel(dailyDataRepository, endOfDate, site));
        const entity =
        /* istanbul ignore next */
        (cov_1bq6n67btm().s[75]++, dailyDataRepository.create(Object.assign(Object.assign({}, dailyDataInput), {
          weeklyAlertLevel: getMaxAlert(dailyDataInput.dailyAlertLevel, weeklyAlertLevel)
        })));
        /* istanbul ignore next */
        cov_1bq6n67btm().s[76]++;
        try {
          /* istanbul ignore next */
          cov_1bq6n67btm().s[77]++;
          // Try to save daily data entity
          yield dailyDataRepository.save(entity);
        } catch (err) {
          /* istanbul ignore next */
          cov_1bq6n67btm().s[78]++;
          // Update instead of insert
          if ((0, lodash_1.get)(err, 'constraint') === 'no_duplicated_date') {
            /* istanbul ignore next */
            cov_1bq6n67btm().b[23][0]++;
            const filteredData =
            /* istanbul ignore next */
            (cov_1bq6n67btm().s[79]++, (0, lodash_1.omitBy)(entity, lodash_1.isNil));
            /* istanbul ignore next */
            cov_1bq6n67btm().s[80]++;
            yield dailyDataRepository.createQueryBuilder('dailyData').update().where('site_id = :site_id', {
              site_id: site.id
            }).andWhere('Date(date) = Date(:date)', {
              date: entity.date
            }).set(filteredData).execute();
          } else {
            /* istanbul ignore next */
            cov_1bq6n67btm().b[23][1]++;
            cov_1bq6n67btm().s[81]++;
            console.error(`Error updating data for Site ${site.id} & ${endOfDate.toDateString()}: ${err}.`);
          }
        }
      });
    }, {
      concurrency: 8
    });
    /* istanbul ignore next */
    cov_1bq6n67btm().s[82]++;
    common_1.Logger.log(`Updated ${allSites.length} sites in ${(new Date().valueOf() - start.valueOf()) / 1000} seconds`);
  });
}
/* istanbul ignore next */
cov_1bq6n67btm().s[83]++;
exports.getSitesDailyData = getSitesDailyData;
function runDailyUpdate(dataSource) {
  /* istanbul ignore next */
  cov_1bq6n67btm().f[23]++;
  cov_1bq6n67btm().s[84]++;
  return __awaiter(this, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1bq6n67btm().f[24]++;
    const today =
    /* istanbul ignore next */
    (cov_1bq6n67btm().s[85]++, luxon_1.DateTime.utc().endOf('day'));
    const yesterday =
    /* istanbul ignore next */
    (cov_1bq6n67btm().s[86]++, today.set({
      day: today.day - 1
    }));
    /* istanbul ignore next */
    cov_1bq6n67btm().s[87]++;
    console.log(`Daily Update for data ending on ${yesterday.day}`);
    /* istanbul ignore next */
    cov_1bq6n67btm().s[88]++;
    try {
      /* istanbul ignore next */
      cov_1bq6n67btm().s[89]++;
      yield getSitesDailyData(dataSource, yesterday.toJSDate());
      /* istanbul ignore next */
      cov_1bq6n67btm().s[90]++;
      console.log('Completed daily update.');
    } catch (error) {
      /* istanbul ignore next */
      cov_1bq6n67btm().s[91]++;
      console.error(error);
    }
  });
}
/* istanbul ignore next */
cov_1bq6n67btm().s[92]++;
exports.runDailyUpdate = runDailyUpdate;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,