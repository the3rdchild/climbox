{"version":3,"names":["cov_1mgyypbcki","actualCoverage","s","luxon_extensions_1","require","getStartEndDate","endDate","hours","b","f","endMoment","DateTime","fromJSDate","startMoment","minus","toString","exports","getDefaultDates","start","end","Date","startDate","setMonth","getMonth"],"sources":["/home/user/climbox/packages/api/src/utils/dates.ts"],"sourcesContent":["import { DateTime } from '../luxon-extensions';\r\n\r\nexport function getStartEndDate(endDate: Date, hours: number = 24) {\r\n  const endMoment = DateTime.fromJSDate(endDate);\r\n  const startMoment = endMoment.minus({ hours });\r\n  return [startMoment.toString(), endMoment.toString()];\r\n}\r\n\r\n// Util function to get the [startDate, endDate] time interval for time series data.\r\n// If no value for endDate is passed, then we define endDate as \"now\".\r\n// If no value for startDate is passed, then we define startDate as three months before the endDate.\r\nexport function getDefaultDates(start?: string, end?: string) {\r\n  const endDate = end ? new Date(end) : new Date();\r\n  const startDate = start\r\n    ? new Date(start)\r\n    : new Date(new Date(endDate).setMonth(endDate.getMonth() - 3));\r\n\r\n  return { startDate, endDate };\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAaQ;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;;AAbR,MAAAC,kBAAA;AAAA;AAAA,CAAAH,cAAA,GAAAE,CAAA,OAAAE,OAAA;AAEA,SAAgBC,eAAeA,CAACC,OAAa,EAAEC,KAAA;AAAA;AAAA,CAAAP,cAAA,GAAAQ,CAAA,UAAgB,EAAE;EAAA;EAAAR,cAAA,GAAAS,CAAA;EAC/D,MAAMC,SAAS;EAAA;EAAA,CAAAV,cAAA,GAAAE,CAAA,OAAGC,kBAAA,CAAAQ,QAAQ,CAACC,UAAU,CAACN,OAAO,CAAC;EAC9C,MAAMO,WAAW;EAAA;EAAA,CAAAb,cAAA,GAAAE,CAAA,OAAGQ,SAAS,CAACI,KAAK,CAAC;IAAEP;EAAK,CAAE,CAAC;EAAC;EAAAP,cAAA,GAAAE,CAAA;EAC/C,OAAO,CAACW,WAAW,CAACE,QAAQ,EAAE,EAAEL,SAAS,CAACK,QAAQ,EAAE,CAAC;AACvD;AAAC;AAAAf,cAAA,GAAAE,CAAA;AAJDc,OAAA,CAAAX,eAAA,GAAAA,eAAA;AAMA;AACA;AACA;AACA,SAAgBY,eAAeA,CAACC,KAAc,EAAEC,GAAY;EAAA;EAAAnB,cAAA,GAAAS,CAAA;EAC1D,MAAMH,OAAO;EAAA;EAAA,CAAAN,cAAA,GAAAE,CAAA,OAAGiB,GAAG;EAAA;EAAA,CAAAnB,cAAA,GAAAQ,CAAA,UAAG,IAAIY,IAAI,CAACD,GAAG,CAAC;EAAA;EAAA,CAAAnB,cAAA,GAAAQ,CAAA,UAAG,IAAIY,IAAI,EAAE;EAChD,MAAMC,SAAS;EAAA;EAAA,CAAArB,cAAA,GAAAE,CAAA,OAAGgB,KAAK;EAAA;EAAA,CAAAlB,cAAA,GAAAQ,CAAA,UACnB,IAAIY,IAAI,CAACF,KAAK,CAAC;EAAA;EAAA,CAAAlB,cAAA,GAAAQ,CAAA,UACf,IAAIY,IAAI,CAAC,IAAIA,IAAI,CAACd,OAAO,CAAC,CAACgB,QAAQ,CAAChB,OAAO,CAACiB,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;EAAC;EAAAvB,cAAA,GAAAE,CAAA;EAEjE,OAAO;IAAEmB,SAAS;IAAEf;EAAO,CAAE;AAC/B;AAAC;AAAAN,cAAA,GAAAE,CAAA;AAPDc,OAAA,CAAAC,eAAA,GAAAA,eAAA"}