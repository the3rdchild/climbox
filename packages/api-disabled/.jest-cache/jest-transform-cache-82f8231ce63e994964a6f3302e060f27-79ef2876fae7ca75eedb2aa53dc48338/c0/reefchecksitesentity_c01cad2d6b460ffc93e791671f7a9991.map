{"file":"/home/user/climbox/packages/api/src/reef-check-sites/reef-check-sites.entity.ts","mappings":";;;;;;;;;;;;AAAA,qCAQiB;AACjB,6CAAmE;AACnE,+FAAkF;AAClF,wDAA6C;AAGtC,IAAM,aAAa,GAAnB,MAAM,aAAa;CAsDzB,CAAA;AArDC;IAAC,IAAA,qBAAW,GAAE;IACb,IAAA,uBAAa,GAAE;;yCACL;AAEX;IAAC,IAAA,qBAAW,GAAE;IACb,IAAA,gBAAM,GAAE;;6CACM;AAEf;IAAC,IAAA,qBAAW,EAAC,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,mBAAI,EAAE,CAAC;IACjC,IAAA,mBAAS,EAAC,GAAG,EAAE,CAAC,mBAAI,CAAC;IACrB,IAAA,oBAAU,EAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;IAC/B,IAAA,eAAK,GAAE;8BACF,mBAAI;2CAAC;AAEX;IAAC,IAAA,qBAAW,GAAE;IACb,IAAA,gBAAM,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;+CACV;AAEjB;IAAC,IAAA,qBAAW,GAAE;IACb,IAAA,gBAAM,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;kDACP;AAEpB;IAAC,IAAA,qBAAW,GAAE;IACb,IAAA,gBAAM,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;8CACX;AAEhB;IAAC,IAAA,qBAAW,GAAE;IACb,IAAA,gBAAM,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;0DACC;AAE5B;IAAC,IAAA,qBAAW,GAAE;IACb,IAAA,gBAAM,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;+CACV;AAEjB;IAAC,IAAA,qBAAW,GAAE;IACb,IAAA,gBAAM,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;6CACZ;AAEf;IAAC,IAAA,qBAAW,GAAE;IACb,IAAA,gBAAM,EAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;wDACV;AAE1B;IAAC,IAAA,qBAAW,GAAE;IACb,IAAA,gBAAM,EAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;+DACH;AAEjC;IAAC,IAAA,qBAAW,GAAE;IACb,IAAA,gBAAM,EAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;4DACN;AAE9B;IAAC,IAAA,6BAAmB,GAAE;IACrB,IAAA,mBAAS,EAAC,GAAG,EAAE,CAAC,2CAAe,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;;8CAC/B;AArDhB,aAAa;IADzB,IAAA,gBAAM,GAAE;GACI,aAAa,CAsDzB;AAtDY,sCAAa","names":[],"sources":["/home/user/climbox/packages/api/src/reef-check-sites/reef-check-sites.entity.ts"],"sourcesContent":["import {\r\n  Entity,\r\n  Column,\r\n  Index,\r\n  JoinColumn,\r\n  PrimaryColumn,\r\n  OneToMany,\r\n  ManyToOne,\r\n} from 'typeorm';\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport { ReefCheckSurvey } from '../reef-check-surveys/reef-check-surveys.entity';\r\nimport { Site } from '../sites/sites.entity';\r\n\r\n@Entity()\r\nexport class ReefCheckSite {\r\n  @ApiProperty()\r\n  @PrimaryColumn()\r\n  id: string;\r\n\r\n  @ApiProperty()\r\n  @Column()\r\n  siteId: number;\r\n\r\n  @ApiProperty({ type: () => Site })\r\n  @ManyToOne(() => Site)\r\n  @JoinColumn({ name: 'site_id' })\r\n  @Index()\r\n  site: Site;\r\n\r\n  @ApiProperty()\r\n  @Column({ nullable: true })\r\n  reefName: string;\r\n\r\n  @ApiProperty()\r\n  @Column({ nullable: true })\r\n  orientation: string;\r\n\r\n  @ApiProperty()\r\n  @Column({ nullable: true })\r\n  country: string;\r\n\r\n  @ApiProperty()\r\n  @Column({ nullable: true })\r\n  stateProvinceIsland: string;\r\n\r\n  @ApiProperty()\r\n  @Column({ nullable: true })\r\n  cityTown: string;\r\n\r\n  @ApiProperty()\r\n  @Column({ nullable: true })\r\n  region: string;\r\n\r\n  @ApiProperty()\r\n  @Column('float', { nullable: true })\r\n  distanceFromShore: number;\r\n\r\n  @ApiProperty()\r\n  @Column('float', { nullable: true })\r\n  distanceFromNearestRiver: number;\r\n\r\n  @ApiProperty()\r\n  @Column('float', { nullable: true })\r\n  distanceToNearestPopn: number;\r\n\r\n  @ApiPropertyOptional()\r\n  @OneToMany(() => ReefCheckSurvey, (survey) => survey.site)\r\n  surveys: ReefCheckSurvey[];\r\n}\r\n"],"version":3}