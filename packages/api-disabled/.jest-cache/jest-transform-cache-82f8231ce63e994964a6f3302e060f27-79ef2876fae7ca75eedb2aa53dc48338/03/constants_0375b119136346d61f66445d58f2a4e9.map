{"version":3,"names":["cov_1ecbsdtstd","actualCoverage","s","require","config","_a","exports","envName","b","process","env","NODE_ENV","isTestEnv","SOFAR_MARINE_URL","SOFAR_WAVE_DATA_URL","SOFAR_SENSOR_DATA_URL","SOFAR_LATEST_DATA_URL","SofarModels","f","sofarVariableIDs","Wave","significantWaveHeight","meanDirection","meanDirectionalSpread","meanPeriod","peakFrequency","peakDirection","significantWaveHeightWindWaves","meanDirectionWindWaves","meanDirectionalSpreadWindWaves","peakPeriodWindWaves","significantWaveHeightFirstSwell","meanDirectionFirstSwell","meanDirectionalSpreadFirstSwell","peakPeriodFirstSwell","significantWaveHeightSecondSwell","meanDirectionSecondSwell","meanDirectionalSpreadSecondSwell","peakPeriodSecondSwell","NOAACoralReefWatch","degreeHeatingWeek","analysedSeaSurfaceTemperature","Atmosphere","windVelocity10MeterEastward","windVelocity10MeterNorthward","STORM_GLASS_BASE_URL"],"sources":["/home/user/climbox/packages/api/src/utils/constants.ts"],"sourcesContent":["// dotenv is a dev dependency, so conditionally import it (don't need it in Prod).\r\ntry {\r\n  // eslint-disable-next-line import/no-extraneous-dependencies, global-require\r\n  require('dotenv').config();\r\n} catch {\r\n  // Pass\r\n}\r\nexport const envName = process.env.NODE_ENV || 'development';\r\nexport const isTestEnv = envName === 'test';\r\n\r\n// Environment variables (especially those used by cloud-functions)\r\n// should NOT be exported from here (eg. \"export const { SOFAR_API_TOKEN } = process.env\"),\r\n// since it will interfere with the way they are set in cloud-functions,\r\n// causing them to be undefined.\r\n\r\n// Sofar API urls\r\nexport const SOFAR_MARINE_URL =\r\n  'https://api.sofarocean.com/marine-weather/v1/models/';\r\nexport const SOFAR_WAVE_DATA_URL = 'https://api.sofarocean.com/api/wave-data';\r\nexport const SOFAR_SENSOR_DATA_URL =\r\n  'https://api.sofarocean.com/api/sensor-data';\r\nexport const SOFAR_LATEST_DATA_URL =\r\n  'https://api.sofarocean.com/api/latest-data';\r\n\r\nexport enum SofarModels {\r\n  NOAACoralReefWatch = 'NOAACoralReefWatch',\r\n  Wave = 'Wave',\r\n  Atmosphere = 'Atmosphere',\r\n}\r\n\r\n// Sofar variables\r\nexport const sofarVariableIDs = {\r\n  [SofarModels.Wave]: {\r\n    significantWaveHeight: 'significantWaveHeight',\r\n    meanDirection: 'meanDirection',\r\n    meanDirectionalSpread: 'meanDirectionalSpread',\r\n    meanPeriod: 'meanPeriod',\r\n    peakFrequency: 'peakFrequency',\r\n    peakDirection: 'peakDirection',\r\n    significantWaveHeightWindWaves: 'significantWaveHeightWindWaves',\r\n    meanDirectionWindWaves: 'meanDirectionWindWaves',\r\n    meanDirectionalSpreadWindWaves: 'meanDirectionalSpreadWindWaves',\r\n    peakPeriodWindWaves: 'peakPeriodWindWaves',\r\n    significantWaveHeightFirstSwell: 'significantWaveHeightFirstSwell',\r\n    meanDirectionFirstSwell: 'meanDirectionFirstSwell',\r\n    meanDirectionalSpreadFirstSwell: 'meanDirectionalSpreadFirstSwell',\r\n    peakPeriodFirstSwell: 'peakPeriodFirstSwell',\r\n    significantWaveHeightSecondSwell: 'significantWaveHeightSecondSwell',\r\n    meanDirectionSecondSwell: 'meanDirectionSecondSwell',\r\n    meanDirectionalSpreadSecondSwell: 'meanDirectionalSpreadSecondSwell',\r\n    peakPeriodSecondSwell: 'peakPeriodSecondSwell',\r\n  },\r\n  [SofarModels.NOAACoralReefWatch]: {\r\n    degreeHeatingWeek: 'degreeHeatingWeek',\r\n    analysedSeaSurfaceTemperature: 'analysedSeaSurfaceTemperature',\r\n  },\r\n  [SofarModels.Atmosphere]: {\r\n    windVelocity10MeterEastward: 'windVelocity10MeterEastward',\r\n    windVelocity10MeterNorthward: 'windVelocity10MeterNorthward',\r\n  },\r\n};\r\n\r\nexport const STORM_GLASS_BASE_URL = 'https://api.stormglass.io/v2';\r\n"],"mappings":"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"}