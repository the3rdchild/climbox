{"file":"/home/user/climbox/packages/api/src/sites/sites.entity.ts","mappings":"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","names":[],"sources":["/home/user/climbox/packages/api/src/sites/sites.entity.ts"],"sourcesContent":["import { GeoJSON } from 'geojson';\r\nimport {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  Column,\r\n  Index,\r\n  ManyToOne,\r\n  CreateDateColumn,\r\n  UpdateDateColumn,\r\n  OneToOne,\r\n  OneToMany,\r\n  ManyToMany,\r\n  Check,\r\n} from 'typeorm';\r\nimport { Exclude, Expose } from 'class-transformer';\r\nimport {\r\n  ApiHideProperty,\r\n  ApiProperty,\r\n  ApiPropertyOptional,\r\n} from '@nestjs/swagger';\r\nimport { ReefCheckSite } from '../reef-check-sites/reef-check-sites.entity';\r\nimport { ReefCheckSurvey } from '../reef-check-surveys/reef-check-surveys.entity';\r\nimport { SketchFab } from '../site-sketchfab/site-sketchfab.entity';\r\nimport { Region } from '../regions/regions.entity';\r\nimport { Survey } from '../surveys/surveys.entity';\r\nimport { User } from '../users/users.entity';\r\nimport { SiteApplication } from '../site-applications/site-applications.entity';\r\nimport { HistoricalMonthlyMean } from './historical-monthly-mean.entity';\r\nimport { ApiPointProperty } from '../docs/api-properties';\r\nimport { CollectionDataDto } from '../collections/dto/collection-data.dto';\r\n\r\nexport enum SiteStatus {\r\n  InReview = 'in_review',\r\n  Rejected = 'rejected',\r\n  Approved = 'approved',\r\n  Shipped = 'shipped',\r\n  Deployed = 'deployed',\r\n  Maintenance = 'maintenance',\r\n  Lost = 'lost',\r\n  EndOfLife = 'end_of_life',\r\n}\r\n\r\nexport enum SensorType {\r\n  SofarSpotter = 'sofar_spotter',\r\n}\r\n\r\n@Entity()\r\nexport class Site {\r\n  @ApiProperty({ example: 1 })\r\n  @PrimaryGeneratedColumn()\r\n  id: number;\r\n\r\n  @ApiProperty({ example: 'Duxbury Site' })\r\n  @Column({ nullable: true, type: 'character varying' })\r\n  name: string | null;\r\n\r\n  @ApiProperty({ example: 'SPOT-0000' })\r\n  @Column({ nullable: true, type: 'character varying' })\r\n  sensorId: string | null;\r\n\r\n  @ApiPointProperty()\r\n  @Column({\r\n    type: 'geometry',\r\n    spatialFeatureType: 'Point',\r\n    unique: true,\r\n    srid: 4326,\r\n    nullable: false,\r\n  })\r\n  @Index({ spatial: true })\r\n  polygon: GeoJSON | null;\r\n\r\n  @ApiPointProperty()\r\n  @Column({\r\n    type: 'geometry',\r\n    spatialFeatureType: 'Point',\r\n    srid: 4326,\r\n    nullable: true,\r\n  })\r\n  nearestNOAALocation: GeoJSON | null;\r\n\r\n  @ApiProperty({ example: 23 })\r\n  @Column({ nullable: true, type: 'integer' })\r\n  depth: number | null;\r\n\r\n  @ApiProperty({ example: 'https://something.example.com' })\r\n  @Column({ nullable: true, type: 'character varying' })\r\n  @Check('char_length(iframe) <= 200 AND char_length(iframe) > 10')\r\n  iframe: string | null;\r\n\r\n  // TODO:  This field should be transferred to site-application table\r\n  //        The transition has to be in sync with changes in admin dashboards in internal.io\r\n  @Column({\r\n    type: 'enum',\r\n    enum: SiteStatus,\r\n    default: SiteStatus.InReview,\r\n    nullable: false,\r\n  })\r\n  status: SiteStatus;\r\n\r\n  @Column({ nullable: true, type: 'character varying' })\r\n  videoStream: string | null;\r\n\r\n  @ApiProperty({ example: 33.54 })\r\n  @Column('float', { nullable: true })\r\n  maxMonthlyMean: number | null;\r\n\r\n  @ApiProperty({ example: 'Pacific/Palau' })\r\n  @Column({ nullable: true, type: 'character varying' })\r\n  timezone: string | null;\r\n\r\n  @Column({ default: true })\r\n  display: boolean;\r\n\r\n  @CreateDateColumn()\r\n  createdAt: Date;\r\n\r\n  @UpdateDateColumn()\r\n  updatedAt: Date;\r\n\r\n  @ManyToOne(() => Region, { onDelete: 'SET NULL', nullable: true })\r\n  @Index()\r\n  region: Region | null;\r\n\r\n  @OneToOne(() => SketchFab, (sketchFab) => sketchFab.site)\r\n  sketchFab?: SketchFab | null;\r\n\r\n  @ManyToMany(() => User, (user) => user.administeredSites, {\r\n    onDelete: 'CASCADE',\r\n  })\r\n  admins: User[];\r\n\r\n  @ApiPropertyOptional({ type: () => [ReefCheckSite] })\r\n  @OneToMany(() => ReefCheckSite, (reefCheckSite) => reefCheckSite.site)\r\n  reefCheckSites: ReefCheckSite[];\r\n\r\n  @ApiPropertyOptional()\r\n  @OneToMany(() => Survey, (survey) => survey.site)\r\n  surveys: Survey[];\r\n\r\n  @ApiPropertyOptional()\r\n  @OneToMany(() => ReefCheckSurvey, (reefCheckSurvey) => reefCheckSurvey.site)\r\n  reefCheckSurveys: ReefCheckSurvey[];\r\n\r\n  @OneToOne(() => SiteApplication, (siteApplication) => siteApplication.site)\r\n  siteApplication?: SiteApplication;\r\n\r\n  @ApiPropertyOptional()\r\n  @OneToMany(\r\n    () => HistoricalMonthlyMean,\r\n    (historicalMonthlyMean) => historicalMonthlyMean.site,\r\n  )\r\n  historicalMonthlyMean: HistoricalMonthlyMean[];\r\n\r\n  @ApiHideProperty()\r\n  @Exclude()\r\n  @Column({ nullable: true, select: false, type: 'character varying' })\r\n  spotterApiToken?: string | null;\r\n\r\n  @ApiHideProperty()\r\n  @Exclude()\r\n  @Column({ nullable: true, select: false, type: 'character varying' })\r\n  contactInformation?: string | null;\r\n\r\n  hasHobo?: boolean;\r\n\r\n  collectionData?: CollectionDataDto;\r\n\r\n  maskedSpotterApiToken?: string;\r\n\r\n  waterQualitySources?: string[];\r\n\r\n  @Expose()\r\n  get applied(): boolean {\r\n    return !!this.siteApplication?.permitRequirements;\r\n  }\r\n}\r\n"],"version":3}