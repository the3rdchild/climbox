325f89520638629eb0abdab8a8a4777a
"use strict";

/* istanbul ignore next */
function cov_278flv1e3w() {
  var path = "/home/user/climbox/packages/api/src/utils/math.ts";
  var hash = "b93a78acbd94f40592a4a4e5562d236db932c16a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/user/climbox/packages/api/src/utils/math.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 74
        }
      },
      "2": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 6,
          column: 1
        }
      },
      "3": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 5,
          column: 65
        }
      },
      "4": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 24
        }
      },
      "5": {
        start: {
          line: 8,
          column: 21
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "6": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 92
        }
      },
      "7": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 36
        }
      },
      "8": {
        start: {
          line: 12,
          column: 25
        },
        end: {
          line: 16,
          column: 1
        }
      },
      "9": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 14,
          column: 10
        }
      },
      "10": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 47
        }
      },
      "11": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 15
          },
          end: {
            line: 4,
            column: 16
          }
        },
        loc: {
          start: {
            line: 4,
            column: 28
          },
          end: {
            line: 6,
            column: 1
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 21
          },
          end: {
            line: 8,
            column: 22
          }
        },
        loc: {
          start: {
            line: 8,
            column: 69
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 12,
            column: 25
          },
          end: {
            line: 12,
            column: 26
          }
        },
        loc: {
          start: {
            line: 12,
            column: 73
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 12
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 5,
            column: 11
          },
          end: {
            line: 5,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 32
          },
          end: {
            line: 5,
            column: 52
          }
        }, {
          start: {
            line: 5,
            column: 55
          },
          end: {
            line: 5,
            column: 64
          }
        }],
        line: 5
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 15,
            column: 31
          }
        }, {
          start: {
            line: 15,
            column: 34
          },
          end: {
            line: 15,
            column: 46
          }
        }],
        line: 15
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "/home/user/climbox/packages/api/src/utils/math.ts",
      mappings: ";;;AAAO,MAAM,MAAM,GAAG,CAAC,OAAiB,EAAE,EAAE;IAC1C,OAAO,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;AAC/D,CAAC,CAAC;AAFW,QAAA,MAAM,UAEjB;AAEK,MAAM,YAAY,GAAG,CAC1B,oBAA4B,EAC5B,oBAA4B,EAC5B,EAAE;IACF,OAAO,IAAI,CAAC,IAAI,CAAC,SAAA,oBAAoB,EAAI,CAAC,CAAA,GAAG,SAAA,oBAAoB,EAAI,CAAC,CAAA,CAAC,CAAC;AAC1E,CAAC,CAAC;AALW,QAAA,YAAY,gBAKvB;AAEK,MAAM,gBAAgB,GAAG,CAC9B,oBAA4B,EAC5B,oBAA4B,EAC5B,EAAE;IACF,MAAM,MAAM,GACV,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE;QACzE,EAAE,CAAC;IAEL,OAAO,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,GAAG,GAAG,CAAC;AAC7C,CAAC,CAAC;AATW,QAAA,gBAAgB,oBAS3B",
      names: [],
      sources: ["/home/user/climbox/packages/api/src/utils/math.ts"],
      sourcesContent: ["export const getMax = (numbers: number[]) => {\r\n  return numbers.length > 0 ? Math.max(...numbers) : undefined;\r\n};\r\n\r\nexport const getWindSpeed = (\r\n  windEastwardVelocity: number,\r\n  windNorhwardVelocity: number,\r\n) => {\r\n  return Math.sqrt(windNorhwardVelocity ** 2 + windEastwardVelocity ** 2);\r\n};\r\n\r\nexport const getWindDirection = (\r\n  windEastwardVelocity: number,\r\n  windNorhwardVelocity: number,\r\n) => {\r\n  const degree =\r\n    -(Math.atan2(windNorhwardVelocity, windEastwardVelocity) * 180) / Math.PI -\r\n    90;\r\n\r\n  return degree >= 0 ? degree : degree + 360;\r\n};\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b93a78acbd94f40592a4a4e5562d236db932c16a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_278flv1e3w = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_278flv1e3w();
cov_278flv1e3w().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_278flv1e3w().s[1]++;
exports.getWindDirection = exports.getWindSpeed = exports.getMax = void 0;
/* istanbul ignore next */
cov_278flv1e3w().s[2]++;
const getMax = numbers => {
  /* istanbul ignore next */
  cov_278flv1e3w().f[0]++;
  cov_278flv1e3w().s[3]++;
  return numbers.length > 0 ?
  /* istanbul ignore next */
  (cov_278flv1e3w().b[0][0]++, Math.max(...numbers)) :
  /* istanbul ignore next */
  (cov_278flv1e3w().b[0][1]++, undefined);
};
/* istanbul ignore next */
cov_278flv1e3w().s[4]++;
exports.getMax = getMax;
/* istanbul ignore next */
cov_278flv1e3w().s[5]++;
const getWindSpeed = (windEastwardVelocity, windNorhwardVelocity) => {
  /* istanbul ignore next */
  cov_278flv1e3w().f[1]++;
  cov_278flv1e3w().s[6]++;
  return Math.sqrt(Math.pow(windNorhwardVelocity, 2) + Math.pow(windEastwardVelocity, 2));
};
/* istanbul ignore next */
cov_278flv1e3w().s[7]++;
exports.getWindSpeed = getWindSpeed;
/* istanbul ignore next */
cov_278flv1e3w().s[8]++;
const getWindDirection = (windEastwardVelocity, windNorhwardVelocity) => {
  /* istanbul ignore next */
  cov_278flv1e3w().f[2]++;
  const degree =
  /* istanbul ignore next */
  (cov_278flv1e3w().s[9]++, -(Math.atan2(windNorhwardVelocity, windEastwardVelocity) * 180) / Math.PI - 90);
  /* istanbul ignore next */
  cov_278flv1e3w().s[10]++;
  return degree >= 0 ?
  /* istanbul ignore next */
  (cov_278flv1e3w().b[1][0]++, degree) :
  /* istanbul ignore next */
  (cov_278flv1e3w().b[1][1]++, degree + 360);
};
/* istanbul ignore next */
cov_278flv1e3w().s[11]++;
exports.getWindDirection = getWindDirection;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjc4Zmx2MWUzdyIsImFjdHVhbENvdmVyYWdlIiwicyIsImdldE1heCIsIm51bWJlcnMiLCJmIiwibGVuZ3RoIiwiYiIsIk1hdGgiLCJtYXgiLCJ1bmRlZmluZWQiLCJleHBvcnRzIiwiZ2V0V2luZFNwZWVkIiwid2luZEVhc3R3YXJkVmVsb2NpdHkiLCJ3aW5kTm9yaHdhcmRWZWxvY2l0eSIsInNxcnQiLCJwb3ciLCJnZXRXaW5kRGlyZWN0aW9uIiwiZGVncmVlIiwiYXRhbjIiLCJQSSJdLCJzb3VyY2VzIjpbIi9ob21lL3VzZXIvY2xpbWJveC9wYWNrYWdlcy9hcGkvc3JjL3V0aWxzL21hdGgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGdldE1heCA9IChudW1iZXJzOiBudW1iZXJbXSkgPT4ge1xyXG4gIHJldHVybiBudW1iZXJzLmxlbmd0aCA+IDAgPyBNYXRoLm1heCguLi5udW1iZXJzKSA6IHVuZGVmaW5lZDtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRXaW5kU3BlZWQgPSAoXHJcbiAgd2luZEVhc3R3YXJkVmVsb2NpdHk6IG51bWJlcixcclxuICB3aW5kTm9yaHdhcmRWZWxvY2l0eTogbnVtYmVyLFxyXG4pID0+IHtcclxuICByZXR1cm4gTWF0aC5zcXJ0KHdpbmROb3Jod2FyZFZlbG9jaXR5ICoqIDIgKyB3aW5kRWFzdHdhcmRWZWxvY2l0eSAqKiAyKTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRXaW5kRGlyZWN0aW9uID0gKFxyXG4gIHdpbmRFYXN0d2FyZFZlbG9jaXR5OiBudW1iZXIsXHJcbiAgd2luZE5vcmh3YXJkVmVsb2NpdHk6IG51bWJlcixcclxuKSA9PiB7XHJcbiAgY29uc3QgZGVncmVlID1cclxuICAgIC0oTWF0aC5hdGFuMih3aW5kTm9yaHdhcmRWZWxvY2l0eSwgd2luZEVhc3R3YXJkVmVsb2NpdHkpICogMTgwKSAvIE1hdGguUEkgLVxyXG4gICAgOTA7XHJcblxyXG4gIHJldHVybiBkZWdyZWUgPj0gMCA/IGRlZ3JlZSA6IGRlZ3JlZSArIDM2MDtcclxufTtcclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQW9CRTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBQUFBLGNBQUEsR0FBQUUsQ0FBQTs7Ozs7Ozs7O0FBcEJLLE1BQU1DLE1BQU0sR0FBSUMsT0FBaUIsSUFBSTtFQUFBO0VBQUFKLGNBQUEsR0FBQUssQ0FBQTtFQUFBTCxjQUFBLEdBQUFFLENBQUE7RUFDMUMsT0FBT0UsT0FBTyxDQUFDRSxNQUFNLEdBQUcsQ0FBQztFQUFBO0VBQUEsQ0FBQU4sY0FBQSxHQUFBTyxDQUFBLFVBQUdDLElBQUksQ0FBQ0MsR0FBRyxDQUFDLEdBQUdMLE9BQU8sQ0FBQztFQUFBO0VBQUEsQ0FBQUosY0FBQSxHQUFBTyxDQUFBLFVBQUdHLFNBQVM7QUFDOUQsQ0FBQztBQUFDO0FBQUFWLGNBQUEsR0FBQUUsQ0FBQTtBQUZXUyxPQUFBLENBQUFSLE1BQU0sR0FBQUEsTUFBQTtBQUVqQjtBQUFBSCxjQUFBLEdBQUFFLENBQUE7QUFFSyxNQUFNVSxZQUFZLEdBQUdBLENBQzFCQyxvQkFBNEIsRUFDNUJDLG9CQUE0QixLQUMxQjtFQUFBO0VBQUFkLGNBQUEsR0FBQUssQ0FBQTtFQUFBTCxjQUFBLEdBQUFFLENBQUE7RUFDRixPQUFPTSxJQUFJLENBQUNPLElBQUksQ0FBQ1AsSUFBQSxDQUFBUSxHQUFBLENBQUFGLG9CQUFvQixFQUFJLENBQUMsSUFBR04sSUFBQSxDQUFBUSxHQUFBLENBQUFILG9CQUFvQixFQUFJLENBQUMsRUFBQztBQUN6RSxDQUFDO0FBQUM7QUFBQWIsY0FBQSxHQUFBRSxDQUFBO0FBTFdTLE9BQUEsQ0FBQUMsWUFBWSxHQUFBQSxZQUFBO0FBS3ZCO0FBQUFaLGNBQUEsR0FBQUUsQ0FBQTtBQUVLLE1BQU1lLGdCQUFnQixHQUFHQSxDQUM5Qkosb0JBQTRCLEVBQzVCQyxvQkFBNEIsS0FDMUI7RUFBQTtFQUFBZCxjQUFBLEdBQUFLLENBQUE7RUFDRixNQUFNYSxNQUFNO0VBQUE7RUFBQSxDQUFBbEIsY0FBQSxHQUFBRSxDQUFBLE9BQ1YsRUFBRU0sSUFBSSxDQUFDVyxLQUFLLENBQUNMLG9CQUFvQixFQUFFRCxvQkFBb0IsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxHQUFHTCxJQUFJLENBQUNZLEVBQUUsR0FDekUsRUFBRTtFQUFDO0VBQUFwQixjQUFBLEdBQUFFLENBQUE7RUFFTCxPQUFPZ0IsTUFBTSxJQUFJLENBQUM7RUFBQTtFQUFBLENBQUFsQixjQUFBLEdBQUFPLENBQUEsVUFBR1csTUFBTTtFQUFBO0VBQUEsQ0FBQWxCLGNBQUEsR0FBQU8sQ0FBQSxVQUFHVyxNQUFNLEdBQUcsR0FBRztBQUM1QyxDQUFDO0FBQUM7QUFBQWxCLGNBQUEsR0FBQUUsQ0FBQTtBQVRXUyxPQUFBLENBQUFNLGdCQUFnQixHQUFBQSxnQkFBQSJ9