315508ca3b11317f286453cb39282a86
"use strict";

/* istanbul ignore next */
function cov_1r91lnglt1() {
  var path = "/home/user/climbox/packages/api/src/utils/uploads/upload-sheet-data.ts";
  var hash = "2f8820ab964a567dd156a0ff70669394cfa3e0e2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/user/climbox/packages/api/src/utils/uploads/upload-sheet-data.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 22
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "13": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "14": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "15": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 231
        }
      },
      "16": {
        start: {
          line: 18,
          column: 17
        },
        end: {
          line: 18,
          column: 34
        }
      },
      "17": {
        start: {
          line: 19,
          column: 19
        },
        end: {
          line: 19,
          column: 55
        }
      },
      "18": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 20,
          column: 42
        }
      },
      "19": {
        start: {
          line: 21,
          column: 20
        },
        end: {
          line: 21,
          column: 57
        }
      },
      "20": {
        start: {
          line: 22,
          column: 19
        },
        end: {
          line: 22,
          column: 55
        }
      },
      "21": {
        start: {
          line: 23,
          column: 21
        },
        end: {
          line: 23,
          column: 45
        }
      },
      "22": {
        start: {
          line: 24,
          column: 31
        },
        end: {
          line: 24,
          column: 81
        }
      },
      "23": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 35
        }
      },
      "24": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 59
        }
      },
      "25": {
        start: {
          line: 27,
          column: 23
        },
        end: {
          line: 27,
          column: 64
        }
      },
      "26": {
        start: {
          line: 28,
          column: 23
        },
        end: {
          line: 28,
          column: 58
        }
      },
      "27": {
        start: {
          line: 29,
          column: 29
        },
        end: {
          line: 29,
          column: 61
        }
      },
      "28": {
        start: {
          line: 30,
          column: 15
        },
        end: {
          line: 30,
          column: 52
        }
      },
      "29": {
        start: {
          line: 31,
          column: 28
        },
        end: {
          line: 44,
          column: 1
        }
      },
      "30": {
        start: {
          line: 45,
          column: 23
        },
        end: {
          line: 45,
          column: 47
        }
      },
      "31": {
        start: {
          line: 46,
          column: 23
        },
        end: {
          line: 46,
          column: 35
        }
      },
      "32": {
        start: {
          line: 47,
          column: 30
        },
        end: {
          line: 47,
          column: 51
        }
      },
      "33": {
        start: {
          line: 48,
          column: 29
        },
        end: {
          line: 48,
          column: 34
        }
      },
      "34": {
        start: {
          line: 49,
          column: 18
        },
        end: {
          line: 56,
          column: 1
        }
      },
      "35": {
        start: {
          line: 57,
          column: 14
        },
        end: {
          line: 117,
          column: 1
        }
      },
      "36": {
        start: {
          line: 118,
          column: 19
        },
        end: {
          line: 123,
          column: 1
        }
      },
      "37": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 121,
          column: 5
        }
      },
      "38": {
        start: {
          line: 119,
          column: 51
        },
        end: {
          line: 119,
          column: 59
        }
      },
      "39": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 159
        }
      },
      "40": {
        start: {
          line: 120,
          column: 101
        },
        end: {
          line: 120,
          column: 116
        }
      },
      "41": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 122,
          column: 25
        }
      },
      "42": {
        start: {
          line: 124,
          column: 0
        },
        end: {
          line: 124,
          column: 32
        }
      },
      "43": {
        start: {
          line: 125,
          column: 27
        },
        end: {
          line: 132,
          column: 1
        }
      },
      "44": {
        start: {
          line: 126,
          column: 18
        },
        end: {
          line: 126,
          column: 50
        }
      },
      "45": {
        start: {
          line: 127,
          column: 19
        },
        end: {
          line: 127,
          column: 48
        }
      },
      "46": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "47": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 53
        }
      },
      "48": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 131,
          column: 28
        }
      },
      "49": {
        start: {
          line: 133,
          column: 21
        },
        end: {
          line: 153,
          column: 1
        }
      },
      "50": {
        start: {
          line: 134,
          column: 20
        },
        end: {
          line: 134,
          column: 40
        }
      },
      "51": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 138,
          column: 63
        }
      },
      "52": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 63
        }
      },
      "53": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 147,
          column: 5
        }
      },
      "54": {
        start: {
          line: 140,
          column: 21
        },
        end: {
          line: 140,
          column: 48
        }
      },
      "55": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 46
        }
      },
      "56": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 80
        }
      },
      "57": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 20
        }
      },
      "58": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 149,
          column: 58
        }
      },
      "59": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 58
        }
      },
      "60": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 151,
          column: 37
        }
      },
      "61": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 37
        }
      },
      "62": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 152,
          column: 53
        }
      },
      "63": {
        start: {
          line: 154,
          column: 27
        },
        end: {
          line: 164,
          column: 1
        }
      },
      "64": {
        start: {
          line: 155,
          column: 27
        },
        end: {
          line: 155,
          column: 79
        }
      },
      "65": {
        start: {
          line: 155,
          column: 61
        },
        end: {
          line: 155,
          column: 78
        }
      },
      "66": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 157,
          column: 30
        }
      },
      "67": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 30
        }
      },
      "68": {
        start: {
          line: 158,
          column: 22
        },
        end: {
          line: 158,
          column: 69
        }
      },
      "69": {
        start: {
          line: 158,
          column: 56
        },
        end: {
          line: 158,
          column: 68
        }
      },
      "70": {
        start: {
          line: 159,
          column: 22
        },
        end: {
          line: 159,
          column: 69
        }
      },
      "71": {
        start: {
          line: 159,
          column: 56
        },
        end: {
          line: 159,
          column: 68
        }
      },
      "72": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 162,
          column: 5
        }
      },
      "73": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 79
        }
      },
      "74": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 163,
          column: 34
        }
      },
      "75": {
        start: {
          line: 165,
          column: 24
        },
        end: {
          line: 184,
          column: 2
        }
      },
      "76": {
        start: {
          line: 165,
          column: 38
        },
        end: {
          line: 184,
          column: 2
        }
      },
      "77": {
        start: {
          line: 167,
          column: 31
        },
        end: {
          line: 167,
          column: 81
        }
      },
      "78": {
        start: {
          line: 168,
          column: 26
        },
        end: {
          line: 168,
          column: 99
        }
      },
      "79": {
        start: {
          line: 169,
          column: 24
        },
        end: {
          line: 169,
          column: 216
        }
      },
      "80": {
        start: {
          line: 169,
          column: 119
        },
        end: {
          line: 169,
          column: 215
        }
      },
      "81": {
        start: {
          line: 169,
          column: 140
        },
        end: {
          line: 169,
          column: 214
        }
      },
      "82": {
        start: {
          line: 169,
          column: 159
        },
        end: {
          line: 169,
          column: 213
        }
      },
      "83": {
        start: {
          line: 170,
          column: 20
        },
        end: {
          line: 170,
          column: 46
        }
      },
      "84": {
        start: {
          line: 171,
          column: 29
        },
        end: {
          line: 171,
          column: 167
        }
      },
      "85": {
        start: {
          line: 171,
          column: 58
        },
        end: {
          line: 171,
          column: 164
        }
      },
      "86": {
        start: {
          line: 171,
          column: 92
        },
        end: {
          line: 171,
          column: 115
        }
      },
      "87": {
        start: {
          line: 172,
          column: 28
        },
        end: {
          line: 172,
          column: 101
        }
      },
      "88": {
        start: {
          line: 172,
          column: 59
        },
        end: {
          line: 172,
          column: 100
        }
      },
      "89": {
        start: {
          line: 173,
          column: 27
        },
        end: {
          line: 173,
          column: 86
        }
      },
      "90": {
        start: {
          line: 173,
          column: 52
        },
        end: {
          line: 173,
          column: 85
        }
      },
      "91": {
        start: {
          line: 174,
          column: 22
        },
        end: {
          line: 174,
          column: 61
        }
      },
      "92": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 183,
          column: 6
        }
      },
      "93": {
        start: {
          line: 185,
          column: 0
        },
        end: {
          line: 185,
          column: 42
        }
      },
      "94": {
        start: {
          line: 186,
          column: 26
        },
        end: {
          line: 193,
          column: 41
        }
      },
      "95": {
        start: {
          line: 186,
          column: 67
        },
        end: {
          line: 193,
          column: 41
        }
      },
      "96": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 190,
          column: 20
        }
      },
      "97": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 20
        }
      },
      "98": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 191,
          column: 21
        }
      },
      "99": {
        start: {
          line: 193,
          column: 22
        },
        end: {
          line: 193,
          column: 40
        }
      },
      "100": {
        start: {
          line: 194,
          column: 0
        },
        end: {
          line: 194,
          column: 46
        }
      },
      "101": {
        start: {
          line: 195,
          column: 30
        },
        end: {
          line: 224,
          column: 1
        }
      },
      "102": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 196,
          column: 32
        }
      },
      "103": {
        start: {
          line: 197,
          column: 24
        },
        end: {
          line: 197,
          column: 83
        }
      },
      "104": {
        start: {
          line: 197,
          column: 58
        },
        end: {
          line: 197,
          column: 82
        }
      },
      "105": {
        start: {
          line: 198,
          column: 31
        },
        end: {
          line: 198,
          column: 98
        }
      },
      "106": {
        start: {
          line: 198,
          column: 65
        },
        end: {
          line: 198,
          column: 97
        }
      },
      "107": {
        start: {
          line: 199,
          column: 23
        },
        end: {
          line: 199,
          column: 71
        }
      },
      "108": {
        start: {
          line: 199,
          column: 57
        },
        end: {
          line: 199,
          column: 70
        }
      },
      "109": {
        start: {
          line: 200,
          column: 25
        },
        end: {
          line: 200,
          column: 34
        }
      },
      "110": {
        start: {
          line: 201,
          column: 4
        },
        end: {
          line: 214,
          column: 7
        }
      },
      "111": {
        start: {
          line: 202,
          column: 26
        },
        end: {
          line: 202,
          column: 58
        }
      },
      "112": {
        start: {
          line: 203,
          column: 33
        },
        end: {
          line: 203,
          column: 79
        }
      },
      "113": {
        start: {
          line: 204,
          column: 25
        },
        end: {
          line: 204,
          column: 46
        }
      },
      "114": {
        start: {
          line: 205,
          column: 20
        },
        end: {
          line: 205,
          column: 66
        }
      },
      "115": {
        start: {
          line: 206,
          column: 21
        },
        end: {
          line: 206,
          column: 42
        }
      },
      "116": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "117": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 27
        }
      },
      "118": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 41
        }
      },
      "119": {
        start: {
          line: 215,
          column: 4
        },
        end: {
          line: 223,
          column: 7
        }
      },
      "120": {
        start: {
          line: 216,
          column: 53
        },
        end: {
          line: 216,
          column: 67
        }
      },
      "121": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 222,
          column: 10
        }
      },
      "122": {
        start: {
          line: 225,
          column: 20
        },
        end: {
          line: 272,
          column: 1
        }
      },
      "123": {
        start: {
          line: 226,
          column: 27
        },
        end: {
          line: 226,
          column: 63
        }
      },
      "124": {
        start: {
          line: 227,
          column: 21
        },
        end: {
          line: 229,
          column: 19
        }
      },
      "125": {
        start: {
          line: 230,
          column: 29
        },
        end: {
          line: 235,
          column: 10
        }
      },
      "126": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "127": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 23
        }
      },
      "128": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 69
        }
      },
      "129": {
        start: {
          line: 236,
          column: 20
        },
        end: {
          line: 236,
          column: 86
        }
      },
      "130": {
        start: {
          line: 237,
          column: 23
        },
        end: {
          line: 237,
          column: 24
        }
      },
      "131": {
        start: {
          line: 238,
          column: 4
        },
        end: {
          line: 238,
          column: 52
        }
      },
      "132": {
        start: {
          line: 239,
          column: 4
        },
        end: {
          line: 259,
          column: 11
        }
      },
      "133": {
        start: {
          line: 240,
          column: 30
        },
        end: {
          line: 240,
          column: 83
        }
      },
      "134": {
        start: {
          line: 243,
          column: 28
        },
        end: {
          line: 245,
          column: 15
        }
      },
      "135": {
        start: {
          line: 246,
          column: 26
        },
        end: {
          line: 246,
          column: 87
        }
      },
      "136": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 258,
          column: 11
        }
      },
      "137": {
        start: {
          line: 248,
          column: 27
        },
        end: {
          line: 248,
          column: 46
        }
      },
      "138": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 257,
          column: 13
        }
      },
      "139": {
        start: {
          line: 251,
          column: 16
        },
        end: {
          line: 256,
          column: 18
        }
      },
      "140": {
        start: {
          line: 260,
          column: 4
        },
        end: {
          line: 260,
          column: 55
        }
      },
      "141": {
        start: {
          line: 261,
          column: 4
        },
        end: {
          line: 261,
          column: 67
        }
      },
      "142": {
        start: {
          line: 262,
          column: 17
        },
        end: {
          line: 269,
          column: 83
        }
      },
      "143": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "144": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 24
        }
      },
      "145": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 52
        }
      },
      "146": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 32
        }
      },
      "147": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 268,
          column: 21
        }
      },
      "148": {
        start: {
          line: 269,
          column: 43
        },
        end: {
          line: 269,
          column: 82
        }
      },
      "149": {
        start: {
          line: 270,
          column: 4
        },
        end: {
          line: 270,
          column: 70
        }
      },
      "150": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 271,
          column: 16
        }
      },
      "151": {
        start: {
          line: 273,
          column: 0
        },
        end: {
          line: 273,
          column: 34
        }
      },
      "152": {
        start: {
          line: 274,
          column: 27
        },
        end: {
          line: 299,
          column: 2
        }
      },
      "153": {
        start: {
          line: 274,
          column: 129
        },
        end: {
          line: 299,
          column: 2
        }
      },
      "154": {
        start: {
          line: 275,
          column: 4
        },
        end: {
          line: 275,
          column: 63
        }
      },
      "155": {
        start: {
          line: 276,
          column: 25
        },
        end: {
          line: 280,
          column: 6
        }
      },
      "156": {
        start: {
          line: 281,
          column: 4
        },
        end: {
          line: 284,
          column: 5
        }
      },
      "157": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 282,
          column: 122
        }
      },
      "158": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 283,
          column: 28
        }
      },
      "159": {
        start: {
          line: 286,
          column: 31
        },
        end: {
          line: 286,
          column: 78
        }
      },
      "160": {
        start: {
          line: 288,
          column: 25
        },
        end: {
          line: 288,
          column: 186
        }
      },
      "161": {
        start: {
          line: 289,
          column: 28
        },
        end: {
          line: 297,
          column: 6
        }
      },
      "162": {
        start: {
          line: 298,
          column: 4
        },
        end: {
          line: 298,
          column: 27
        }
      },
      "163": {
        start: {
          line: 300,
          column: 0
        },
        end: {
          line: 300,
          column: 48
        }
      },
      "164": {
        start: {
          line: 301,
          column: 33
        },
        end: {
          line: 319,
          column: 2
        }
      },
      "165": {
        start: {
          line: 301,
          column: 99
        },
        end: {
          line: 319,
          column: 2
        }
      },
      "166": {
        start: {
          line: 302,
          column: 33
        },
        end: {
          line: 310,
          column: 6
        }
      },
      "167": {
        start: {
          line: 311,
          column: 25
        },
        end: {
          line: 317,
          column: 11
        }
      },
      "168": {
        start: {
          line: 318,
          column: 4
        },
        end: {
          line: 318,
          column: 24
        }
      },
      "169": {
        start: {
          line: 320,
          column: 0
        },
        end: {
          line: 320,
          column: 60
        }
      },
      "170": {
        start: {
          line: 321,
          column: 30
        },
        end: {
          line: 346,
          column: 1
        }
      },
      "171": {
        start: {
          line: 322,
          column: 4
        },
        end: {
          line: 322,
          column: 69
        }
      },
      "172": {
        start: {
          line: 323,
          column: 20
        },
        end: {
          line: 340,
          column: 7
        }
      },
      "173": {
        start: {
          line: 323,
          column: 72
        },
        end: {
          line: 340,
          column: 6
        }
      },
      "174": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 338,
          column: 9
        }
      },
      "175": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 333,
          column: 27
        }
      },
      "176": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 336,
          column: 75
        }
      },
      "177": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 337,
          column: 31
        }
      },
      "178": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 339,
          column: 20
        }
      },
      "179": {
        start: {
          line: 342,
          column: 26
        },
        end: {
          line: 342,
          column: 40
        }
      },
      "180": {
        start: {
          line: 343,
          column: 4
        },
        end: {
          line: 345,
          column: 7
        }
      },
      "181": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 344,
          column: 71
        }
      },
      "182": {
        start: {
          line: 347,
          column: 0
        },
        end: {
          line: 347,
          column: 54
        }
      },
      "183": {
        start: {
          line: 349,
          column: 4
        },
        end: {
          line: 355,
          column: 5
        }
      },
      "184": {
        start: {
          line: 350,
          column: 29
        },
        end: {
          line: 350,
          column: 91
        }
      },
      "185": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 351,
          column: 55
        }
      },
      "186": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 354,
          column: 17
        }
      },
      "187": {
        start: {
          line: 357,
          column: 33
        },
        end: {
          line: 378,
          column: 2
        }
      },
      "188": {
        start: {
          line: 357,
          column: 174
        },
        end: {
          line: 378,
          column: 2
        }
      },
      "189": {
        start: {
          line: 358,
          column: 32
        },
        end: {
          line: 365,
          column: 6
        }
      },
      "190": {
        start: {
          line: 366,
          column: 4
        },
        end: {
          line: 368,
          column: 5
        }
      },
      "191": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 367,
          column: 118
        }
      },
      "192": {
        start: {
          line: 369,
          column: 25
        },
        end: {
          line: 375,
          column: 6
        }
      },
      "193": {
        start: {
          line: 376,
          column: 17
        },
        end: {
          line: 376,
          column: 154
        }
      },
      "194": {
        start: {
          line: 377,
          column: 4
        },
        end: {
          line: 377,
          column: 53
        }
      },
      "195": {
        start: {
          line: 379,
          column: 30
        },
        end: {
          line: 435,
          column: 2
        }
      },
      "196": {
        start: {
          line: 379,
          column: 101
        },
        end: {
          line: 435,
          column: 2
        }
      },
      "197": {
        start: {
          line: 380,
          column: 36
        },
        end: {
          line: 388,
          column: 6
        }
      },
      "198": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 387,
          column: 10
        }
      },
      "199": {
        start: {
          line: 389,
          column: 32
        },
        end: {
          line: 389,
          column: 129
        }
      },
      "200": {
        start: {
          line: 389,
          column: 70
        },
        end: {
          line: 389,
          column: 128
        }
      },
      "201": {
        start: {
          line: 390,
          column: 30
        },
        end: {
          line: 390,
          column: 90
        }
      },
      "202": {
        start: {
          line: 391,
          column: 28
        },
        end: {
          line: 412,
          column: 6
        }
      },
      "203": {
        start: {
          line: 395,
          column: 32
        },
        end: {
          line: 401,
          column: 10
        }
      },
      "204": {
        start: {
          line: 396,
          column: 12
        },
        end: {
          line: 397,
          column: 25
        }
      },
      "205": {
        start: {
          line: 397,
          column: 16
        },
        end: {
          line: 397,
          column: 25
        }
      },
      "206": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 399,
          column: 26
        }
      },
      "207": {
        start: {
          line: 399,
          column: 16
        },
        end: {
          line: 399,
          column: 26
        }
      },
      "208": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 400,
          column: 21
        }
      },
      "209": {
        start: {
          line: 402,
          column: 26
        },
        end: {
          line: 402,
          column: 73
        }
      },
      "210": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 411,
          column: 24
        }
      },
      "211": {
        start: {
          line: 413,
          column: 26
        },
        end: {
          line: 413,
          column: 72
        }
      },
      "212": {
        start: {
          line: 413,
          column: 56
        },
        end: {
          line: 413,
          column: 71
        }
      },
      "213": {
        start: {
          line: 414,
          column: 29
        },
        end: {
          line: 414,
          column: 75
        }
      },
      "214": {
        start: {
          line: 416,
          column: 4
        },
        end: {
          line: 416,
          column: 143
        }
      },
      "215": {
        start: {
          line: 417,
          column: 4
        },
        end: {
          line: 417,
          column: 98
        }
      },
      "216": {
        start: {
          line: 418,
          column: 4
        },
        end: {
          line: 418,
          column: 146
        }
      },
      "217": {
        start: {
          line: 419,
          column: 20
        },
        end: {
          line: 419,
          column: 157
        }
      },
      "218": {
        start: {
          line: 419,
          column: 86
        },
        end: {
          line: 419,
          column: 142
        }
      },
      "219": {
        start: {
          line: 420,
          column: 20
        },
        end: {
          line: 420,
          column: 157
        }
      },
      "220": {
        start: {
          line: 420,
          column: 86
        },
        end: {
          line: 420,
          column: 142
        }
      },
      "221": {
        start: {
          line: 421,
          column: 4
        },
        end: {
          line: 433,
          column: 5
        }
      },
      "222": {
        start: {
          line: 423,
          column: 8
        },
        end: {
          line: 429,
          column: 11
        }
      },
      "223": {
        start: {
          line: 432,
          column: 8
        },
        end: {
          line: 432,
          column: 92
        }
      },
      "224": {
        start: {
          line: 434,
          column: 4
        },
        end: {
          line: 434,
          column: 35
        }
      },
      "225": {
        start: {
          line: 436,
          column: 29
        },
        end: {
          line: 514,
          column: 2
        }
      },
      "226": {
        start: {
          line: 436,
          column: 169
        },
        end: {
          line: 514,
          column: 2
        }
      },
      "227": {
        start: {
          line: 437,
          column: 4
        },
        end: {
          line: 437,
          column: 49
        }
      },
      "228": {
        start: {
          line: 438,
          column: 4
        },
        end: {
          line: 440,
          column: 5
        }
      },
      "229": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 439,
          column: 70
        }
      },
      "230": {
        start: {
          line: 441,
          column: 115
        },
        end: {
          line: 441,
          column: 159
        }
      },
      "231": {
        start: {
          line: 442,
          column: 4
        },
        end: {
          line: 446,
          column: 5
        }
      },
      "232": {
        start: {
          line: 443,
          column: 8
        },
        end: {
          line: 445,
          column: 85
        }
      },
      "233": {
        start: {
          line: 444,
          column: 29
        },
        end: {
          line: 444,
          column: 60
        }
      },
      "234": {
        start: {
          line: 447,
          column: 21
        },
        end: {
          line: 447,
          column: 121
        }
      },
      "235": {
        start: {
          line: 447,
          column: 55
        },
        end: {
          line: 447,
          column: 115
        }
      },
      "236": {
        start: {
          line: 448,
          column: 4
        },
        end: {
          line: 449,
          column: 122
        }
      },
      "237": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 449,
          column: 122
        }
      },
      "238": {
        start: {
          line: 450,
          column: 4
        },
        end: {
          line: 474,
          column: 5
        }
      },
      "239": {
        start: {
          line: 452,
          column: 8
        },
        end: {
          line: 453,
          column: 62
        }
      },
      "240": {
        start: {
          line: 453,
          column: 12
        },
        end: {
          line: 453,
          column: 62
        }
      },
      "241": {
        start: {
          line: 454,
          column: 28
        },
        end: {
          line: 454,
          column: 87
        }
      },
      "242": {
        start: {
          line: 454,
          column: 62
        },
        end: {
          line: 454,
          column: 86
        }
      },
      "243": {
        start: {
          line: 455,
          column: 8
        },
        end: {
          line: 456,
          column: 93
        }
      },
      "244": {
        start: {
          line: 456,
          column: 12
        },
        end: {
          line: 456,
          column: 93
        }
      },
      "245": {
        start: {
          line: 457,
          column: 20
        },
        end: {
          line: 459,
          column: 52
        }
      },
      "246": {
        start: {
          line: 458,
          column: 24
        },
        end: {
          line: 458,
          column: 38
        }
      },
      "247": {
        start: {
          line: 459,
          column: 27
        },
        end: {
          line: 459,
          column: 51
        }
      },
      "248": {
        start: {
          line: 460,
          column: 26
        },
        end: {
          line: 460,
          column: 69
        }
      },
      "249": {
        start: {
          line: 460,
          column: 53
        },
        end: {
          line: 460,
          column: 59
        }
      },
      "250": {
        start: {
          line: 461,
          column: 28
        },
        end: {
          line: 469,
          column: 16
        }
      },
      "251": {
        start: {
          line: 470,
          column: 29
        },
        end: {
          line: 470,
          column: 85
        }
      },
      "252": {
        start: {
          line: 471,
          column: 8
        },
        end: {
          line: 473,
          column: 9
        }
      },
      "253": {
        start: {
          line: 472,
          column: 12
        },
        end: {
          line: 472,
          column: 92
        }
      },
      "254": {
        start: {
          line: 475,
          column: 20
        },
        end: {
          line: 475,
          column: 87
        }
      },
      "255": {
        start: {
          line: 476,
          column: 24
        },
        end: {
          line: 481,
          column: 6
        }
      },
      "256": {
        start: {
          line: 482,
          column: 22
        },
        end: {
          line: 496,
          column: 7
        }
      },
      "257": {
        start: {
          line: 483,
          column: 8
        },
        end: {
          line: 495,
          column: 11
        }
      },
      "258": {
        start: {
          line: 497,
          column: 28
        },
        end: {
          line: 497,
          column: 63
        }
      },
      "259": {
        start: {
          line: 497,
          column: 49
        },
        end: {
          line: 497,
          column: 55
        }
      },
      "260": {
        start: {
          line: 498,
          column: 20
        },
        end: {
          line: 498,
          column: 156
        }
      },
      "261": {
        start: {
          line: 498,
          column: 85
        },
        end: {
          line: 498,
          column: 141
        }
      },
      "262": {
        start: {
          line: 499,
          column: 20
        },
        end: {
          line: 499,
          column: 156
        }
      },
      "263": {
        start: {
          line: 499,
          column: 85
        },
        end: {
          line: 499,
          column: 141
        }
      },
      "264": {
        start: {
          line: 500,
          column: 28
        },
        end: {
          line: 500,
          column: 181
        }
      },
      "265": {
        start: {
          line: 501,
          column: 4
        },
        end: {
          line: 510,
          column: 8
        }
      },
      "266": {
        start: {
          line: 503,
          column: 8
        },
        end: {
          line: 509,
          column: 11
        }
      },
      "267": {
        start: {
          line: 511,
          column: 4
        },
        end: {
          line: 511,
          column: 89
        }
      },
      "268": {
        start: {
          line: 512,
          column: 4
        },
        end: {
          line: 512,
          column: 52
        }
      },
      "269": {
        start: {
          line: 513,
          column: 4
        },
        end: {
          line: 513,
          column: 26
        }
      },
      "270": {
        start: {
          line: 515,
          column: 0
        },
        end: {
          line: 515,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 11,
            column: 57
          }
        },
        loc: {
          start: {
            line: 11,
            column: 71
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 118,
            column: 19
          },
          end: {
            line: 118,
            column: 20
          }
        },
        loc: {
          start: {
            line: 118,
            column: 42
          },
          end: {
            line: 123,
            column: 1
          }
        },
        line: 118
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 119,
            column: 33
          },
          end: {
            line: 119,
            column: 34
          }
        },
        loc: {
          start: {
            line: 119,
            column: 51
          },
          end: {
            line: 119,
            column: 59
          }
        },
        line: 119
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 120,
            column: 82
          },
          end: {
            line: 120,
            column: 83
          }
        },
        loc: {
          start: {
            line: 120,
            column: 101
          },
          end: {
            line: 120,
            column: 116
          }
        },
        line: 120
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 125,
            column: 27
          },
          end: {
            line: 125,
            column: 28
          }
        },
        loc: {
          start: {
            line: 125,
            column: 52
          },
          end: {
            line: 132,
            column: 1
          }
        },
        line: 125
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 133,
            column: 21
          },
          end: {
            line: 133,
            column: 22
          }
        },
        loc: {
          start: {
            line: 133,
            column: 58
          },
          end: {
            line: 153,
            column: 1
          }
        },
        line: 133
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 154,
            column: 27
          },
          end: {
            line: 154,
            column: 28
          }
        },
        loc: {
          start: {
            line: 154,
            column: 49
          },
          end: {
            line: 164,
            column: 1
          }
        },
        line: 154
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 155,
            column: 54
          },
          end: {
            line: 155,
            column: 55
          }
        },
        loc: {
          start: {
            line: 155,
            column: 61
          },
          end: {
            line: 155,
            column: 78
          }
        },
        line: 155
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 158,
            column: 49
          },
          end: {
            line: 158,
            column: 50
          }
        },
        loc: {
          start: {
            line: 158,
            column: 56
          },
          end: {
            line: 158,
            column: 68
          }
        },
        line: 158
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 159,
            column: 49
          },
          end: {
            line: 159,
            column: 50
          }
        },
        loc: {
          start: {
            line: 159,
            column: 56
          },
          end: {
            line: 159,
            column: 68
          }
        },
        line: 159
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 165,
            column: 24
          },
          end: {
            line: 165,
            column: 25
          }
        },
        loc: {
          start: {
            line: 165,
            column: 38
          },
          end: {
            line: 184,
            column: 2
          }
        },
        line: 165
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 165,
            column: 72
          },
          end: {
            line: 165,
            column: 73
          }
        },
        loc: {
          start: {
            line: 165,
            column: 85
          },
          end: {
            line: 184,
            column: 1
          }
        },
        line: 165
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 169,
            column: 110
          },
          end: {
            line: 169,
            column: 111
          }
        },
        loc: {
          start: {
            line: 169,
            column: 119
          },
          end: {
            line: 169,
            column: 215
          }
        },
        line: 169
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 169,
            column: 130
          },
          end: {
            line: 169,
            column: 131
          }
        },
        loc: {
          start: {
            line: 169,
            column: 140
          },
          end: {
            line: 169,
            column: 214
          }
        },
        line: 169
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 169,
            column: 149
          },
          end: {
            line: 169,
            column: 150
          }
        },
        loc: {
          start: {
            line: 169,
            column: 159
          },
          end: {
            line: 169,
            column: 213
          }
        },
        line: 169
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 171,
            column: 41
          },
          end: {
            line: 171,
            column: 42
          }
        },
        loc: {
          start: {
            line: 171,
            column: 48
          },
          end: {
            line: 171,
            column: 166
          }
        },
        line: 171
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 171,
            column: 82
          },
          end: {
            line: 171,
            column: 83
          }
        },
        loc: {
          start: {
            line: 171,
            column: 92
          },
          end: {
            line: 171,
            column: 115
          }
        },
        line: 171
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 172,
            column: 52
          },
          end: {
            line: 172,
            column: 53
          }
        },
        loc: {
          start: {
            line: 172,
            column: 59
          },
          end: {
            line: 172,
            column: 100
          }
        },
        line: 172
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 173,
            column: 42
          },
          end: {
            line: 173,
            column: 43
          }
        },
        loc: {
          start: {
            line: 173,
            column: 52
          },
          end: {
            line: 173,
            column: 85
          }
        },
        line: 173
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 186,
            column: 26
          },
          end: {
            line: 186,
            column: 27
          }
        },
        loc: {
          start: {
            line: 186,
            column: 67
          },
          end: {
            line: 193,
            column: 41
          }
        },
        line: 186
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 188,
            column: 9
          },
          end: {
            line: 188,
            column: 10
          }
        },
        loc: {
          start: {
            line: 188,
            column: 19
          },
          end: {
            line: 192,
            column: 1
          }
        },
        line: 188
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        },
        loc: {
          start: {
            line: 193,
            column: 22
          },
          end: {
            line: 193,
            column: 40
          }
        },
        line: 193
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 195,
            column: 30
          },
          end: {
            line: 195,
            column: 31
          }
        },
        loc: {
          start: {
            line: 195,
            column: 102
          },
          end: {
            line: 224,
            column: 1
          }
        },
        line: 195
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 197,
            column: 51
          },
          end: {
            line: 197,
            column: 52
          }
        },
        loc: {
          start: {
            line: 197,
            column: 58
          },
          end: {
            line: 197,
            column: 82
          }
        },
        line: 197
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 198,
            column: 58
          },
          end: {
            line: 198,
            column: 59
          }
        },
        loc: {
          start: {
            line: 198,
            column: 65
          },
          end: {
            line: 198,
            column: 97
          }
        },
        line: 198
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 199,
            column: 50
          },
          end: {
            line: 199,
            column: 51
          }
        },
        loc: {
          start: {
            line: 199,
            column: 57
          },
          end: {
            line: 199,
            column: 70
          }
        },
        line: 199
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 201,
            column: 33
          },
          end: {
            line: 201,
            column: 34
          }
        },
        loc: {
          start: {
            line: 201,
            column: 42
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 201
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 215,
            column: 40
          },
          end: {
            line: 215,
            column: 41
          }
        },
        loc: {
          start: {
            line: 215,
            column: 57
          },
          end: {
            line: 223,
            column: 5
          }
        },
        line: 215
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 225,
            column: 20
          },
          end: {
            line: 225,
            column: 21
          }
        },
        loc: {
          start: {
            line: 225,
            column: 114
          },
          end: {
            line: 272,
            column: 1
          }
        },
        line: 225
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 230,
            column: 53
          },
          end: {
            line: 230,
            column: 54
          }
        },
        loc: {
          start: {
            line: 230,
            column: 72
          },
          end: {
            line: 235,
            column: 5
          }
        },
        line: 230
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 239,
            column: 26
          },
          end: {
            line: 239,
            column: 27
          }
        },
        loc: {
          start: {
            line: 239,
            column: 35
          },
          end: {
            line: 259,
            column: 5
          }
        },
        line: 239
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 247,
            column: 20
          },
          end: {
            line: 247,
            column: 21
          }
        },
        loc: {
          start: {
            line: 247,
            column: 33
          },
          end: {
            line: 258,
            column: 9
          }
        },
        line: 247
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 262,
            column: 53
          },
          end: {
            line: 262,
            column: 54
          }
        },
        loc: {
          start: {
            line: 262,
            column: 70
          },
          end: {
            line: 269,
            column: 5
          }
        },
        line: 262
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 269,
            column: 8
          },
          end: {
            line: 269,
            column: 9
          }
        },
        loc: {
          start: {
            line: 269,
            column: 43
          },
          end: {
            line: 269,
            column: 82
          }
        },
        line: 269
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 274,
            column: 27
          },
          end: {
            line: 274,
            column: 28
          }
        },
        loc: {
          start: {
            line: 274,
            column: 129
          },
          end: {
            line: 299,
            column: 2
          }
        },
        line: 274
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 274,
            column: 163
          },
          end: {
            line: 274,
            column: 164
          }
        },
        loc: {
          start: {
            line: 274,
            column: 176
          },
          end: {
            line: 299,
            column: 1
          }
        },
        line: 274
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 301,
            column: 33
          },
          end: {
            line: 301,
            column: 34
          }
        },
        loc: {
          start: {
            line: 301,
            column: 99
          },
          end: {
            line: 319,
            column: 2
          }
        },
        line: 301
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 301,
            column: 133
          },
          end: {
            line: 301,
            column: 134
          }
        },
        loc: {
          start: {
            line: 301,
            column: 146
          },
          end: {
            line: 319,
            column: 1
          }
        },
        line: 301
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 321,
            column: 30
          },
          end: {
            line: 321,
            column: 31
          }
        },
        loc: {
          start: {
            line: 321,
            column: 79
          },
          end: {
            line: 346,
            column: 1
          }
        },
        line: 321
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 323,
            column: 61
          },
          end: {
            line: 323,
            column: 62
          }
        },
        loc: {
          start: {
            line: 323,
            column: 72
          },
          end: {
            line: 340,
            column: 6
          }
        },
        line: 323
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 323,
            column: 106
          },
          end: {
            line: 323,
            column: 107
          }
        },
        loc: {
          start: {
            line: 323,
            column: 119
          },
          end: {
            line: 340,
            column: 5
          }
        },
        line: 323
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 343,
            column: 52
          },
          end: {
            line: 343,
            column: 53
          }
        },
        loc: {
          start: {
            line: 343,
            column: 68
          },
          end: {
            line: 345,
            column: 5
          }
        },
        line: 343
      },
      "49": {
        name: "getTimezoneOffset",
        decl: {
          start: {
            line: 348,
            column: 9
          },
          end: {
            line: 348,
            column: 26
          }
        },
        loc: {
          start: {
            line: 348,
            column: 43
          },
          end: {
            line: 356,
            column: 1
          }
        },
        line: 348
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 357,
            column: 33
          },
          end: {
            line: 357,
            column: 34
          }
        },
        loc: {
          start: {
            line: 357,
            column: 174
          },
          end: {
            line: 378,
            column: 2
          }
        },
        line: 357
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 357,
            column: 208
          },
          end: {
            line: 357,
            column: 209
          }
        },
        loc: {
          start: {
            line: 357,
            column: 221
          },
          end: {
            line: 378,
            column: 1
          }
        },
        line: 357
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 379,
            column: 30
          },
          end: {
            line: 379,
            column: 31
          }
        },
        loc: {
          start: {
            line: 379,
            column: 101
          },
          end: {
            line: 435,
            column: 2
          }
        },
        line: 379
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 379,
            column: 135
          },
          end: {
            line: 379,
            column: 136
          }
        },
        loc: {
          start: {
            line: 379,
            column: 148
          },
          end: {
            line: 435,
            column: 1
          }
        },
        line: 379
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 380,
            column: 45
          },
          end: {
            line: 380,
            column: 46
          }
        },
        loc: {
          start: {
            line: 380,
            column: 52
          },
          end: {
            line: 388,
            column: 5
          }
        },
        line: 380
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 389,
            column: 63
          },
          end: {
            line: 389,
            column: 64
          }
        },
        loc: {
          start: {
            line: 389,
            column: 70
          },
          end: {
            line: 389,
            column: 128
          }
        },
        line: 389
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 393,
            column: 4
          },
          end: {
            line: 393,
            column: 5
          }
        },
        loc: {
          start: {
            line: 393,
            column: 26
          },
          end: {
            line: 412,
            column: 5
          }
        },
        line: 393
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 395,
            column: 47
          },
          end: {
            line: 395,
            column: 48
          }
        },
        loc: {
          start: {
            line: 395,
            column: 57
          },
          end: {
            line: 401,
            column: 9
          }
        },
        line: 395
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 413,
            column: 49
          },
          end: {
            line: 413,
            column: 50
          }
        },
        loc: {
          start: {
            line: 413,
            column: 56
          },
          end: {
            line: 413,
            column: 71
          }
        },
        line: 413
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 419,
            column: 76
          },
          end: {
            line: 419,
            column: 77
          }
        },
        loc: {
          start: {
            line: 419,
            column: 86
          },
          end: {
            line: 419,
            column: 142
          }
        },
        line: 419
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 420,
            column: 76
          },
          end: {
            line: 420,
            column: 77
          }
        },
        loc: {
          start: {
            line: 420,
            column: 86
          },
          end: {
            line: 420,
            column: 142
          }
        },
        line: 420
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 436,
            column: 29
          },
          end: {
            line: 436,
            column: 30
          }
        },
        loc: {
          start: {
            line: 436,
            column: 169
          },
          end: {
            line: 514,
            column: 2
          }
        },
        line: 436
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 436,
            column: 203
          },
          end: {
            line: 436,
            column: 204
          }
        },
        loc: {
          start: {
            line: 436,
            column: 216
          },
          end: {
            line: 514,
            column: 1
          }
        },
        line: 436
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 444,
            column: 17
          },
          end: {
            line: 444,
            column: 18
          }
        },
        loc: {
          start: {
            line: 444,
            column: 29
          },
          end: {
            line: 444,
            column: 60
          }
        },
        line: 444
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 447,
            column: 48
          },
          end: {
            line: 447,
            column: 49
          }
        },
        loc: {
          start: {
            line: 447,
            column: 55
          },
          end: {
            line: 447,
            column: 115
          }
        },
        line: 447
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 454,
            column: 55
          },
          end: {
            line: 454,
            column: 56
          }
        },
        loc: {
          start: {
            line: 454,
            column: 62
          },
          end: {
            line: 454,
            column: 86
          }
        },
        line: 454
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 458,
            column: 17
          },
          end: {
            line: 458,
            column: 18
          }
        },
        loc: {
          start: {
            line: 458,
            column: 24
          },
          end: {
            line: 458,
            column: 38
          }
        },
        line: 458
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 459,
            column: 20
          },
          end: {
            line: 459,
            column: 21
          }
        },
        loc: {
          start: {
            line: 459,
            column: 27
          },
          end: {
            line: 459,
            column: 51
          }
        },
        line: 459
      },
      "68": {
        name: "(anonymous_68)",
        decl: {
          start: {
            line: 460,
            column: 46
          },
          end: {
            line: 460,
            column: 47
          }
        },
        loc: {
          start: {
            line: 460,
            column: 53
          },
          end: {
            line: 460,
            column: 59
          }
        },
        line: 460
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 482,
            column: 56
          },
          end: {
            line: 482,
            column: 57
          }
        },
        loc: {
          start: {
            line: 482,
            column: 63
          },
          end: {
            line: 496,
            column: 5
          }
        },
        line: 482
      },
      "70": {
        name: "(anonymous_70)",
        decl: {
          start: {
            line: 497,
            column: 42
          },
          end: {
            line: 497,
            column: 43
          }
        },
        loc: {
          start: {
            line: 497,
            column: 49
          },
          end: {
            line: 497,
            column: 55
          }
        },
        line: 497
      },
      "71": {
        name: "(anonymous_71)",
        decl: {
          start: {
            line: 498,
            column: 75
          },
          end: {
            line: 498,
            column: 76
          }
        },
        loc: {
          start: {
            line: 498,
            column: 85
          },
          end: {
            line: 498,
            column: 141
          }
        },
        line: 498
      },
      "72": {
        name: "(anonymous_72)",
        decl: {
          start: {
            line: 499,
            column: 75
          },
          end: {
            line: 499,
            column: 76
          }
        },
        loc: {
          start: {
            line: 499,
            column: 85
          },
          end: {
            line: 499,
            column: 141
          }
        },
        line: 499
      },
      "73": {
        name: "(anonymous_73)",
        decl: {
          start: {
            line: 501,
            column: 36
          },
          end: {
            line: 501,
            column: 37
          }
        },
        loc: {
          start: {
            line: 501,
            column: 43
          },
          end: {
            line: 510,
            column: 5
          }
        },
        line: 501
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 11,
            column: 22
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 27
          }
        }, {
          start: {
            line: 11,
            column: 31
          },
          end: {
            line: 11,
            column: 51
          }
        }, {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 11
      },
      "6": {
        loc: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 12,
            column: 37
          },
          end: {
            line: 12,
            column: 40
          }
        }, {
          start: {
            line: 12,
            column: 43
          },
          end: {
            line: 12,
            column: 61
          }
        }],
        line: 12
      },
      "7": {
        loc: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 15
          }
        }, {
          start: {
            line: 12,
            column: 19
          },
          end: {
            line: 12,
            column: 33
          }
        }],
        line: 12
      },
      "8": {
        loc: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "9": {
        loc: {
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "10": {
        loc: {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 138,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 138,
            column: 63
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "11": {
        loc: {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 137,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 135,
            column: 15
          }
        }, {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 136,
            column: 42
          }
        }, {
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 137,
            column: 42
          }
        }],
        line: 135
      },
      "12": {
        loc: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "13": {
        loc: {
          start: {
            line: 142,
            column: 21
          },
          end: {
            line: 142,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 21
          },
          end: {
            line: 142,
            column: 39
          }
        }, {
          start: {
            line: 142,
            column: 43
          },
          end: {
            line: 142,
            column: 44
          }
        }],
        line: 142
      },
      "14": {
        loc: {
          start: {
            line: 145,
            column: 53
          },
          end: {
            line: 145,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 53
          },
          end: {
            line: 145,
            column: 71
          }
        }, {
          start: {
            line: 145,
            column: 75
          },
          end: {
            line: 145,
            column: 76
          }
        }],
        line: 145
      },
      "15": {
        loc: {
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 149,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 149,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "16": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 148,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 148,
            column: 16
          }
        }, {
          start: {
            line: 148,
            column: 20
          },
          end: {
            line: 148,
            column: 43
          }
        }, {
          start: {
            line: 148,
            column: 47
          },
          end: {
            line: 148,
            column: 55
          }
        }],
        line: 148
      },
      "17": {
        loc: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 151,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 151,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "18": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 150,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 150,
            column: 16
          }
        }, {
          start: {
            line: 150,
            column: 20
          },
          end: {
            line: 150,
            column: 43
          }
        }, {
          start: {
            line: 150,
            column: 47
          },
          end: {
            line: 150,
            column: 56
          }
        }],
        line: 150
      },
      "19": {
        loc: {
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 157,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 157,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "20": {
        loc: {
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "21": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 160,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 160,
            column: 24
          }
        }, {
          start: {
            line: 160,
            column: 28
          },
          end: {
            line: 160,
            column: 44
          }
        }],
        line: 160
      },
      "22": {
        loc: {
          start: {
            line: 168,
            column: 26
          },
          end: {
            line: 168,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 168,
            column: 83
          },
          end: {
            line: 168,
            column: 89
          }
        }, {
          start: {
            line: 168,
            column: 92
          },
          end: {
            line: 168,
            column: 99
          }
        }],
        line: 168
      },
      "23": {
        loc: {
          start: {
            line: 168,
            column: 26
          },
          end: {
            line: 168,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 26
          },
          end: {
            line: 168,
            column: 63
          }
        }, {
          start: {
            line: 168,
            column: 67
          },
          end: {
            line: 168,
            column: 80
          }
        }],
        line: 168
      },
      "24": {
        loc: {
          start: {
            line: 169,
            column: 24
          },
          end: {
            line: 169,
            column: 216
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 169,
            column: 77
          },
          end: {
            line: 169,
            column: 83
          }
        }, {
          start: {
            line: 169,
            column: 86
          },
          end: {
            line: 169,
            column: 216
          }
        }],
        line: 169
      },
      "25": {
        loc: {
          start: {
            line: 169,
            column: 24
          },
          end: {
            line: 169,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 24
          },
          end: {
            line: 169,
            column: 46
          }
        }, {
          start: {
            line: 169,
            column: 50
          },
          end: {
            line: 169,
            column: 74
          }
        }],
        line: 169
      },
      "26": {
        loc: {
          start: {
            line: 169,
            column: 159
          },
          end: {
            line: 169,
            column: 213
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 159
          },
          end: {
            line: 169,
            column: 183
          }
        }, {
          start: {
            line: 169,
            column: 187
          },
          end: {
            line: 169,
            column: 213
          }
        }],
        line: 169
      },
      "27": {
        loc: {
          start: {
            line: 171,
            column: 65
          },
          end: {
            line: 171,
            column: 163
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 146
          },
          end: {
            line: 171,
            column: 152
          }
        }, {
          start: {
            line: 171,
            column: 155
          },
          end: {
            line: 171,
            column: 163
          }
        }],
        line: 171
      },
      "28": {
        loc: {
          start: {
            line: 171,
            column: 65
          },
          end: {
            line: 171,
            column: 143
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 65
          },
          end: {
            line: 171,
            column: 126
          }
        }, {
          start: {
            line: 171,
            column: 130
          },
          end: {
            line: 171,
            column: 143
          }
        }],
        line: 171
      },
      "29": {
        loc: {
          start: {
            line: 172,
            column: 59
          },
          end: {
            line: 172,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 59
          },
          end: {
            line: 172,
            column: 74
          }
        }, {
          start: {
            line: 172,
            column: 78
          },
          end: {
            line: 172,
            column: 100
          }
        }],
        line: 172
      },
      "30": {
        loc: {
          start: {
            line: 186,
            column: 68
          },
          end: {
            line: 186,
            column: 139
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 186,
            column: 121
          },
          end: {
            line: 186,
            column: 134
          }
        }, {
          start: {
            line: 186,
            column: 137
          },
          end: {
            line: 186,
            column: 139
          }
        }],
        line: 186
      },
      "31": {
        loc: {
          start: {
            line: 186,
            column: 68
          },
          end: {
            line: 186,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 68
          },
          end: {
            line: 186,
            column: 90
          }
        }, {
          start: {
            line: 186,
            column: 94
          },
          end: {
            line: 186,
            column: 118
          }
        }],
        line: 186
      },
      "32": {
        loc: {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 190,
            column: 20
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 190,
            column: 20
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "33": {
        loc: {
          start: {
            line: 202,
            column: 26
          },
          end: {
            line: 202,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 26
          },
          end: {
            line: 202,
            column: 32
          }
        }, {
          start: {
            line: 202,
            column: 36
          },
          end: {
            line: 202,
            column: 52
          }
        }, {
          start: {
            line: 202,
            column: 56
          },
          end: {
            line: 202,
            column: 58
          }
        }],
        line: 202
      },
      "34": {
        loc: {
          start: {
            line: 203,
            column: 33
          },
          end: {
            line: 203,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 203,
            column: 33
          },
          end: {
            line: 203,
            column: 46
          }
        }, {
          start: {
            line: 203,
            column: 50
          },
          end: {
            line: 203,
            column: 73
          }
        }, {
          start: {
            line: 203,
            column: 77
          },
          end: {
            line: 203,
            column: 79
          }
        }],
        line: 203
      },
      "35": {
        loc: {
          start: {
            line: 204,
            column: 25
          },
          end: {
            line: 204,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 25
          },
          end: {
            line: 204,
            column: 40
          }
        }, {
          start: {
            line: 204,
            column: 44
          },
          end: {
            line: 204,
            column: 46
          }
        }],
        line: 204
      },
      "36": {
        loc: {
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 213,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 213,
            column: 9
          }
        }, {
          start: {
            line: 211,
            column: 13
          },
          end: {
            line: 213,
            column: 9
          }
        }],
        line: 207
      },
      "37": {
        loc: {
          start: {
            line: 220,
            column: 27
          },
          end: {
            line: 220,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 220,
            column: 27
          },
          end: {
            line: 220,
            column: 57
          }
        }, {
          start: {
            line: 220,
            column: 61
          },
          end: {
            line: 220,
            column: 70
          }
        }],
        line: 220
      },
      "38": {
        loc: {
          start: {
            line: 221,
            column: 19
          },
          end: {
            line: 221,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 221,
            column: 19
          },
          end: {
            line: 221,
            column: 38
          }
        }, {
          start: {
            line: 221,
            column: 42
          },
          end: {
            line: 221,
            column: 51
          }
        }],
        line: 221
      },
      "39": {
        loc: {
          start: {
            line: 227,
            column: 21
          },
          end: {
            line: 229,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 228,
            column: 10
          },
          end: {
            line: 228,
            column: 76
          }
        }, {
          start: {
            line: 229,
            column: 10
          },
          end: {
            line: 229,
            column: 19
          }
        }],
        line: 227
      },
      "40": {
        loc: {
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "41": {
        loc: {
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 231,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 231,
            column: 31
          }
        }, {
          start: {
            line: 231,
            column: 35
          },
          end: {
            line: 231,
            column: 60
          }
        }],
        line: 231
      },
      "42": {
        loc: {
          start: {
            line: 243,
            column: 28
          },
          end: {
            line: 245,
            column: 15
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 244,
            column: 14
          },
          end: {
            line: 244,
            column: 60
          }
        }, {
          start: {
            line: 245,
            column: 14
          },
          end: {
            line: 245,
            column: 15
          }
        }],
        line: 243
      },
      "43": {
        loc: {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 257,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 257,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "44": {
        loc: {
          start: {
            line: 263,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 263,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 263
      },
      "45": {
        loc: {
          start: {
            line: 281,
            column: 4
          },
          end: {
            line: 284,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 4
          },
          end: {
            line: 284,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 281
      },
      "46": {
        loc: {
          start: {
            line: 288,
            column: 70
          },
          end: {
            line: 288,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 288,
            column: 93
          },
          end: {
            line: 288,
            column: 103
          }
        }, {
          start: {
            line: 288,
            column: 106
          },
          end: {
            line: 288,
            column: 120
          }
        }],
        line: 288
      },
      "47": {
        loc: {
          start: {
            line: 306,
            column: 31
          },
          end: {
            line: 306,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 306,
            column: 80
          },
          end: {
            line: 306,
            column: 86
          }
        }, {
          start: {
            line: 306,
            column: 89
          },
          end: {
            line: 306,
            column: 103
          }
        }],
        line: 306
      },
      "48": {
        loc: {
          start: {
            line: 306,
            column: 31
          },
          end: {
            line: 306,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 306,
            column: 31
          },
          end: {
            line: 306,
            column: 51
          }
        }, {
          start: {
            line: 306,
            column: 55
          },
          end: {
            line: 306,
            column: 77
          }
        }],
        line: 306
      },
      "49": {
        loc: {
          start: {
            line: 311,
            column: 25
          },
          end: {
            line: 317,
            column: 11
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 311,
            column: 25
          },
          end: {
            line: 311,
            column: 45
          }
        }, {
          start: {
            line: 312,
            column: 9
          },
          end: {
            line: 317,
            column: 10
          }
        }],
        line: 311
      },
      "50": {
        loc: {
          start: {
            line: 321,
            column: 59
          },
          end: {
            line: 321,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 321,
            column: 71
          },
          end: {
            line: 321,
            column: 74
          }
        }],
        line: 321
      },
      "51": {
        loc: {
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 364,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 361,
            column: 14
          },
          end: {
            line: 363,
            column: 14
          }
        }, {
          start: {
            line: 364,
            column: 14
          },
          end: {
            line: 364,
            column: 23
          }
        }],
        line: 360
      },
      "52": {
        loc: {
          start: {
            line: 366,
            column: 4
          },
          end: {
            line: 368,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 366,
            column: 4
          },
          end: {
            line: 368,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 366
      },
      "53": {
        loc: {
          start: {
            line: 372,
            column: 21
          },
          end: {
            line: 372,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 372,
            column: 21
          },
          end: {
            line: 372,
            column: 32
          }
        }, {
          start: {
            line: 372,
            column: 36
          },
          end: {
            line: 372,
            column: 40
          }
        }],
        line: 372
      },
      "54": {
        loc: {
          start: {
            line: 376,
            column: 108
          },
          end: {
            line: 376,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 376,
            column: 123
          },
          end: {
            line: 376,
            column: 136
          }
        }, {
          start: {
            line: 376,
            column: 139
          },
          end: {
            line: 376,
            column: 143
          }
        }],
        line: 376
      },
      "55": {
        loc: {
          start: {
            line: 396,
            column: 12
          },
          end: {
            line: 397,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 396,
            column: 12
          },
          end: {
            line: 397,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 396
      },
      "56": {
        loc: {
          start: {
            line: 398,
            column: 12
          },
          end: {
            line: 399,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 398,
            column: 12
          },
          end: {
            line: 399,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 398
      },
      "57": {
        loc: {
          start: {
            line: 403,
            column: 15
          },
          end: {
            line: 411,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 404,
            column: 14
          },
          end: {
            line: 410,
            column: 13
          }
        }, {
          start: {
            line: 411,
            column: 14
          },
          end: {
            line: 411,
            column: 23
          }
        }],
        line: 403
      },
      "58": {
        loc: {
          start: {
            line: 416,
            column: 67
          },
          end: {
            line: 416,
            column: 139
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 416,
            column: 116
          },
          end: {
            line: 416,
            column: 122
          }
        }, {
          start: {
            line: 416,
            column: 125
          },
          end: {
            line: 416,
            column: 139
          }
        }],
        line: 416
      },
      "59": {
        loc: {
          start: {
            line: 416,
            column: 67
          },
          end: {
            line: 416,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 416,
            column: 67
          },
          end: {
            line: 416,
            column: 87
          }
        }, {
          start: {
            line: 416,
            column: 91
          },
          end: {
            line: 416,
            column: 113
          }
        }],
        line: 416
      },
      "60": {
        loc: {
          start: {
            line: 418,
            column: 70
          },
          end: {
            line: 418,
            column: 142
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 418,
            column: 119
          },
          end: {
            line: 418,
            column: 125
          }
        }, {
          start: {
            line: 418,
            column: 128
          },
          end: {
            line: 418,
            column: 142
          }
        }],
        line: 418
      },
      "61": {
        loc: {
          start: {
            line: 418,
            column: 70
          },
          end: {
            line: 418,
            column: 116
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 418,
            column: 70
          },
          end: {
            line: 418,
            column: 90
          }
        }, {
          start: {
            line: 418,
            column: 94
          },
          end: {
            line: 418,
            column: 116
          }
        }],
        line: 418
      },
      "62": {
        loc: {
          start: {
            line: 432,
            column: 20
          },
          end: {
            line: 432,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 432,
            column: 21
          },
          end: {
            line: 432,
            column: 80
          }
        }, {
          start: {
            line: 432,
            column: 85
          },
          end: {
            line: 432,
            column: 90
          }
        }],
        line: 432
      },
      "63": {
        loc: {
          start: {
            line: 432,
            column: 21
          },
          end: {
            line: 432,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 432,
            column: 58
          },
          end: {
            line: 432,
            column: 64
          }
        }, {
          start: {
            line: 432,
            column: 67
          },
          end: {
            line: 432,
            column: 80
          }
        }],
        line: 432
      },
      "64": {
        loc: {
          start: {
            line: 432,
            column: 21
          },
          end: {
            line: 432,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 432,
            column: 21
          },
          end: {
            line: 432,
            column: 35
          }
        }, {
          start: {
            line: 432,
            column: 39
          },
          end: {
            line: 432,
            column: 55
          }
        }],
        line: 432
      },
      "65": {
        loc: {
          start: {
            line: 438,
            column: 4
          },
          end: {
            line: 440,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 438,
            column: 4
          },
          end: {
            line: 440,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 438
      },
      "66": {
        loc: {
          start: {
            line: 438,
            column: 8
          },
          end: {
            line: 438,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 438,
            column: 8
          },
          end: {
            line: 438,
            column: 24
          }
        }, {
          start: {
            line: 438,
            column: 28
          },
          end: {
            line: 438,
            column: 35
          }
        }],
        line: 438
      },
      "67": {
        loc: {
          start: {
            line: 442,
            column: 4
          },
          end: {
            line: 446,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 442,
            column: 4
          },
          end: {
            line: 446,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 442
      },
      "68": {
        loc: {
          start: {
            line: 442,
            column: 8
          },
          end: {
            line: 442,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 442,
            column: 8
          },
          end: {
            line: 442,
            column: 21
          }
        }, {
          start: {
            line: 442,
            column: 25
          },
          end: {
            line: 442,
            column: 50
          }
        }],
        line: 442
      },
      "69": {
        loc: {
          start: {
            line: 447,
            column: 55
          },
          end: {
            line: 447,
            column: 115
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 447,
            column: 55
          },
          end: {
            line: 447,
            column: 87
          }
        }, {
          start: {
            line: 447,
            column: 91
          },
          end: {
            line: 447,
            column: 115
          }
        }],
        line: 447
      },
      "70": {
        loc: {
          start: {
            line: 448,
            column: 4
          },
          end: {
            line: 449,
            column: 122
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 448,
            column: 4
          },
          end: {
            line: 449,
            column: 122
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 448
      },
      "71": {
        loc: {
          start: {
            line: 448,
            column: 8
          },
          end: {
            line: 448,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 448,
            column: 8
          },
          end: {
            line: 448,
            column: 24
          }
        }, {
          start: {
            line: 448,
            column: 28
          },
          end: {
            line: 448,
            column: 36
          }
        }],
        line: 448
      },
      "72": {
        loc: {
          start: {
            line: 450,
            column: 4
          },
          end: {
            line: 474,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 450,
            column: 4
          },
          end: {
            line: 474,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 450
      },
      "73": {
        loc: {
          start: {
            line: 452,
            column: 8
          },
          end: {
            line: 453,
            column: 62
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 452,
            column: 8
          },
          end: {
            line: 453,
            column: 62
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 452
      },
      "74": {
        loc: {
          start: {
            line: 455,
            column: 8
          },
          end: {
            line: 456,
            column: 93
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 455,
            column: 8
          },
          end: {
            line: 456,
            column: 93
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 455
      },
      "75": {
        loc: {
          start: {
            line: 461,
            column: 28
          },
          end: {
            line: 469,
            column: 16
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 462,
            column: 14
          },
          end: {
            line: 468,
            column: 26
          }
        }, {
          start: {
            line: 469,
            column: 14
          },
          end: {
            line: 469,
            column: 16
          }
        }],
        line: 461
      },
      "76": {
        loc: {
          start: {
            line: 471,
            column: 8
          },
          end: {
            line: 473,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 471,
            column: 8
          },
          end: {
            line: 473,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 471
      },
      "77": {
        loc: {
          start: {
            line: 471,
            column: 12
          },
          end: {
            line: 471,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 471,
            column: 12
          },
          end: {
            line: 471,
            column: 51
          }
        }, {
          start: {
            line: 471,
            column: 55
          },
          end: {
            line: 471,
            column: 68
          }
        }],
        line: 471
      },
      "78": {
        loc: {
          start: {
            line: 506,
            column: 25
          },
          end: {
            line: 506,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 506,
            column: 74
          },
          end: {
            line: 506,
            column: 76
          }
        }, {
          start: {
            line: 506,
            column: 79
          },
          end: {
            line: 506,
            column: 88
          }
        }],
        line: 506
      },
      "79": {
        loc: {
          start: {
            line: 506,
            column: 25
          },
          end: {
            line: 506,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 506,
            column: 25
          },
          end: {
            line: 506,
            column: 54
          }
        }, {
          start: {
            line: 506,
            column: 58
          },
          end: {
            line: 506,
            column: 71
          }
        }],
        line: 506
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0, 0],
      "34": [0, 0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0]
    },
    inputSourceMap: {
      file: "/home/user/climbox/packages/api/src/utils/uploads/upload-sheet-data.ts",
      mappings: "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",
      names: [],
      sources: ["/home/user/climbox/packages/api/src/utils/uploads/upload-sheet-data.ts"],
      sourcesContent: ["/* eslint-disable no-console */\r\n/* eslint-disable no-plusplus */\r\nimport {\r\n  chunk,\r\n  first,\r\n  get,\r\n  groupBy,\r\n  isNaN,\r\n  maxBy,\r\n  minBy,\r\n  uniqBy,\r\n} from 'lodash';\r\nimport md5Fle from 'md5-file';\r\nimport { Repository } from 'typeorm';\r\nimport {\r\n  BadRequestException,\r\n  InternalServerErrorException,\r\n  Logger,\r\n} from '@nestjs/common';\r\nimport xlsx from 'node-xlsx';\r\nimport Bluebird from 'bluebird';\r\nimport { MulterOptions } from '@nestjs/platform-express/multer/interfaces/multer-options.interface';\r\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity';\r\nimport { Site } from '../../sites/sites.entity';\r\nimport { SiteSurveyPoint } from '../../site-survey-points/site-survey-points.entity';\r\nimport { TimeSeries } from '../../time-series/time-series.entity';\r\nimport { Sources } from '../../sites/sources.entity';\r\nimport { SourceType } from '../../sites/schemas/source-type.enum';\r\nimport { DataUploads } from '../../data-uploads/data-uploads.entity';\r\nimport { getSite, surveyPointBelongsToSite } from '../site.utils';\r\nimport { GoogleCloudService } from '../../google-cloud/google-cloud.service';\r\nimport { getBarometricDiff } from '../sofar';\r\nimport { refreshMaterializedView } from '../time-series.utils';\r\nimport { Metric } from '../../time-series/metrics.enum';\r\nimport { AdminLevel, User } from '../../users/users.entity';\r\nimport { DataUploadsSites } from '../../data-uploads/data-uploads-sites.entity';\r\nimport { GoogleCloudDir } from '../google-cloud.utils';\r\n\r\ninterface Repositories {\r\n  siteRepository: Repository<Site>;\r\n  surveyPointRepository: Repository<SiteSurveyPoint>;\r\n  timeSeriesRepository: Repository<TimeSeries>;\r\n  sourcesRepository: Repository<Sources>;\r\n  dataUploadsRepository: Repository<DataUploads>;\r\n  dataUploadsSitesRepository: Repository<DataUploadsSites>;\r\n}\r\n\r\nconst logger = new Logger('ParseSondeData');\r\n\r\nconst ACCEPTED_FILE_TYPES = [\r\n  {\r\n    extension: 'xlsx',\r\n    mimetype:\r\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n  },\r\n  {\r\n    extension: 'csv',\r\n    mimetype: 'text/csv',\r\n  },\r\n  {\r\n    extension: 'xls',\r\n    mimetype: 'application/vnd.ms-excel',\r\n  },\r\n] as const;\r\nconst TIMEZONE_REGEX = /[+-]\\d{1,2}:?\\d{0,2}\\b/;\r\nconst SECONDS_IN_DAY = 24 * 60 * 60;\r\nconst MISSING_LEAP_YEAR_DAY = SECONDS_IN_DAY * 1000;\r\nconst MAGIC_NUMBER_OF_DAYS = 25569;\r\n\r\ninterface Data {\r\n  timestamp: string;\r\n  value: number;\r\n  metric: Metric;\r\n  source: Sources;\r\n}\r\n\r\nconst nonMetric = [\r\n  'date',\r\n  'time',\r\n  'timestamp',\r\n  'aqualink_site_id',\r\n  'aqualink_survey_point_id',\r\n  'depth',\r\n] as const;\r\n\r\ntype NonMetric = typeof nonMetric[number];\r\n\r\ntype Token = Metric | NonMetric;\r\n\r\ninterface Rule {\r\n  token: Token;\r\n  expression: RegExp;\r\n}\r\n\r\nconst rules: Rule[] = [\r\n  // Non Metrics\r\n  { token: 'date', expression: /^Date \\(MM\\/DD\\/YYYY\\)$/ },\r\n  { token: 'date', expression: /^Date$/ },\r\n  { token: 'time', expression: /^Time \\(HH:mm:ss\\)$/ },\r\n  { token: 'time', expression: /^Time$/ },\r\n  { token: 'timestamp', expression: /^Date Time$/ },\r\n  { token: 'timestamp', expression: /^Date_Time$/ },\r\n  { token: 'aqualink_site_id', expression: /^aqualink_site_id$/ },\r\n  {\r\n    token: 'aqualink_survey_point_id',\r\n    expression: /^aqualink_survey_point_id$/,\r\n  },\r\n  { token: 'depth', expression: /^depth$/ },\r\n  // Default Metrics\r\n  // should match 'Temp, \xB0C'\r\n  { token: Metric.AIR_TEMPERATURE, expression: /^Temp, .*C$/ },\r\n  // should match 'Temp \xB0C'\r\n  { token: Metric.BOTTOM_TEMPERATURE, expression: /^Temp .*C$/ },\r\n  { token: Metric.BOTTOM_TEMPERATURE, expression: /^Temp$/ },\r\n  { token: Metric.WIND_SPEED, expression: /^Wind Speed, m\\/s$/ },\r\n  // should match 'Wind Direction, \xF8'\r\n  { token: Metric.WIND_DIRECTION, expression: /^Wind Direction, .*$/ },\r\n  // Sonde Metrics\r\n  { token: Metric.CHOLOROPHYLL_RFU, expression: /^Chlorophyll RFU$/ },\r\n  {\r\n    token: Metric.CHOLOROPHYLL_CONCENTRATION,\r\n    expression: /^Chlorophyll ug\\/L$/,\r\n  },\r\n  // should match 'Cond \xB5S/cm'\r\n  { token: Metric.CONDUCTIVITY, expression: /^Cond .*S\\/cm$/ },\r\n  { token: Metric.WATER_DEPTH, expression: /^Depth m$/ },\r\n  { token: Metric.ODO_SATURATION, expression: /^ODO % sat$/ },\r\n  { token: Metric.ODO_SATURATION, expression: /^DO_sat$/ },\r\n  { token: Metric.ODO_CONCENTRATION, expression: /^ODO mg\\/L$/ },\r\n  { token: Metric.ODO_CONCENTRATION, expression: /^DO$/ },\r\n  { token: Metric.SALINITY, expression: /^Sal psu$/ },\r\n  { token: Metric.SALINITY, expression: /^Salinity$/ },\r\n  // should match 'SpCond \xB5S/cm'\r\n  { token: Metric.SPECIFIC_CONDUCTANCE, expression: /^SpCond .*S\\/cm$/ },\r\n  { token: Metric.TDS, expression: /^TDS mg\\/L$/ },\r\n  { token: Metric.TURBIDITY, expression: /^Turbidity FNU$/ },\r\n  { token: Metric.TURBIDITY, expression: /^Turbidity$/ },\r\n  { token: Metric.TOTAL_SUSPENDED_SOLIDS, expression: /^TSS mg\\/L$/ },\r\n  { token: Metric.SONDE_WIPER_POSITION, expression: /^Wiper Position volt$/ },\r\n  { token: Metric.PH, expression: /^pH$/ },\r\n  { token: Metric.PH_MV, expression: /^pH mV$/ },\r\n  { token: Metric.SONDE_BATTERY_VOLTAGE, expression: /^Battery V$/ },\r\n  { token: Metric.SONDE_CABLE_POWER_VOLTAGE, expression: /^Cable Pwr V$/ },\r\n  { token: Metric.PRESSURE, expression: /^Pressure, mbar$/ },\r\n  { token: Metric.PRECIPITATION, expression: /^Rain, mm$/ },\r\n  { token: Metric.RH, expression: /^RH, %$/ },\r\n  { token: Metric.WIND_GUST_SPEED, expression: /^Gust Speed, m\\/s$/ },\r\n  // HUI Metrics\r\n  { token: Metric.NITROGEN_TOTAL, expression: /^TotalN$/ },\r\n  { token: Metric.PHOSPHORUS_TOTAL, expression: /^TotalP$/ },\r\n  { token: Metric.PHOSPHORUS, expression: /^Phosphate$/ },\r\n  { token: Metric.SILICATE, expression: /^Silicate$/ },\r\n  { token: Metric.NNN, expression: /^NNN$/ },\r\n  { token: Metric.AMMONIUM, expression: /^NH4$/ },\r\n];\r\n\r\nexport type Mimetype = typeof ACCEPTED_FILE_TYPES[number]['mimetype'];\r\n\r\nexport const fileFilter: MulterOptions['fileFilter'] = (_, file, callback) => {\r\n  if (\r\n    !ACCEPTED_FILE_TYPES.map(({ mimetype }) => mimetype as string).includes(\r\n      file.mimetype,\r\n    )\r\n  ) {\r\n    callback(\r\n      new BadRequestException(\r\n        `Only ${ACCEPTED_FILE_TYPES.map(\r\n          ({ extension }) => `.${extension}`,\r\n        ).join(', ')} files are accepted`,\r\n      ),\r\n      false,\r\n    );\r\n  }\r\n  callback(null, true);\r\n};\r\n\r\nconst getJsDateFromExcel = (excelDate, timezone) => {\r\n  const delta = excelDate - MAGIC_NUMBER_OF_DAYS;\r\n  const parsed = delta * MISSING_LEAP_YEAR_DAY;\r\n\r\n  if (timezone) {\r\n    return new Date(`${parsed} GMT ${timezone}`);\r\n  }\r\n\r\n  return new Date(parsed);\r\n};\r\n\r\nconst getTimeStamp = (\r\n  index: number | number[],\r\n  item: any[],\r\n  mimetype?: Mimetype,\r\n  timezone?: string,\r\n) => {\r\n  const isArray = Array.isArray(index);\r\n  if (\r\n    isArray &&\r\n    typeof item[index[0]] === 'string' &&\r\n    typeof item[index[1]] === 'string'\r\n  )\r\n    return new Date(`${item[index[0]]} ${item[index[1]]}`);\r\n  if (isArray) {\r\n    const date = new Date(Date.UTC(1900, 0));\r\n    // We get the date as days from 1900. We have to subtract 1 to exactly match the date\r\n    date.setDate(item[index[0]] - 1 || 0);\r\n    // in some cases 1:30:00 will be interpreted as 25:30:00. In this representation of time seconds are\r\n    // a number from 0 to 1, so we want to keep only the first 24 hours to avoid such errors (therefore the % 1)\r\n    date.setSeconds(Math.round(SECONDS_IN_DAY * (item[index[1]] % 1 || 0)));\r\n    return date;\r\n  }\r\n  if (!isArray && mimetype === 'text/csv' && timezone)\r\n    return new Date(`${item[index]} GMT ${timezone}`);\r\n  if (!isArray && mimetype === 'text/csv' && !timezone)\r\n    return new Date(item[index]);\r\n  return getJsDateFromExcel(item[index], timezone);\r\n};\r\n\r\nconst findTimeStampIndex = (\r\n  headerToTokenMap: (Token | undefined)[],\r\n): number | number[] => {\r\n  const timestampIndex = headerToTokenMap.findIndex((x) => x === 'timestamp');\r\n\r\n  if (timestampIndex !== -1) return timestampIndex;\r\n\r\n  const timeIndex = headerToTokenMap.findIndex((x) => x === 'time');\r\n  const dateIndex = headerToTokenMap.findIndex((x) => x === 'date');\r\n\r\n  if (timeIndex === -1 || dateIndex === -1) {\r\n    throw new BadRequestException('Not current timestamp schema');\r\n  }\r\n  return [dateIndex, timeIndex];\r\n};\r\n\r\nexport const getFilePathData = async (filePath: string) => {\r\n  const workSheetsFromFile = xlsx.parse(filePath, { raw: true });\r\n  const workSheetData = workSheetsFromFile[0]?.data;\r\n\r\n  const headerIndex = workSheetData?.findIndex((row) =>\r\n    rules.some((rule) =>\r\n      row.some(\r\n        (cell) => typeof cell === 'string' && rule.expression.test(cell),\r\n      ),\r\n    ),\r\n  );\r\n\r\n  const headers = workSheetData[headerIndex] as string[];\r\n  const headerToTokenMap: (Token | undefined)[] = headers.map(\r\n    (x) => rules.find((rule) => rule.expression.test(x))?.token,\r\n  );\r\n  const importedMetrics = headerToTokenMap.filter(\r\n    (x): x is Metric => x !== undefined && !nonMetric.includes(x as NonMetric),\r\n  );\r\n  const ignoredHeaders = headers.filter(\r\n    (x, i) => headerToTokenMap[i] === undefined,\r\n  );\r\n  const signature = await md5Fle(filePath);\r\n\r\n  return {\r\n    workSheetData,\r\n    signature,\r\n    ignoredHeaders,\r\n    importedMetrics,\r\n    headers,\r\n    headerIndex,\r\n    headerToTokenMap,\r\n  };\r\n};\r\n\r\nexport const trimWorkSheetData = (\r\n  workSheetData: any[][],\r\n  headers: string[],\r\n  headerIndex: number,\r\n) =>\r\n  (workSheetData ?? [])\r\n    .slice(headerIndex + 1)\r\n    .map((item) => {\r\n      if (item.length === headers.length) return item as string[];\r\n      return undefined;\r\n    })\r\n    .filter((item): item is string[] => item !== undefined);\r\n\r\ninterface GroupBySitePointDepthProps {\r\n  trimmedWorkSheetData: string[][];\r\n  headerToTokenMap: (Token | undefined)[];\r\n  siteId: number | undefined;\r\n  surveyPointId: number | undefined;\r\n}\r\n\r\nconst groupBySitePointDepth = ({\r\n  trimmedWorkSheetData,\r\n  headerToTokenMap,\r\n  siteId,\r\n  surveyPointId,\r\n}: GroupBySitePointDepthProps): {\r\n  data: string[][];\r\n  siteId: number;\r\n  surveyPointId?: number;\r\n  depth?: number;\r\n}[] => {\r\n  logger.log('Grouping data');\r\n  const siteIdIndex = headerToTokenMap.findIndex(\r\n    (x) => x === 'aqualink_site_id',\r\n  );\r\n  const surveyPointIdIndex = headerToTokenMap.findIndex(\r\n    (x) => x === 'aqualink_survey_point_id',\r\n  );\r\n  const depthIndex = headerToTokenMap.findIndex((x) => x === 'depth');\r\n\r\n  const groupedByMap = new Map<string, string[][]>();\r\n\r\n  trimmedWorkSheetData.forEach((val) => {\r\n    const rowSiteId = siteId || val[siteIdIndex] || '';\r\n    const rowSurveyPointId = surveyPointId || val[surveyPointIdIndex] || '';\r\n    const rowDepth = val[depthIndex] || '';\r\n\r\n    const key = `${rowSiteId}_${rowSurveyPointId}_${rowDepth}`;\r\n    const item = groupedByMap.get(key);\r\n    if (item !== undefined) {\r\n      // eslint-disable-next-line fp/no-mutating-methods -- mutating for performance, instead of spreading\r\n      item.push(val);\r\n    } else {\r\n      groupedByMap.set(key, [val]);\r\n    }\r\n  });\r\n\r\n  return Array.from(groupedByMap).map(([key, data]) => {\r\n    const [rowSiteId, rowSurveyPointId, depth] = key.split('_');\r\n    return {\r\n      data,\r\n      siteId: parseInt(rowSiteId, 10),\r\n      surveyPointId: parseInt(rowSurveyPointId, 10) || undefined,\r\n      depth: parseInt(depth, 10) || undefined,\r\n    };\r\n  });\r\n};\r\n\r\nexport const convertData = (\r\n  workSheetData: string[][],\r\n  headers: string[],\r\n  fileName: string,\r\n  sourceEntity: Sources,\r\n  headerToTokenMap: (Token | undefined)[],\r\n  siteTimezone: string | null,\r\n  mimetype?: Mimetype,\r\n) => {\r\n  const timestampIndex = findTimeStampIndex(headerToTokenMap);\r\n  const timezone =\r\n    typeof timestampIndex === 'number'\r\n      ? first(headers[timestampIndex].match(TIMEZONE_REGEX))\r\n      : undefined;\r\n  const metricHeadersMap = headerToTokenMap.reduce((acc, token, i) => {\r\n    if (token === undefined || nonMetric.includes(token as NonMetric)) {\r\n      return acc;\r\n    }\r\n    return { ...acc, [i]: token };\r\n  }, {});\r\n  const results = Array(\r\n    workSheetData.length * Object.keys(metricHeadersMap).length,\r\n  );\r\n  let resultsIndex = 0;\r\n\r\n  console.time(`Get data from sheet ${fileName}`);\r\n\r\n  workSheetData.forEach((row) => {\r\n    const timestampDate = getTimeStamp(timestampIndex, row, mimetype, timezone);\r\n\r\n    // This need to be done for each row to take into account daylight savings\r\n    // and other things that may affect timezone offset in that exact date\r\n    const offsetInMil =\r\n      siteTimezone !== null\r\n        ? getTimezoneOffset(siteTimezone, timestampDate)\r\n        : 0;\r\n\r\n    const timestamp = new Date(\r\n      timestampDate.valueOf() - offsetInMil,\r\n    ).toISOString();\r\n\r\n    row.forEach((cell, i) => {\r\n      const metric = metricHeadersMap[i];\r\n      if (metric) {\r\n        // eslint-disable-next-line fp/no-mutation -- mutating for performance\r\n        results[resultsIndex++] = {\r\n          timestamp,\r\n          value: parseFloat(cell),\r\n          metric: metric as Metric,\r\n          source: sourceEntity,\r\n        };\r\n      }\r\n    });\r\n  }, []);\r\n  console.timeEnd(`Get data from sheet ${fileName}`);\r\n\r\n  console.time(`Remove duplicates and empty values ${fileName}`);\r\n  const data = uniqBy(\r\n    results.filter((valueObject) => {\r\n      if (!isNaN(valueObject.value)) {\r\n        return true;\r\n      }\r\n      logger.log('Excluding incompatible value:');\r\n      logger.log(valueObject);\r\n      return false;\r\n    }),\r\n    ({ timestamp, metric, source }) => `${timestamp}, ${metric}, ${source.id}`,\r\n  );\r\n  console.timeEnd(`Remove duplicates and empty values ${fileName}`);\r\n\r\n  return data;\r\n};\r\n\r\nexport const uploadFileToGCloud = async (\r\n  dataUploadsRepository: Repository<DataUploads>,\r\n  signature: string,\r\n  sources: SourceType[],\r\n  fileName: string,\r\n  filePath: string,\r\n  minDate: string | undefined,\r\n  maxDate: string | undefined,\r\n  importedHeaders: Metric[],\r\n) => {\r\n  logger.warn(`Uploading file to google cloud: ${fileName}`);\r\n  const uploadExists = await dataUploadsRepository.findOne({\r\n    where: {\r\n      signature,\r\n    },\r\n  });\r\n\r\n  if (uploadExists) {\r\n    Logger.warn(\r\n      `${fileName}: A file upload named '${uploadExists.file}' with the same data already exists`,\r\n    );\r\n    return uploadExists;\r\n  }\r\n  // Initialize google cloud service, to be used for media upload\r\n  const googleCloudService = new GoogleCloudService();\r\n\r\n  // Note this may fail. It would still return a location, but the file may not have been uploaded\r\n  const fileLocation = googleCloudService.uploadFileAsync(\r\n    filePath,\r\n    sources.length === 1 ? sources[0] : 'multi_source',\r\n    GoogleCloudDir.DATA_UPLOADS,\r\n    'data_upload',\r\n  );\r\n\r\n  const dataUploadsFile = await dataUploadsRepository.save({\r\n    file: fileName,\r\n    signature,\r\n    sensorTypes: sources,\r\n    minDate,\r\n    maxDate,\r\n    metrics: importedHeaders,\r\n    fileLocation,\r\n  });\r\n\r\n  return dataUploadsFile;\r\n};\r\n\r\ninterface FindOrCreateSourceEntityProps {\r\n  site: Site;\r\n  sourceType: SourceType;\r\n  surveyPoint: SiteSurveyPoint | null;\r\n  depth?: number;\r\n  sourcesRepository: Repository<Sources>;\r\n}\r\n\r\nexport const findOrCreateSourceEntity = async ({\r\n  site,\r\n  sourceType,\r\n  surveyPoint,\r\n  depth,\r\n  sourcesRepository,\r\n}: FindOrCreateSourceEntityProps) => {\r\n  const existingSourceEntity = await sourcesRepository.findOne({\r\n    relations: ['surveyPoint', 'site'],\r\n    where: {\r\n      site: { id: site.id },\r\n      surveyPoint: { id: surveyPoint?.id },\r\n      type: sourceType,\r\n      depth,\r\n    },\r\n  });\r\n  const sourceEntity =\r\n    existingSourceEntity ||\r\n    (await sourcesRepository.save({\r\n      type: sourceType,\r\n      site,\r\n      surveyPoint,\r\n      depth,\r\n    }));\r\n  return sourceEntity;\r\n};\r\n\r\nexport const saveBatchToTimeSeries = (\r\n  data: QueryDeepPartialEntity<TimeSeries>[],\r\n  timeSeriesRepository: Repository<TimeSeries>,\r\n  batchSize = 100,\r\n) => {\r\n  logger.log(`Saving time series data in batches of ${batchSize}`);\r\n  const inserts = chunk(data, batchSize).map(async (batch: any[]) => {\r\n    try {\r\n      await timeSeriesRepository\r\n        .createQueryBuilder('time_series')\r\n        .insert()\r\n        .values(batch)\r\n        // If there's a conflict, replace data with the new value.\r\n        // onConflict is deprecated, but updating it is tricky.\r\n        // See https://github.com/typeorm/typeorm/issues/8731?fbclid=IwAR2Obg9eObtGNRXaFrtKvkvvVSWfvjtHpFu-VEM47yg89SZcPpxEcZOmcLw\r\n        .onConflict(\r\n          'ON CONSTRAINT \"no_duplicate_data\" DO UPDATE SET \"value\" = excluded.value',\r\n        )\r\n        .execute();\r\n    } catch (err) {\r\n      console.warn('The following batch failed to upload:\\n', batch);\r\n      console.error(err);\r\n    }\r\n    return true;\r\n  });\r\n\r\n  // Return insert promises and print progress updates\r\n  const actionsLength = inserts.length;\r\n  return Bluebird.Promise.each(inserts, (props, idx) => {\r\n    logger.log(`Saved ${idx + 1} out of ${actionsLength} batches`);\r\n  });\r\n};\r\n\r\ninterface CreateEntitiesAndConvertProps {\r\n  workSheetData: string[][];\r\n  siteId: number;\r\n  surveyPointId?: number;\r\n  headers: string[];\r\n  fileName: string;\r\n  headerToTokenMap: (Token | undefined)[];\r\n  sourceType: SourceType;\r\n  repositories: Repositories;\r\n  depth?: number;\r\n  mimetype?: Mimetype;\r\n  siteTimezone?: boolean;\r\n}\r\n\r\nfunction getTimezoneOffset(timezone: string, date: Date) {\r\n  try {\r\n    const timezoneDate = new Date(\r\n      date.toLocaleString('en-US', { timeZone: timezone }),\r\n    );\r\n    return timezoneDate.valueOf() - date.valueOf();\r\n  } catch {\r\n    return 0;\r\n  }\r\n}\r\n\r\nconst createEntitiesAndConvert = async ({\r\n  workSheetData,\r\n  siteId,\r\n  surveyPointId,\r\n  headers,\r\n  fileName,\r\n  headerToTokenMap,\r\n  sourceType,\r\n  repositories,\r\n  depth,\r\n  mimetype,\r\n  siteTimezone,\r\n}: CreateEntitiesAndConvertProps) => {\r\n  const [site, surveyPoint] = await Promise.all([\r\n    getSite(siteId, repositories.siteRepository),\r\n    surveyPointId\r\n      ? repositories.surveyPointRepository.findOneBy({\r\n          id: surveyPointId,\r\n        })\r\n      : undefined,\r\n  ]);\r\n\r\n  if (surveyPoint) {\r\n    await surveyPointBelongsToSite(\r\n      site.id,\r\n      surveyPoint.id,\r\n      repositories.surveyPointRepository,\r\n    );\r\n  }\r\n\r\n  const sourceEntity = await findOrCreateSourceEntity({\r\n    site,\r\n    sourceType,\r\n    surveyPoint: surveyPoint || null,\r\n    depth,\r\n    sourcesRepository: repositories.sourcesRepository,\r\n  });\r\n\r\n  const data = convertData(\r\n    workSheetData,\r\n    headers,\r\n    fileName,\r\n    sourceEntity,\r\n    headerToTokenMap,\r\n    siteTimezone ? site.timezone : null,\r\n    mimetype,\r\n  );\r\n\r\n  return { data, sourceEntity, site, surveyPoint };\r\n};\r\n\r\ninterface UploadPerSiteAndPointProps {\r\n  data: Data[];\r\n  site: Site;\r\n  surveyPoint?: SiteSurveyPoint;\r\n  repositories: Repositories;\r\n  dataUploadsFileEntity: DataUploads;\r\n}\r\n\r\nconst uploadPerSiteAndPoint = async ({\r\n  data,\r\n  site,\r\n  surveyPoint,\r\n  repositories,\r\n  dataUploadsFileEntity,\r\n}: UploadPerSiteAndPointProps) => {\r\n  const dataAsTimeSeriesNoDiffs = data.map((x) => {\r\n    return {\r\n      timestamp: x.timestamp,\r\n      value: x.value,\r\n      metric: x.metric,\r\n      source: x.source,\r\n      dataUpload: dataUploadsFileEntity,\r\n    };\r\n  });\r\n\r\n  const barometricPressures = dataAsTimeSeriesNoDiffs.filter(\r\n    (x) => x.metric === Metric.BAROMETRIC_PRESSURE_TOP,\r\n  );\r\n  const pressuresBySource = groupBy(barometricPressures, 'source.site.id');\r\n\r\n  const barometricDiffs = Object.entries(pressuresBySource).map(\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    ([key, pressures]) => {\r\n      // eslint-disable-next-line fp/no-mutating-methods\r\n      const sortedPressures = pressures.sort((a, b) => {\r\n        if (a.timestamp > b.timestamp) return 1;\r\n        if (a.timestamp < b.timestamp) return -1;\r\n        return 0;\r\n      });\r\n      const valueDiff = getBarometricDiff(sortedPressures);\r\n      return valueDiff !== null\r\n        ? {\r\n            timestamp: valueDiff.timestamp,\r\n            value: valueDiff.value,\r\n            metric: Metric.BAROMETRIC_PRESSURE_TOP_DIFF,\r\n            source: sortedPressures[1].source,\r\n            dataUpload: dataUploadsFileEntity,\r\n          }\r\n        : undefined;\r\n    },\r\n  );\r\n\r\n  const filteredDiffs = barometricDiffs.filter(\r\n    (\r\n      x,\r\n    ): x is {\r\n      timestamp: string;\r\n      value: number;\r\n      metric: Metric;\r\n      source: Sources;\r\n      dataUpload: DataUploads;\r\n    } => x !== undefined,\r\n  );\r\n\r\n  const dataAsTimeSeries = [...dataAsTimeSeriesNoDiffs, ...filteredDiffs];\r\n\r\n  // Data is too big to added with one bulk insert so we batch the upload.\r\n  console.time(\r\n    `Loading into DB site: ${site.id}, surveyPoint: ${surveyPoint?.id}`,\r\n  );\r\n  await saveBatchToTimeSeries(\r\n    dataAsTimeSeries as QueryDeepPartialEntity<TimeSeries>[],\r\n    repositories.timeSeriesRepository,\r\n  );\r\n  console.timeEnd(\r\n    `Loading into DB site: ${site.id}, surveyPoint: ${surveyPoint?.id}`,\r\n  );\r\n\r\n  const minDate = get(\r\n    minBy(dataAsTimeSeries, (item) =>\r\n      new Date(get(item, 'timestamp')).getTime(),\r\n    ),\r\n    'timestamp',\r\n  );\r\n  const maxDate = get(\r\n    maxBy(dataAsTimeSeries, (item) =>\r\n      new Date(get(item, 'timestamp')).getTime(),\r\n    ),\r\n    'timestamp',\r\n  );\r\n\r\n  try {\r\n    // This will fail on file re upload\r\n    await repositories.dataUploadsSitesRepository.save({\r\n      dataUpload: dataUploadsFileEntity,\r\n      site,\r\n      surveyPoint,\r\n      minDate,\r\n      maxDate,\r\n    });\r\n  } catch (error: any) {\r\n    logger.warn(error?.message || error);\r\n  }\r\n\r\n  logger.log('loading complete');\r\n};\r\n\r\ninterface UploadTimeSeriesDataProps {\r\n  user?: Express.User & User;\r\n  filePath: string;\r\n  fileName: string;\r\n  siteId: number | undefined;\r\n  surveyPointId: number | undefined;\r\n  sourceType: SourceType;\r\n  repositories: Repositories;\r\n  multiSiteUpload: boolean;\r\n  failOnWarning?: boolean;\r\n  mimetype?: Mimetype;\r\n  siteTimezone?: boolean;\r\n}\r\n\r\nexport const uploadTimeSeriesData = async ({\r\n  user,\r\n  filePath,\r\n  fileName,\r\n  siteId,\r\n  surveyPointId,\r\n  sourceType,\r\n  repositories,\r\n  multiSiteUpload,\r\n  failOnWarning,\r\n  mimetype,\r\n  siteTimezone,\r\n}: UploadTimeSeriesDataProps) => {\r\n  console.time(`Upload data file ${fileName}`);\r\n\r\n  if (!multiSiteUpload && !siteId) {\r\n    throw new BadRequestException('SiteId is undefined');\r\n  }\r\n\r\n  const {\r\n    workSheetData,\r\n    signature,\r\n    ignoredHeaders,\r\n    importedMetrics,\r\n    headers,\r\n    headerIndex,\r\n    headerToTokenMap,\r\n  } = await getFilePathData(filePath);\r\n\r\n  if (failOnWarning && ignoredHeaders.length > 0) {\r\n    throw new BadRequestException(\r\n      `${fileName}: The columns ${ignoredHeaders\r\n        .map((header) => header.replace(/\\r?\\n|\\r/g, ''))\r\n        .join(', ')} are not configured for import yet and cannot be uploaded.`,\r\n    );\r\n  }\r\n\r\n  const siteInfo =\r\n    headerToTokenMap.findIndex(\r\n      (x) => x === 'aqualink_survey_point_id' || x === 'aqualink_site_id',\r\n    ) > -1;\r\n  if (!multiSiteUpload && siteInfo)\r\n    throw new BadRequestException(\r\n      'File can not include aqualink site information, in this type of request',\r\n    );\r\n\r\n  if (multiSiteUpload) {\r\n    // user should never be undefined here since this is a protected endpoint\r\n    if (!user) throw new InternalServerErrorException();\r\n\r\n    const siteIdIndex = headerToTokenMap.findIndex(\r\n      (x) => x === 'aqualink_site_id',\r\n    );\r\n\r\n    if (siteIdIndex < 0)\r\n      throw new BadRequestException(`no 'aqualink_site_id' column specified`);\r\n\r\n    const ids = workSheetData\r\n      .map((x) => x[siteIdIndex])\r\n      .filter((x) => !Number.isNaN(Number(x)));\r\n    const uniqueIds = [...new Map(ids.map((x) => [x, x])).keys()];\r\n\r\n    const isSiteAdmin =\r\n      uniqueIds.length > 0\r\n        ? await repositories.siteRepository\r\n            .createQueryBuilder('site')\r\n            .innerJoin('site.admins', 'admins', 'admins.id = :userId', {\r\n              userId: user.id,\r\n            })\r\n            .andWhere('site.id IN (:...siteIds)', { siteIds: uniqueIds })\r\n            .getMany()\r\n        : [];\r\n\r\n    const isSuperAdmin = user.adminLevel === AdminLevel.SuperAdmin;\r\n\r\n    if (isSiteAdmin.length !== uniqueIds.length && !isSuperAdmin) {\r\n      throw new BadRequestException(`Invalid values for 'aqualink_site_id'`);\r\n    }\r\n  }\r\n\r\n  const trimmed = trimWorkSheetData(workSheetData, headers, headerIndex);\r\n\r\n  const groupedData = groupBySitePointDepth({\r\n    trimmedWorkSheetData: trimmed,\r\n    headerToTokenMap,\r\n    siteId,\r\n    surveyPointId,\r\n  });\r\n\r\n  const converted = await Promise.all(\r\n    groupedData.map((x) => {\r\n      return createEntitiesAndConvert({\r\n        workSheetData: x.data,\r\n        siteId: x.siteId,\r\n        surveyPointId: x.surveyPointId,\r\n        depth: x.depth,\r\n        headers,\r\n        fileName,\r\n        headerToTokenMap,\r\n        sourceType,\r\n        repositories,\r\n        mimetype,\r\n        siteTimezone,\r\n      });\r\n    }),\r\n  );\r\n\r\n  const allDataCombined = converted.map((x) => x.data).flat();\r\n\r\n  const minDate = get(\r\n    minBy(allDataCombined, (item) =>\r\n      new Date(get(item, 'timestamp')).getTime(),\r\n    ),\r\n    'timestamp',\r\n  );\r\n  const maxDate = get(\r\n    maxBy(allDataCombined, (item) =>\r\n      new Date(get(item, 'timestamp')).getTime(),\r\n    ),\r\n    'timestamp',\r\n  );\r\n\r\n  const dataUploadsFile = await uploadFileToGCloud(\r\n    repositories.dataUploadsRepository,\r\n    signature,\r\n    [sourceType],\r\n    fileName,\r\n    filePath,\r\n    minDate,\r\n    maxDate,\r\n    importedMetrics,\r\n  );\r\n\r\n  await Promise.all(\r\n    converted.map((x) => {\r\n      return uploadPerSiteAndPoint({\r\n        data: x.data,\r\n        site: x.site,\r\n        surveyPoint: x.surveyPoint ?? undefined,\r\n        repositories,\r\n        dataUploadsFileEntity: dataUploadsFile,\r\n      });\r\n    }),\r\n  );\r\n\r\n  refreshMaterializedView(repositories.dataUploadsRepository);\r\n\r\n  console.timeEnd(`Upload data file ${fileName}`);\r\n  return ignoredHeaders;\r\n};\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2f8820ab964a567dd156a0ff70669394cfa3e0e2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1r91lnglt1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1r91lnglt1();
var __awaiter =
/* istanbul ignore next */
(cov_1r91lnglt1().s[0]++,
/* istanbul ignore next */
(cov_1r91lnglt1().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1r91lnglt1().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_1r91lnglt1().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_1r91lnglt1().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[1]++;
    cov_1r91lnglt1().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_1r91lnglt1().f[2]++;
      cov_1r91lnglt1().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_1r91lnglt1().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_1r91lnglt1().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_1r91lnglt1().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_1r91lnglt1().f[4]++;
      cov_1r91lnglt1().s[4]++;
      try {
        /* istanbul ignore next */
        cov_1r91lnglt1().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1r91lnglt1().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_1r91lnglt1().f[5]++;
      cov_1r91lnglt1().s[7]++;
      try {
        /* istanbul ignore next */
        cov_1r91lnglt1().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1r91lnglt1().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_1r91lnglt1().f[6]++;
      cov_1r91lnglt1().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_1r91lnglt1().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_1r91lnglt1().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_1r91lnglt1().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[4][1]++, []))).next());
  });
}));
var __importDefault =
/* istanbul ignore next */
(cov_1r91lnglt1().s[12]++,
/* istanbul ignore next */
(cov_1r91lnglt1().b[5][0]++, this) &&
/* istanbul ignore next */
(cov_1r91lnglt1().b[5][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1r91lnglt1().b[5][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1r91lnglt1().f[7]++;
  cov_1r91lnglt1().s[13]++;
  return (
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[7][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[7][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[6][0]++, mod) :
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[6][1]++, {
      "default": mod
    })
  );
}));
/* istanbul ignore next */
cov_1r91lnglt1().s[14]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1r91lnglt1().s[15]++;
exports.uploadTimeSeriesData = exports.saveBatchToTimeSeries = exports.findOrCreateSourceEntity = exports.uploadFileToGCloud = exports.convertData = exports.trimWorkSheetData = exports.getFilePathData = exports.fileFilter = void 0;
/* eslint-disable no-console */
/* eslint-disable no-plusplus */
const lodash_1 =
/* istanbul ignore next */
(cov_1r91lnglt1().s[16]++, require("lodash"));
const md5_file_1 =
/* istanbul ignore next */
(cov_1r91lnglt1().s[17]++, __importDefault(require("md5-file")));
const common_1 =
/* istanbul ignore next */
(cov_1r91lnglt1().s[18]++, require("@nestjs/common"));
const node_xlsx_1 =
/* istanbul ignore next */
(cov_1r91lnglt1().s[19]++, __importDefault(require("node-xlsx")));
const bluebird_1 =
/* istanbul ignore next */
(cov_1r91lnglt1().s[20]++, __importDefault(require("bluebird")));
const site_utils_1 =
/* istanbul ignore next */
(cov_1r91lnglt1().s[21]++, require("../site.utils"));
const google_cloud_service_1 =
/* istanbul ignore next */
(cov_1r91lnglt1().s[22]++, require("../../google-cloud/google-cloud.service"));
const sofar_1 =
/* istanbul ignore next */
(cov_1r91lnglt1().s[23]++, require("../sofar"));
const time_series_utils_1 =
/* istanbul ignore next */
(cov_1r91lnglt1().s[24]++, require("../time-series.utils"));
const metrics_enum_1 =
/* istanbul ignore next */
(cov_1r91lnglt1().s[25]++, require("../../time-series/metrics.enum"));
const users_entity_1 =
/* istanbul ignore next */
(cov_1r91lnglt1().s[26]++, require("../../users/users.entity"));
const google_cloud_utils_1 =
/* istanbul ignore next */
(cov_1r91lnglt1().s[27]++, require("../google-cloud.utils"));
const logger =
/* istanbul ignore next */
(cov_1r91lnglt1().s[28]++, new common_1.Logger('ParseSondeData'));
const ACCEPTED_FILE_TYPES =
/* istanbul ignore next */
(cov_1r91lnglt1().s[29]++, [{
  extension: 'xlsx',
  mimetype: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
}, {
  extension: 'csv',
  mimetype: 'text/csv'
}, {
  extension: 'xls',
  mimetype: 'application/vnd.ms-excel'
}]);
const TIMEZONE_REGEX =
/* istanbul ignore next */
(cov_1r91lnglt1().s[30]++, /[+-]\d{1,2}:?\d{0,2}\b/);
const SECONDS_IN_DAY =
/* istanbul ignore next */
(cov_1r91lnglt1().s[31]++, 24 * 60 * 60);
const MISSING_LEAP_YEAR_DAY =
/* istanbul ignore next */
(cov_1r91lnglt1().s[32]++, SECONDS_IN_DAY * 1000);
const MAGIC_NUMBER_OF_DAYS =
/* istanbul ignore next */
(cov_1r91lnglt1().s[33]++, 25569);
const nonMetric =
/* istanbul ignore next */
(cov_1r91lnglt1().s[34]++, ['date', 'time', 'timestamp', 'aqualink_site_id', 'aqualink_survey_point_id', 'depth']);
const rules =
/* istanbul ignore next */
(cov_1r91lnglt1().s[35]++, [
// Non Metrics
{
  token: 'date',
  expression: /^Date \(MM\/DD\/YYYY\)$/
}, {
  token: 'date',
  expression: /^Date$/
}, {
  token: 'time',
  expression: /^Time \(HH:mm:ss\)$/
}, {
  token: 'time',
  expression: /^Time$/
}, {
  token: 'timestamp',
  expression: /^Date Time$/
}, {
  token: 'timestamp',
  expression: /^Date_Time$/
}, {
  token: 'aqualink_site_id',
  expression: /^aqualink_site_id$/
}, {
  token: 'aqualink_survey_point_id',
  expression: /^aqualink_survey_point_id$/
}, {
  token: 'depth',
  expression: /^depth$/
},
// Default Metrics
// should match 'Temp, °C'
{
  token: metrics_enum_1.Metric.AIR_TEMPERATURE,
  expression: /^Temp, .*C$/
},
// should match 'Temp °C'
{
  token: metrics_enum_1.Metric.BOTTOM_TEMPERATURE,
  expression: /^Temp .*C$/
}, {
  token: metrics_enum_1.Metric.BOTTOM_TEMPERATURE,
  expression: /^Temp$/
}, {
  token: metrics_enum_1.Metric.WIND_SPEED,
  expression: /^Wind Speed, m\/s$/
},
// should match 'Wind Direction, ø'
{
  token: metrics_enum_1.Metric.WIND_DIRECTION,
  expression: /^Wind Direction, .*$/
},
// Sonde Metrics
{
  token: metrics_enum_1.Metric.CHOLOROPHYLL_RFU,
  expression: /^Chlorophyll RFU$/
}, {
  token: metrics_enum_1.Metric.CHOLOROPHYLL_CONCENTRATION,
  expression: /^Chlorophyll ug\/L$/
},
// should match 'Cond µS/cm'
{
  token: metrics_enum_1.Metric.CONDUCTIVITY,
  expression: /^Cond .*S\/cm$/
}, {
  token: metrics_enum_1.Metric.WATER_DEPTH,
  expression: /^Depth m$/
}, {
  token: metrics_enum_1.Metric.ODO_SATURATION,
  expression: /^ODO % sat$/
}, {
  token: metrics_enum_1.Metric.ODO_SATURATION,
  expression: /^DO_sat$/
}, {
  token: metrics_enum_1.Metric.ODO_CONCENTRATION,
  expression: /^ODO mg\/L$/
}, {
  token: metrics_enum_1.Metric.ODO_CONCENTRATION,
  expression: /^DO$/
}, {
  token: metrics_enum_1.Metric.SALINITY,
  expression: /^Sal psu$/
}, {
  token: metrics_enum_1.Metric.SALINITY,
  expression: /^Salinity$/
},
// should match 'SpCond µS/cm'
{
  token: metrics_enum_1.Metric.SPECIFIC_CONDUCTANCE,
  expression: /^SpCond .*S\/cm$/
}, {
  token: metrics_enum_1.Metric.TDS,
  expression: /^TDS mg\/L$/
}, {
  token: metrics_enum_1.Metric.TURBIDITY,
  expression: /^Turbidity FNU$/
}, {
  token: metrics_enum_1.Metric.TURBIDITY,
  expression: /^Turbidity$/
}, {
  token: metrics_enum_1.Metric.TOTAL_SUSPENDED_SOLIDS,
  expression: /^TSS mg\/L$/
}, {
  token: metrics_enum_1.Metric.SONDE_WIPER_POSITION,
  expression: /^Wiper Position volt$/
}, {
  token: metrics_enum_1.Metric.PH,
  expression: /^pH$/
}, {
  token: metrics_enum_1.Metric.PH_MV,
  expression: /^pH mV$/
}, {
  token: metrics_enum_1.Metric.SONDE_BATTERY_VOLTAGE,
  expression: /^Battery V$/
}, {
  token: metrics_enum_1.Metric.SONDE_CABLE_POWER_VOLTAGE,
  expression: /^Cable Pwr V$/
}, {
  token: metrics_enum_1.Metric.PRESSURE,
  expression: /^Pressure, mbar$/
}, {
  token: metrics_enum_1.Metric.PRECIPITATION,
  expression: /^Rain, mm$/
}, {
  token: metrics_enum_1.Metric.RH,
  expression: /^RH, %$/
}, {
  token: metrics_enum_1.Metric.WIND_GUST_SPEED,
  expression: /^Gust Speed, m\/s$/
},
// HUI Metrics
{
  token: metrics_enum_1.Metric.NITROGEN_TOTAL,
  expression: /^TotalN$/
}, {
  token: metrics_enum_1.Metric.PHOSPHORUS_TOTAL,
  expression: /^TotalP$/
}, {
  token: metrics_enum_1.Metric.PHOSPHORUS,
  expression: /^Phosphate$/
}, {
  token: metrics_enum_1.Metric.SILICATE,
  expression: /^Silicate$/
}, {
  token: metrics_enum_1.Metric.NNN,
  expression: /^NNN$/
}, {
  token: metrics_enum_1.Metric.AMMONIUM,
  expression: /^NH4$/
}]);
/* istanbul ignore next */
cov_1r91lnglt1().s[36]++;
const fileFilter = (_, file, callback) => {
  /* istanbul ignore next */
  cov_1r91lnglt1().f[8]++;
  cov_1r91lnglt1().s[37]++;
  if (!ACCEPTED_FILE_TYPES.map(({
    mimetype
  }) => {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[9]++;
    cov_1r91lnglt1().s[38]++;
    return mimetype;
  }).includes(file.mimetype)) {
    /* istanbul ignore next */
    cov_1r91lnglt1().b[8][0]++;
    cov_1r91lnglt1().s[39]++;
    callback(new common_1.BadRequestException(`Only ${ACCEPTED_FILE_TYPES.map(({
      extension
    }) => {
      /* istanbul ignore next */
      cov_1r91lnglt1().f[10]++;
      cov_1r91lnglt1().s[40]++;
      return `.${extension}`;
    }).join(', ')} files are accepted`), false);
  } else
  /* istanbul ignore next */
  {
    cov_1r91lnglt1().b[8][1]++;
  }
  cov_1r91lnglt1().s[41]++;
  callback(null, true);
};
/* istanbul ignore next */
cov_1r91lnglt1().s[42]++;
exports.fileFilter = fileFilter;
/* istanbul ignore next */
cov_1r91lnglt1().s[43]++;
const getJsDateFromExcel = (excelDate, timezone) => {
  /* istanbul ignore next */
  cov_1r91lnglt1().f[11]++;
  const delta =
  /* istanbul ignore next */
  (cov_1r91lnglt1().s[44]++, excelDate - MAGIC_NUMBER_OF_DAYS);
  const parsed =
  /* istanbul ignore next */
  (cov_1r91lnglt1().s[45]++, delta * MISSING_LEAP_YEAR_DAY);
  /* istanbul ignore next */
  cov_1r91lnglt1().s[46]++;
  if (timezone) {
    /* istanbul ignore next */
    cov_1r91lnglt1().b[9][0]++;
    cov_1r91lnglt1().s[47]++;
    return new Date(`${parsed} GMT ${timezone}`);
  } else
  /* istanbul ignore next */
  {
    cov_1r91lnglt1().b[9][1]++;
  }
  cov_1r91lnglt1().s[48]++;
  return new Date(parsed);
};
/* istanbul ignore next */
cov_1r91lnglt1().s[49]++;
const getTimeStamp = (index, item, mimetype, timezone) => {
  /* istanbul ignore next */
  cov_1r91lnglt1().f[12]++;
  const isArray =
  /* istanbul ignore next */
  (cov_1r91lnglt1().s[50]++, Array.isArray(index));
  /* istanbul ignore next */
  cov_1r91lnglt1().s[51]++;
  if (
  /* istanbul ignore next */
  (cov_1r91lnglt1().b[11][0]++, isArray) &&
  /* istanbul ignore next */
  (cov_1r91lnglt1().b[11][1]++, typeof item[index[0]] === 'string') &&
  /* istanbul ignore next */
  (cov_1r91lnglt1().b[11][2]++, typeof item[index[1]] === 'string')) {
    /* istanbul ignore next */
    cov_1r91lnglt1().b[10][0]++;
    cov_1r91lnglt1().s[52]++;
    return new Date(`${item[index[0]]} ${item[index[1]]}`);
  } else
  /* istanbul ignore next */
  {
    cov_1r91lnglt1().b[10][1]++;
  }
  cov_1r91lnglt1().s[53]++;
  if (isArray) {
    /* istanbul ignore next */
    cov_1r91lnglt1().b[12][0]++;
    const date =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[54]++, new Date(Date.UTC(1900, 0)));
    // We get the date as days from 1900. We have to subtract 1 to exactly match the date
    /* istanbul ignore next */
    cov_1r91lnglt1().s[55]++;
    date.setDate(
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[13][0]++, item[index[0]] - 1) ||
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[13][1]++, 0));
    // in some cases 1:30:00 will be interpreted as 25:30:00. In this representation of time seconds are
    // a number from 0 to 1, so we want to keep only the first 24 hours to avoid such errors (therefore the % 1)
    /* istanbul ignore next */
    cov_1r91lnglt1().s[56]++;
    date.setSeconds(Math.round(SECONDS_IN_DAY * (
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[14][0]++, item[index[1]] % 1) ||
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[14][1]++, 0))));
    /* istanbul ignore next */
    cov_1r91lnglt1().s[57]++;
    return date;
  } else
  /* istanbul ignore next */
  {
    cov_1r91lnglt1().b[12][1]++;
  }
  cov_1r91lnglt1().s[58]++;
  if (
  /* istanbul ignore next */
  (cov_1r91lnglt1().b[16][0]++, !isArray) &&
  /* istanbul ignore next */
  (cov_1r91lnglt1().b[16][1]++, mimetype === 'text/csv') &&
  /* istanbul ignore next */
  (cov_1r91lnglt1().b[16][2]++, timezone)) {
    /* istanbul ignore next */
    cov_1r91lnglt1().b[15][0]++;
    cov_1r91lnglt1().s[59]++;
    return new Date(`${item[index]} GMT ${timezone}`);
  } else
  /* istanbul ignore next */
  {
    cov_1r91lnglt1().b[15][1]++;
  }
  cov_1r91lnglt1().s[60]++;
  if (
  /* istanbul ignore next */
  (cov_1r91lnglt1().b[18][0]++, !isArray) &&
  /* istanbul ignore next */
  (cov_1r91lnglt1().b[18][1]++, mimetype === 'text/csv') &&
  /* istanbul ignore next */
  (cov_1r91lnglt1().b[18][2]++, !timezone)) {
    /* istanbul ignore next */
    cov_1r91lnglt1().b[17][0]++;
    cov_1r91lnglt1().s[61]++;
    return new Date(item[index]);
  } else
  /* istanbul ignore next */
  {
    cov_1r91lnglt1().b[17][1]++;
  }
  cov_1r91lnglt1().s[62]++;
  return getJsDateFromExcel(item[index], timezone);
};
/* istanbul ignore next */
cov_1r91lnglt1().s[63]++;
const findTimeStampIndex = headerToTokenMap => {
  /* istanbul ignore next */
  cov_1r91lnglt1().f[13]++;
  const timestampIndex =
  /* istanbul ignore next */
  (cov_1r91lnglt1().s[64]++, headerToTokenMap.findIndex(x => {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[14]++;
    cov_1r91lnglt1().s[65]++;
    return x === 'timestamp';
  }));
  /* istanbul ignore next */
  cov_1r91lnglt1().s[66]++;
  if (timestampIndex !== -1) {
    /* istanbul ignore next */
    cov_1r91lnglt1().b[19][0]++;
    cov_1r91lnglt1().s[67]++;
    return timestampIndex;
  } else
  /* istanbul ignore next */
  {
    cov_1r91lnglt1().b[19][1]++;
  }
  const timeIndex =
  /* istanbul ignore next */
  (cov_1r91lnglt1().s[68]++, headerToTokenMap.findIndex(x => {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[15]++;
    cov_1r91lnglt1().s[69]++;
    return x === 'time';
  }));
  const dateIndex =
  /* istanbul ignore next */
  (cov_1r91lnglt1().s[70]++, headerToTokenMap.findIndex(x => {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[16]++;
    cov_1r91lnglt1().s[71]++;
    return x === 'date';
  }));
  /* istanbul ignore next */
  cov_1r91lnglt1().s[72]++;
  if (
  /* istanbul ignore next */
  (cov_1r91lnglt1().b[21][0]++, timeIndex === -1) ||
  /* istanbul ignore next */
  (cov_1r91lnglt1().b[21][1]++, dateIndex === -1)) {
    /* istanbul ignore next */
    cov_1r91lnglt1().b[20][0]++;
    cov_1r91lnglt1().s[73]++;
    throw new common_1.BadRequestException('Not current timestamp schema');
  } else
  /* istanbul ignore next */
  {
    cov_1r91lnglt1().b[20][1]++;
  }
  cov_1r91lnglt1().s[74]++;
  return [dateIndex, timeIndex];
};
/* istanbul ignore next */
cov_1r91lnglt1().s[75]++;
const getFilePathData = filePath => {
  /* istanbul ignore next */
  cov_1r91lnglt1().f[17]++;
  cov_1r91lnglt1().s[76]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[18]++;
    var _a;
    const workSheetsFromFile =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[77]++, node_xlsx_1.default.parse(filePath, {
      raw: true
    }));
    const workSheetData =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[78]++,
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[23][0]++, (_a = workSheetsFromFile[0]) === null) ||
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[23][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[22][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[22][1]++, _a.data));
    const headerIndex =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[79]++,
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[25][0]++, workSheetData === null) ||
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[25][1]++, workSheetData === void 0) ?
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[24][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[24][1]++, workSheetData.findIndex(row => {
      /* istanbul ignore next */
      cov_1r91lnglt1().f[19]++;
      cov_1r91lnglt1().s[80]++;
      return rules.some(rule => {
        /* istanbul ignore next */
        cov_1r91lnglt1().f[20]++;
        cov_1r91lnglt1().s[81]++;
        return row.some(cell => {
          /* istanbul ignore next */
          cov_1r91lnglt1().f[21]++;
          cov_1r91lnglt1().s[82]++;
          return (
            /* istanbul ignore next */
            (cov_1r91lnglt1().b[26][0]++, typeof cell === 'string') &&
            /* istanbul ignore next */
            (cov_1r91lnglt1().b[26][1]++, rule.expression.test(cell))
          );
        });
      });
    })));
    const headers =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[83]++, workSheetData[headerIndex]);
    const headerToTokenMap =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[84]++, headers.map(x => {
      /* istanbul ignore next */
      cov_1r91lnglt1().f[22]++;
      var _a;
      /* istanbul ignore next */
      cov_1r91lnglt1().s[85]++;
      return (
        /* istanbul ignore next */
        (cov_1r91lnglt1().b[28][0]++, (_a = rules.find(rule => {
          /* istanbul ignore next */
          cov_1r91lnglt1().f[23]++;
          cov_1r91lnglt1().s[86]++;
          return rule.expression.test(x);
        })) === null) ||
        /* istanbul ignore next */
        (cov_1r91lnglt1().b[28][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_1r91lnglt1().b[27][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1r91lnglt1().b[27][1]++, _a.token)
      );
    }));
    const importedMetrics =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[87]++, headerToTokenMap.filter(x => {
      /* istanbul ignore next */
      cov_1r91lnglt1().f[24]++;
      cov_1r91lnglt1().s[88]++;
      return (
        /* istanbul ignore next */
        (cov_1r91lnglt1().b[29][0]++, x !== undefined) &&
        /* istanbul ignore next */
        (cov_1r91lnglt1().b[29][1]++, !nonMetric.includes(x))
      );
    }));
    const ignoredHeaders =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[89]++, headers.filter((x, i) => {
      /* istanbul ignore next */
      cov_1r91lnglt1().f[25]++;
      cov_1r91lnglt1().s[90]++;
      return headerToTokenMap[i] === undefined;
    }));
    const signature =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[91]++, yield (0, md5_file_1.default)(filePath));
    /* istanbul ignore next */
    cov_1r91lnglt1().s[92]++;
    return {
      workSheetData,
      signature,
      ignoredHeaders,
      importedMetrics,
      headers,
      headerIndex,
      headerToTokenMap
    };
  });
};
/* istanbul ignore next */
cov_1r91lnglt1().s[93]++;
exports.getFilePathData = getFilePathData;
/* istanbul ignore next */
cov_1r91lnglt1().s[94]++;
const trimWorkSheetData = (workSheetData, headers, headerIndex) => {
  /* istanbul ignore next */
  cov_1r91lnglt1().f[26]++;
  cov_1r91lnglt1().s[95]++;
  return (
  /* istanbul ignore next */
  (cov_1r91lnglt1().b[31][0]++, workSheetData !== null) &&
  /* istanbul ignore next */
  (cov_1r91lnglt1().b[31][1]++, workSheetData !== void 0) ?
  /* istanbul ignore next */
  (cov_1r91lnglt1().b[30][0]++, workSheetData) :
  /* istanbul ignore next */
  (cov_1r91lnglt1().b[30][1]++, [])).slice(headerIndex + 1).map(item => {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[27]++;
    cov_1r91lnglt1().s[96]++;
    if (item.length === headers.length) {
      /* istanbul ignore next */
      cov_1r91lnglt1().b[32][0]++;
      cov_1r91lnglt1().s[97]++;
      return item;
    } else
    /* istanbul ignore next */
    {
      cov_1r91lnglt1().b[32][1]++;
    }
    cov_1r91lnglt1().s[98]++;
    return undefined;
  }).filter(item => {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[28]++;
    cov_1r91lnglt1().s[99]++;
    return item !== undefined;
  });
};
/* istanbul ignore next */
cov_1r91lnglt1().s[100]++;
exports.trimWorkSheetData = trimWorkSheetData;
/* istanbul ignore next */
cov_1r91lnglt1().s[101]++;
const groupBySitePointDepth = ({
  trimmedWorkSheetData,
  headerToTokenMap,
  siteId,
  surveyPointId
}) => {
  /* istanbul ignore next */
  cov_1r91lnglt1().f[29]++;
  cov_1r91lnglt1().s[102]++;
  logger.log('Grouping data');
  const siteIdIndex =
  /* istanbul ignore next */
  (cov_1r91lnglt1().s[103]++, headerToTokenMap.findIndex(x => {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[30]++;
    cov_1r91lnglt1().s[104]++;
    return x === 'aqualink_site_id';
  }));
  const surveyPointIdIndex =
  /* istanbul ignore next */
  (cov_1r91lnglt1().s[105]++, headerToTokenMap.findIndex(x => {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[31]++;
    cov_1r91lnglt1().s[106]++;
    return x === 'aqualink_survey_point_id';
  }));
  const depthIndex =
  /* istanbul ignore next */
  (cov_1r91lnglt1().s[107]++, headerToTokenMap.findIndex(x => {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[32]++;
    cov_1r91lnglt1().s[108]++;
    return x === 'depth';
  }));
  const groupedByMap =
  /* istanbul ignore next */
  (cov_1r91lnglt1().s[109]++, new Map());
  /* istanbul ignore next */
  cov_1r91lnglt1().s[110]++;
  trimmedWorkSheetData.forEach(val => {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[33]++;
    const rowSiteId =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[111]++,
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[33][0]++, siteId) ||
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[33][1]++, val[siteIdIndex]) ||
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[33][2]++, ''));
    const rowSurveyPointId =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[112]++,
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[34][0]++, surveyPointId) ||
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[34][1]++, val[surveyPointIdIndex]) ||
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[34][2]++, ''));
    const rowDepth =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[113]++,
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[35][0]++, val[depthIndex]) ||
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[35][1]++, ''));
    const key =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[114]++, `${rowSiteId}_${rowSurveyPointId}_${rowDepth}`);
    const item =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[115]++, groupedByMap.get(key));
    /* istanbul ignore next */
    cov_1r91lnglt1().s[116]++;
    if (item !== undefined) {
      /* istanbul ignore next */
      cov_1r91lnglt1().b[36][0]++;
      cov_1r91lnglt1().s[117]++;
      // eslint-disable-next-line fp/no-mutating-methods -- mutating for performance, instead of spreading
      item.push(val);
    } else {
      /* istanbul ignore next */
      cov_1r91lnglt1().b[36][1]++;
      cov_1r91lnglt1().s[118]++;
      groupedByMap.set(key, [val]);
    }
  });
  /* istanbul ignore next */
  cov_1r91lnglt1().s[119]++;
  return Array.from(groupedByMap).map(([key, data]) => {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[34]++;
    const [rowSiteId, rowSurveyPointId, depth] =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[120]++, key.split('_'));
    /* istanbul ignore next */
    cov_1r91lnglt1().s[121]++;
    return {
      data,
      siteId: parseInt(rowSiteId, 10),
      surveyPointId:
      /* istanbul ignore next */
      (cov_1r91lnglt1().b[37][0]++, parseInt(rowSurveyPointId, 10)) ||
      /* istanbul ignore next */
      (cov_1r91lnglt1().b[37][1]++, undefined),
      depth:
      /* istanbul ignore next */
      (cov_1r91lnglt1().b[38][0]++, parseInt(depth, 10)) ||
      /* istanbul ignore next */
      (cov_1r91lnglt1().b[38][1]++, undefined)
    };
  });
};
/* istanbul ignore next */
cov_1r91lnglt1().s[122]++;
const convertData = (workSheetData, headers, fileName, sourceEntity, headerToTokenMap, siteTimezone, mimetype) => {
  /* istanbul ignore next */
  cov_1r91lnglt1().f[35]++;
  const timestampIndex =
  /* istanbul ignore next */
  (cov_1r91lnglt1().s[123]++, findTimeStampIndex(headerToTokenMap));
  const timezone =
  /* istanbul ignore next */
  (cov_1r91lnglt1().s[124]++, typeof timestampIndex === 'number' ?
  /* istanbul ignore next */
  (cov_1r91lnglt1().b[39][0]++, (0, lodash_1.first)(headers[timestampIndex].match(TIMEZONE_REGEX))) :
  /* istanbul ignore next */
  (cov_1r91lnglt1().b[39][1]++, undefined));
  const metricHeadersMap =
  /* istanbul ignore next */
  (cov_1r91lnglt1().s[125]++, headerToTokenMap.reduce((acc, token, i) => {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[36]++;
    cov_1r91lnglt1().s[126]++;
    if (
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[41][0]++, token === undefined) ||
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[41][1]++, nonMetric.includes(token))) {
      /* istanbul ignore next */
      cov_1r91lnglt1().b[40][0]++;
      cov_1r91lnglt1().s[127]++;
      return acc;
    } else
    /* istanbul ignore next */
    {
      cov_1r91lnglt1().b[40][1]++;
    }
    cov_1r91lnglt1().s[128]++;
    return Object.assign(Object.assign({}, acc), {
      [i]: token
    });
  }, {}));
  const results =
  /* istanbul ignore next */
  (cov_1r91lnglt1().s[129]++, Array(workSheetData.length * Object.keys(metricHeadersMap).length));
  let resultsIndex =
  /* istanbul ignore next */
  (cov_1r91lnglt1().s[130]++, 0);
  /* istanbul ignore next */
  cov_1r91lnglt1().s[131]++;
  console.time(`Get data from sheet ${fileName}`);
  /* istanbul ignore next */
  cov_1r91lnglt1().s[132]++;
  workSheetData.forEach(row => {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[37]++;
    const timestampDate =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[133]++, getTimeStamp(timestampIndex, row, mimetype, timezone));
    // This need to be done for each row to take into account daylight savings
    // and other things that may affect timezone offset in that exact date
    const offsetInMil =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[134]++, siteTimezone !== null ?
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[42][0]++, getTimezoneOffset(siteTimezone, timestampDate)) :
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[42][1]++, 0));
    const timestamp =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[135]++, new Date(timestampDate.valueOf() - offsetInMil).toISOString());
    /* istanbul ignore next */
    cov_1r91lnglt1().s[136]++;
    row.forEach((cell, i) => {
      /* istanbul ignore next */
      cov_1r91lnglt1().f[38]++;
      const metric =
      /* istanbul ignore next */
      (cov_1r91lnglt1().s[137]++, metricHeadersMap[i]);
      /* istanbul ignore next */
      cov_1r91lnglt1().s[138]++;
      if (metric) {
        /* istanbul ignore next */
        cov_1r91lnglt1().b[43][0]++;
        cov_1r91lnglt1().s[139]++;
        // eslint-disable-next-line fp/no-mutation -- mutating for performance
        results[resultsIndex++] = {
          timestamp,
          value: parseFloat(cell),
          metric: metric,
          source: sourceEntity
        };
      } else
      /* istanbul ignore next */
      {
        cov_1r91lnglt1().b[43][1]++;
      }
    });
  }, []);
  /* istanbul ignore next */
  cov_1r91lnglt1().s[140]++;
  console.timeEnd(`Get data from sheet ${fileName}`);
  /* istanbul ignore next */
  cov_1r91lnglt1().s[141]++;
  console.time(`Remove duplicates and empty values ${fileName}`);
  const data =
  /* istanbul ignore next */
  (cov_1r91lnglt1().s[142]++, (0, lodash_1.uniqBy)(results.filter(valueObject => {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[39]++;
    cov_1r91lnglt1().s[143]++;
    if (!(0, lodash_1.isNaN)(valueObject.value)) {
      /* istanbul ignore next */
      cov_1r91lnglt1().b[44][0]++;
      cov_1r91lnglt1().s[144]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_1r91lnglt1().b[44][1]++;
    }
    cov_1r91lnglt1().s[145]++;
    logger.log('Excluding incompatible value:');
    /* istanbul ignore next */
    cov_1r91lnglt1().s[146]++;
    logger.log(valueObject);
    /* istanbul ignore next */
    cov_1r91lnglt1().s[147]++;
    return false;
  }), ({
    timestamp,
    metric,
    source
  }) => {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[40]++;
    cov_1r91lnglt1().s[148]++;
    return `${timestamp}, ${metric}, ${source.id}`;
  }));
  /* istanbul ignore next */
  cov_1r91lnglt1().s[149]++;
  console.timeEnd(`Remove duplicates and empty values ${fileName}`);
  /* istanbul ignore next */
  cov_1r91lnglt1().s[150]++;
  return data;
};
/* istanbul ignore next */
cov_1r91lnglt1().s[151]++;
exports.convertData = convertData;
/* istanbul ignore next */
cov_1r91lnglt1().s[152]++;
const uploadFileToGCloud = (dataUploadsRepository, signature, sources, fileName, filePath, minDate, maxDate, importedHeaders) => {
  /* istanbul ignore next */
  cov_1r91lnglt1().f[41]++;
  cov_1r91lnglt1().s[153]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[42]++;
    cov_1r91lnglt1().s[154]++;
    logger.warn(`Uploading file to google cloud: ${fileName}`);
    const uploadExists =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[155]++, yield dataUploadsRepository.findOne({
      where: {
        signature
      }
    }));
    /* istanbul ignore next */
    cov_1r91lnglt1().s[156]++;
    if (uploadExists) {
      /* istanbul ignore next */
      cov_1r91lnglt1().b[45][0]++;
      cov_1r91lnglt1().s[157]++;
      common_1.Logger.warn(`${fileName}: A file upload named '${uploadExists.file}' with the same data already exists`);
      /* istanbul ignore next */
      cov_1r91lnglt1().s[158]++;
      return uploadExists;
    } else
    /* istanbul ignore next */
    {
      cov_1r91lnglt1().b[45][1]++;
    }
    // Initialize google cloud service, to be used for media upload
    const googleCloudService =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[159]++, new google_cloud_service_1.GoogleCloudService());
    // Note this may fail. It would still return a location, but the file may not have been uploaded
    const fileLocation =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[160]++, googleCloudService.uploadFileAsync(filePath, sources.length === 1 ?
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[46][0]++, sources[0]) :
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[46][1]++, 'multi_source'), google_cloud_utils_1.GoogleCloudDir.DATA_UPLOADS, 'data_upload'));
    const dataUploadsFile =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[161]++, yield dataUploadsRepository.save({
      file: fileName,
      signature,
      sensorTypes: sources,
      minDate,
      maxDate,
      metrics: importedHeaders,
      fileLocation
    }));
    /* istanbul ignore next */
    cov_1r91lnglt1().s[162]++;
    return dataUploadsFile;
  });
};
/* istanbul ignore next */
cov_1r91lnglt1().s[163]++;
exports.uploadFileToGCloud = uploadFileToGCloud;
/* istanbul ignore next */
cov_1r91lnglt1().s[164]++;
const findOrCreateSourceEntity = ({
  site,
  sourceType,
  surveyPoint,
  depth,
  sourcesRepository
}) => {
  /* istanbul ignore next */
  cov_1r91lnglt1().f[43]++;
  cov_1r91lnglt1().s[165]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[44]++;
    const existingSourceEntity =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[166]++, yield sourcesRepository.findOne({
      relations: ['surveyPoint', 'site'],
      where: {
        site: {
          id: site.id
        },
        surveyPoint: {
          id:
          /* istanbul ignore next */
          (cov_1r91lnglt1().b[48][0]++, surveyPoint === null) ||
          /* istanbul ignore next */
          (cov_1r91lnglt1().b[48][1]++, surveyPoint === void 0) ?
          /* istanbul ignore next */
          (cov_1r91lnglt1().b[47][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1r91lnglt1().b[47][1]++, surveyPoint.id)
        },
        type: sourceType,
        depth
      }
    }));
    const sourceEntity =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[167]++,
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[49][0]++, existingSourceEntity) ||
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[49][1]++, yield sourcesRepository.save({
      type: sourceType,
      site,
      surveyPoint,
      depth
    })));
    /* istanbul ignore next */
    cov_1r91lnglt1().s[168]++;
    return sourceEntity;
  });
};
/* istanbul ignore next */
cov_1r91lnglt1().s[169]++;
exports.findOrCreateSourceEntity = findOrCreateSourceEntity;
/* istanbul ignore next */
cov_1r91lnglt1().s[170]++;
const saveBatchToTimeSeries = (data, timeSeriesRepository, batchSize =
/* istanbul ignore next */
(cov_1r91lnglt1().b[50][0]++, 100)) => {
  /* istanbul ignore next */
  cov_1r91lnglt1().f[45]++;
  cov_1r91lnglt1().s[171]++;
  logger.log(`Saving time series data in batches of ${batchSize}`);
  const inserts =
  /* istanbul ignore next */
  (cov_1r91lnglt1().s[172]++, (0, lodash_1.chunk)(data, batchSize).map(batch => {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[46]++;
    cov_1r91lnglt1().s[173]++;
    return __awaiter(void 0, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1r91lnglt1().f[47]++;
      cov_1r91lnglt1().s[174]++;
      try {
        /* istanbul ignore next */
        cov_1r91lnglt1().s[175]++;
        yield timeSeriesRepository.createQueryBuilder('time_series').insert().values(batch)
        // If there's a conflict, replace data with the new value.
        // onConflict is deprecated, but updating it is tricky.
        // See https://github.com/typeorm/typeorm/issues/8731?fbclid=IwAR2Obg9eObtGNRXaFrtKvkvvVSWfvjtHpFu-VEM47yg89SZcPpxEcZOmcLw
        .onConflict('ON CONSTRAINT "no_duplicate_data" DO UPDATE SET "value" = excluded.value').execute();
      } catch (err) {
        /* istanbul ignore next */
        cov_1r91lnglt1().s[176]++;
        console.warn('The following batch failed to upload:\n', batch);
        /* istanbul ignore next */
        cov_1r91lnglt1().s[177]++;
        console.error(err);
      }
      /* istanbul ignore next */
      cov_1r91lnglt1().s[178]++;
      return true;
    });
  }));
  // Return insert promises and print progress updates
  const actionsLength =
  /* istanbul ignore next */
  (cov_1r91lnglt1().s[179]++, inserts.length);
  /* istanbul ignore next */
  cov_1r91lnglt1().s[180]++;
  return bluebird_1.default.Promise.each(inserts, (props, idx) => {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[48]++;
    cov_1r91lnglt1().s[181]++;
    logger.log(`Saved ${idx + 1} out of ${actionsLength} batches`);
  });
};
/* istanbul ignore next */
cov_1r91lnglt1().s[182]++;
exports.saveBatchToTimeSeries = saveBatchToTimeSeries;
function getTimezoneOffset(timezone, date) {
  /* istanbul ignore next */
  cov_1r91lnglt1().f[49]++;
  cov_1r91lnglt1().s[183]++;
  try {
    const timezoneDate =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[184]++, new Date(date.toLocaleString('en-US', {
      timeZone: timezone
    })));
    /* istanbul ignore next */
    cov_1r91lnglt1().s[185]++;
    return timezoneDate.valueOf() - date.valueOf();
  } catch (_a) {
    /* istanbul ignore next */
    cov_1r91lnglt1().s[186]++;
    return 0;
  }
}
/* istanbul ignore next */
cov_1r91lnglt1().s[187]++;
const createEntitiesAndConvert = ({
  workSheetData,
  siteId,
  surveyPointId,
  headers,
  fileName,
  headerToTokenMap,
  sourceType,
  repositories,
  depth,
  mimetype,
  siteTimezone
}) => {
  /* istanbul ignore next */
  cov_1r91lnglt1().f[50]++;
  cov_1r91lnglt1().s[188]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[51]++;
    const [site, surveyPoint] =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[189]++, yield Promise.all([(0, site_utils_1.getSite)(siteId, repositories.siteRepository), surveyPointId ?
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[51][0]++, repositories.surveyPointRepository.findOneBy({
      id: surveyPointId
    })) :
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[51][1]++, undefined)]));
    /* istanbul ignore next */
    cov_1r91lnglt1().s[190]++;
    if (surveyPoint) {
      /* istanbul ignore next */
      cov_1r91lnglt1().b[52][0]++;
      cov_1r91lnglt1().s[191]++;
      yield (0, site_utils_1.surveyPointBelongsToSite)(site.id, surveyPoint.id, repositories.surveyPointRepository);
    } else
    /* istanbul ignore next */
    {
      cov_1r91lnglt1().b[52][1]++;
    }
    const sourceEntity =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[192]++, yield (0, exports.findOrCreateSourceEntity)({
      site,
      sourceType,
      surveyPoint:
      /* istanbul ignore next */
      (cov_1r91lnglt1().b[53][0]++, surveyPoint) ||
      /* istanbul ignore next */
      (cov_1r91lnglt1().b[53][1]++, null),
      depth,
      sourcesRepository: repositories.sourcesRepository
    }));
    const data =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[193]++, (0, exports.convertData)(workSheetData, headers, fileName, sourceEntity, headerToTokenMap, siteTimezone ?
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[54][0]++, site.timezone) :
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[54][1]++, null), mimetype));
    /* istanbul ignore next */
    cov_1r91lnglt1().s[194]++;
    return {
      data,
      sourceEntity,
      site,
      surveyPoint
    };
  });
};
/* istanbul ignore next */
cov_1r91lnglt1().s[195]++;
const uploadPerSiteAndPoint = ({
  data,
  site,
  surveyPoint,
  repositories,
  dataUploadsFileEntity
}) => {
  /* istanbul ignore next */
  cov_1r91lnglt1().f[52]++;
  cov_1r91lnglt1().s[196]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[53]++;
    const dataAsTimeSeriesNoDiffs =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[197]++, data.map(x => {
      /* istanbul ignore next */
      cov_1r91lnglt1().f[54]++;
      cov_1r91lnglt1().s[198]++;
      return {
        timestamp: x.timestamp,
        value: x.value,
        metric: x.metric,
        source: x.source,
        dataUpload: dataUploadsFileEntity
      };
    }));
    const barometricPressures =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[199]++, dataAsTimeSeriesNoDiffs.filter(x => {
      /* istanbul ignore next */
      cov_1r91lnglt1().f[55]++;
      cov_1r91lnglt1().s[200]++;
      return x.metric === metrics_enum_1.Metric.BAROMETRIC_PRESSURE_TOP;
    }));
    const pressuresBySource =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[201]++, (0, lodash_1.groupBy)(barometricPressures, 'source.site.id'));
    const barometricDiffs =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[202]++, Object.entries(pressuresBySource).map(
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ([key, pressures]) => {
      /* istanbul ignore next */
      cov_1r91lnglt1().f[56]++;
      // eslint-disable-next-line fp/no-mutating-methods
      const sortedPressures =
      /* istanbul ignore next */
      (cov_1r91lnglt1().s[203]++, pressures.sort((a, b) => {
        /* istanbul ignore next */
        cov_1r91lnglt1().f[57]++;
        cov_1r91lnglt1().s[204]++;
        if (a.timestamp > b.timestamp) {
          /* istanbul ignore next */
          cov_1r91lnglt1().b[55][0]++;
          cov_1r91lnglt1().s[205]++;
          return 1;
        } else
        /* istanbul ignore next */
        {
          cov_1r91lnglt1().b[55][1]++;
        }
        cov_1r91lnglt1().s[206]++;
        if (a.timestamp < b.timestamp) {
          /* istanbul ignore next */
          cov_1r91lnglt1().b[56][0]++;
          cov_1r91lnglt1().s[207]++;
          return -1;
        } else
        /* istanbul ignore next */
        {
          cov_1r91lnglt1().b[56][1]++;
        }
        cov_1r91lnglt1().s[208]++;
        return 0;
      }));
      const valueDiff =
      /* istanbul ignore next */
      (cov_1r91lnglt1().s[209]++, (0, sofar_1.getBarometricDiff)(sortedPressures));
      /* istanbul ignore next */
      cov_1r91lnglt1().s[210]++;
      return valueDiff !== null ?
      /* istanbul ignore next */
      (cov_1r91lnglt1().b[57][0]++, {
        timestamp: valueDiff.timestamp,
        value: valueDiff.value,
        metric: metrics_enum_1.Metric.BAROMETRIC_PRESSURE_TOP_DIFF,
        source: sortedPressures[1].source,
        dataUpload: dataUploadsFileEntity
      }) :
      /* istanbul ignore next */
      (cov_1r91lnglt1().b[57][1]++, undefined);
    }));
    const filteredDiffs =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[211]++, barometricDiffs.filter(x => {
      /* istanbul ignore next */
      cov_1r91lnglt1().f[58]++;
      cov_1r91lnglt1().s[212]++;
      return x !== undefined;
    }));
    const dataAsTimeSeries =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[213]++, [...dataAsTimeSeriesNoDiffs, ...filteredDiffs]);
    // Data is too big to added with one bulk insert so we batch the upload.
    /* istanbul ignore next */
    cov_1r91lnglt1().s[214]++;
    console.time(`Loading into DB site: ${site.id}, surveyPoint: ${
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[59][0]++, surveyPoint === null) ||
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[59][1]++, surveyPoint === void 0) ?
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[58][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[58][1]++, surveyPoint.id)}`);
    /* istanbul ignore next */
    cov_1r91lnglt1().s[215]++;
    yield (0, exports.saveBatchToTimeSeries)(dataAsTimeSeries, repositories.timeSeriesRepository);
    /* istanbul ignore next */
    cov_1r91lnglt1().s[216]++;
    console.timeEnd(`Loading into DB site: ${site.id}, surveyPoint: ${
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[61][0]++, surveyPoint === null) ||
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[61][1]++, surveyPoint === void 0) ?
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[60][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[60][1]++, surveyPoint.id)}`);
    const minDate =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[217]++, (0, lodash_1.get)((0, lodash_1.minBy)(dataAsTimeSeries, item => {
      /* istanbul ignore next */
      cov_1r91lnglt1().f[59]++;
      cov_1r91lnglt1().s[218]++;
      return new Date((0, lodash_1.get)(item, 'timestamp')).getTime();
    }), 'timestamp'));
    const maxDate =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[219]++, (0, lodash_1.get)((0, lodash_1.maxBy)(dataAsTimeSeries, item => {
      /* istanbul ignore next */
      cov_1r91lnglt1().f[60]++;
      cov_1r91lnglt1().s[220]++;
      return new Date((0, lodash_1.get)(item, 'timestamp')).getTime();
    }), 'timestamp'));
    /* istanbul ignore next */
    cov_1r91lnglt1().s[221]++;
    try {
      /* istanbul ignore next */
      cov_1r91lnglt1().s[222]++;
      // This will fail on file re upload
      yield repositories.dataUploadsSitesRepository.save({
        dataUpload: dataUploadsFileEntity,
        site,
        surveyPoint,
        minDate,
        maxDate
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1r91lnglt1().s[223]++;
      logger.warn(
      /* istanbul ignore next */
      (cov_1r91lnglt1().b[62][0]++,
      /* istanbul ignore next */
      (cov_1r91lnglt1().b[64][0]++, error === null) ||
      /* istanbul ignore next */
      (cov_1r91lnglt1().b[64][1]++, error === void 0) ?
      /* istanbul ignore next */
      (cov_1r91lnglt1().b[63][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1r91lnglt1().b[63][1]++, error.message)) ||
      /* istanbul ignore next */
      (cov_1r91lnglt1().b[62][1]++, error));
    }
    /* istanbul ignore next */
    cov_1r91lnglt1().s[224]++;
    logger.log('loading complete');
  });
};
/* istanbul ignore next */
cov_1r91lnglt1().s[225]++;
const uploadTimeSeriesData = ({
  user,
  filePath,
  fileName,
  siteId,
  surveyPointId,
  sourceType,
  repositories,
  multiSiteUpload,
  failOnWarning,
  mimetype,
  siteTimezone
}) => {
  /* istanbul ignore next */
  cov_1r91lnglt1().f[61]++;
  cov_1r91lnglt1().s[226]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1r91lnglt1().f[62]++;
    cov_1r91lnglt1().s[227]++;
    console.time(`Upload data file ${fileName}`);
    /* istanbul ignore next */
    cov_1r91lnglt1().s[228]++;
    if (
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[66][0]++, !multiSiteUpload) &&
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[66][1]++, !siteId)) {
      /* istanbul ignore next */
      cov_1r91lnglt1().b[65][0]++;
      cov_1r91lnglt1().s[229]++;
      throw new common_1.BadRequestException('SiteId is undefined');
    } else
    /* istanbul ignore next */
    {
      cov_1r91lnglt1().b[65][1]++;
    }
    const {
      workSheetData,
      signature,
      ignoredHeaders,
      importedMetrics,
      headers,
      headerIndex,
      headerToTokenMap
    } =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[230]++, yield (0, exports.getFilePathData)(filePath));
    /* istanbul ignore next */
    cov_1r91lnglt1().s[231]++;
    if (
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[68][0]++, failOnWarning) &&
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[68][1]++, ignoredHeaders.length > 0)) {
      /* istanbul ignore next */
      cov_1r91lnglt1().b[67][0]++;
      cov_1r91lnglt1().s[232]++;
      throw new common_1.BadRequestException(`${fileName}: The columns ${ignoredHeaders.map(header => {
        /* istanbul ignore next */
        cov_1r91lnglt1().f[63]++;
        cov_1r91lnglt1().s[233]++;
        return header.replace(/\r?\n|\r/g, '');
      }).join(', ')} are not configured for import yet and cannot be uploaded.`);
    } else
    /* istanbul ignore next */
    {
      cov_1r91lnglt1().b[67][1]++;
    }
    const siteInfo =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[234]++, headerToTokenMap.findIndex(x => {
      /* istanbul ignore next */
      cov_1r91lnglt1().f[64]++;
      cov_1r91lnglt1().s[235]++;
      return (
        /* istanbul ignore next */
        (cov_1r91lnglt1().b[69][0]++, x === 'aqualink_survey_point_id') ||
        /* istanbul ignore next */
        (cov_1r91lnglt1().b[69][1]++, x === 'aqualink_site_id')
      );
    }) > -1);
    /* istanbul ignore next */
    cov_1r91lnglt1().s[236]++;
    if (
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[71][0]++, !multiSiteUpload) &&
    /* istanbul ignore next */
    (cov_1r91lnglt1().b[71][1]++, siteInfo)) {
      /* istanbul ignore next */
      cov_1r91lnglt1().b[70][0]++;
      cov_1r91lnglt1().s[237]++;
      throw new common_1.BadRequestException('File can not include aqualink site information, in this type of request');
    } else
    /* istanbul ignore next */
    {
      cov_1r91lnglt1().b[70][1]++;
    }
    cov_1r91lnglt1().s[238]++;
    if (multiSiteUpload) {
      /* istanbul ignore next */
      cov_1r91lnglt1().b[72][0]++;
      cov_1r91lnglt1().s[239]++;
      // user should never be undefined here since this is a protected endpoint
      if (!user) {
        /* istanbul ignore next */
        cov_1r91lnglt1().b[73][0]++;
        cov_1r91lnglt1().s[240]++;
        throw new common_1.InternalServerErrorException();
      } else
      /* istanbul ignore next */
      {
        cov_1r91lnglt1().b[73][1]++;
      }
      const siteIdIndex =
      /* istanbul ignore next */
      (cov_1r91lnglt1().s[241]++, headerToTokenMap.findIndex(x => {
        /* istanbul ignore next */
        cov_1r91lnglt1().f[65]++;
        cov_1r91lnglt1().s[242]++;
        return x === 'aqualink_site_id';
      }));
      /* istanbul ignore next */
      cov_1r91lnglt1().s[243]++;
      if (siteIdIndex < 0) {
        /* istanbul ignore next */
        cov_1r91lnglt1().b[74][0]++;
        cov_1r91lnglt1().s[244]++;
        throw new common_1.BadRequestException(`no 'aqualink_site_id' column specified`);
      } else
      /* istanbul ignore next */
      {
        cov_1r91lnglt1().b[74][1]++;
      }
      const ids =
      /* istanbul ignore next */
      (cov_1r91lnglt1().s[245]++, workSheetData.map(x => {
        /* istanbul ignore next */
        cov_1r91lnglt1().f[66]++;
        cov_1r91lnglt1().s[246]++;
        return x[siteIdIndex];
      }).filter(x => {
        /* istanbul ignore next */
        cov_1r91lnglt1().f[67]++;
        cov_1r91lnglt1().s[247]++;
        return !Number.isNaN(Number(x));
      }));
      const uniqueIds =
      /* istanbul ignore next */
      (cov_1r91lnglt1().s[248]++, [...new Map(ids.map(x => {
        /* istanbul ignore next */
        cov_1r91lnglt1().f[68]++;
        cov_1r91lnglt1().s[249]++;
        return [x, x];
      })).keys()]);
      const isSiteAdmin =
      /* istanbul ignore next */
      (cov_1r91lnglt1().s[250]++, uniqueIds.length > 0 ?
      /* istanbul ignore next */
      (cov_1r91lnglt1().b[75][0]++, yield repositories.siteRepository.createQueryBuilder('site').innerJoin('site.admins', 'admins', 'admins.id = :userId', {
        userId: user.id
      }).andWhere('site.id IN (:...siteIds)', {
        siteIds: uniqueIds
      }).getMany()) :
      /* istanbul ignore next */
      (cov_1r91lnglt1().b[75][1]++, []));
      const isSuperAdmin =
      /* istanbul ignore next */
      (cov_1r91lnglt1().s[251]++, user.adminLevel === users_entity_1.AdminLevel.SuperAdmin);
      /* istanbul ignore next */
      cov_1r91lnglt1().s[252]++;
      if (
      /* istanbul ignore next */
      (cov_1r91lnglt1().b[77][0]++, isSiteAdmin.length !== uniqueIds.length) &&
      /* istanbul ignore next */
      (cov_1r91lnglt1().b[77][1]++, !isSuperAdmin)) {
        /* istanbul ignore next */
        cov_1r91lnglt1().b[76][0]++;
        cov_1r91lnglt1().s[253]++;
        throw new common_1.BadRequestException(`Invalid values for 'aqualink_site_id'`);
      } else
      /* istanbul ignore next */
      {
        cov_1r91lnglt1().b[76][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1r91lnglt1().b[72][1]++;
    }
    const trimmed =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[254]++, (0, exports.trimWorkSheetData)(workSheetData, headers, headerIndex));
    const groupedData =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[255]++, groupBySitePointDepth({
      trimmedWorkSheetData: trimmed,
      headerToTokenMap,
      siteId,
      surveyPointId
    }));
    const converted =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[256]++, yield Promise.all(groupedData.map(x => {
      /* istanbul ignore next */
      cov_1r91lnglt1().f[69]++;
      cov_1r91lnglt1().s[257]++;
      return createEntitiesAndConvert({
        workSheetData: x.data,
        siteId: x.siteId,
        surveyPointId: x.surveyPointId,
        depth: x.depth,
        headers,
        fileName,
        headerToTokenMap,
        sourceType,
        repositories,
        mimetype,
        siteTimezone
      });
    })));
    const allDataCombined =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[258]++, converted.map(x => {
      /* istanbul ignore next */
      cov_1r91lnglt1().f[70]++;
      cov_1r91lnglt1().s[259]++;
      return x.data;
    }).flat());
    const minDate =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[260]++, (0, lodash_1.get)((0, lodash_1.minBy)(allDataCombined, item => {
      /* istanbul ignore next */
      cov_1r91lnglt1().f[71]++;
      cov_1r91lnglt1().s[261]++;
      return new Date((0, lodash_1.get)(item, 'timestamp')).getTime();
    }), 'timestamp'));
    const maxDate =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[262]++, (0, lodash_1.get)((0, lodash_1.maxBy)(allDataCombined, item => {
      /* istanbul ignore next */
      cov_1r91lnglt1().f[72]++;
      cov_1r91lnglt1().s[263]++;
      return new Date((0, lodash_1.get)(item, 'timestamp')).getTime();
    }), 'timestamp'));
    const dataUploadsFile =
    /* istanbul ignore next */
    (cov_1r91lnglt1().s[264]++, yield (0, exports.uploadFileToGCloud)(repositories.dataUploadsRepository, signature, [sourceType], fileName, filePath, minDate, maxDate, importedMetrics));
    /* istanbul ignore next */
    cov_1r91lnglt1().s[265]++;
    yield Promise.all(converted.map(x => {
      /* istanbul ignore next */
      cov_1r91lnglt1().f[73]++;
      var _a;
      /* istanbul ignore next */
      cov_1r91lnglt1().s[266]++;
      return uploadPerSiteAndPoint({
        data: x.data,
        site: x.site,
        surveyPoint:
        /* istanbul ignore next */
        (cov_1r91lnglt1().b[79][0]++, (_a = x.surveyPoint) !== null) &&
        /* istanbul ignore next */
        (cov_1r91lnglt1().b[79][1]++, _a !== void 0) ?
        /* istanbul ignore next */
        (cov_1r91lnglt1().b[78][0]++, _a) :
        /* istanbul ignore next */
        (cov_1r91lnglt1().b[78][1]++, undefined),
        repositories,
        dataUploadsFileEntity: dataUploadsFile
      });
    }));
    /* istanbul ignore next */
    cov_1r91lnglt1().s[267]++;
    (0, time_series_utils_1.refreshMaterializedView)(repositories.dataUploadsRepository);
    /* istanbul ignore next */
    cov_1r91lnglt1().s[268]++;
    console.timeEnd(`Upload data file ${fileName}`);
    /* istanbul ignore next */
    cov_1r91lnglt1().s[269]++;
    return ignoredHeaders;
  });
};
/* istanbul ignore next */
cov_1r91lnglt1().s[270]++;
exports.uploadTimeSeriesData = uploadTimeSeriesData;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,