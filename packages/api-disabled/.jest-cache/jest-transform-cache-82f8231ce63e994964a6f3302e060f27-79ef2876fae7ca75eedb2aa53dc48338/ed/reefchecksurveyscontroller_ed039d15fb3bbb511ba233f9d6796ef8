3ca3d75e3b325bb5bf15c77d0857a995
"use strict";

/* istanbul ignore next */
function cov_gplnkrhrg() {
  var path = "/home/user/climbox/packages/api/src/reef-check-surveys/reef-check-surveys.controller.ts";
  var hash = "26b0a760c7114de0d37adb124c52d0396a5377dd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/user/climbox/packages/api/src/reef-check-surveys/reef-check-surveys.controller.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 14
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "14": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 73
        }
      },
      "15": {
        start: {
          line: 12,
          column: 36
        },
        end: {
          line: 12,
          column: 71
        }
      },
      "16": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "17": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 44
        }
      },
      "18": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 42
        }
      },
      "19": {
        start: {
          line: 17,
          column: 18
        },
        end: {
          line: 17,
          column: 44
        }
      },
      "20": {
        start: {
          line: 18,
          column: 37
        },
        end: {
          line: 18,
          column: 76
        }
      },
      "21": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 19,
          column: 62
        }
      },
      "22": {
        start: {
          line: 20,
          column: 23
        },
        end: {
          line: 20,
          column: 54
        }
      },
      "23": {
        start: {
          line: 21,
          column: 33
        },
        end: {
          line: 31,
          column: 1
        }
      },
      "24": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 45
        }
      },
      "25": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 48
        }
      },
      "26": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 47
        }
      },
      "27": {
        start: {
          line: 32,
          column: 0
        },
        end: {
          line: 41,
          column: 55
        }
      },
      "28": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 52,
          column: 58
        }
      },
      "29": {
        start: {
          line: 53,
          column: 0
        },
        end: {
          line: 57,
          column: 31
        }
      },
      "30": {
        start: {
          line: 58,
          column: 0
        },
        end: {
          line: 58,
          column: 64
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 11,
            column: 41
          }
        },
        loc: {
          start: {
            line: 11,
            column: 73
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 12
          }
        },
        loc: {
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 12,
            column: 73
          }
        },
        line: 12
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 32
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 17
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 11,
            column: 14
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 15
          },
          end: {
            line: 11,
            column: 19
          }
        }, {
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 35
          }
        }, {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 11
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0]
    },
    inputSourceMap: {
      file: "/home/user/climbox/packages/api/src/reef-check-surveys/reef-check-surveys.controller.ts",
      mappings: ";;;;;;;;;;;;;;;AAAA,2CAAwD;AACxD,6CAAkE;AAClE,6EAAuE;AACvE,+DAAkD;AAClD,uDAA+D;AAKxD,IAAM,0BAA0B,GAAhC,MAAM,0BAA0B;IACrC,YAAoB,cAAuC;QAAvC,mBAAc,GAAd,cAAc,CAAyB;IAAG,CAAC;IAM/D,IAAI,CAAkB,MAAc;QAClC,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IASD,OAAO,CAAc,EAAU;QAC7B,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IACzC,CAAC;CACF,CAAA;AAlBC;IAAC,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,sCAAsC,EAAE,CAAC;IACjE,IAAA,kBAAQ,EAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;IAC3C,IAAA,yBAAM,GAAE;IACR,IAAA,YAAG,GAAE;IACA,WAAA,IAAA,cAAK,EAAC,QAAQ,CAAC,CAAA;;;;sDAEpB;AAED;IAAC,IAAA,sCAAuB,EACtB,sDAAsD,CACvD;IACA,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,qCAAqC,EAAE,CAAC;IAChE,IAAA,kBAAQ,EAAC,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,6BAA6B,EAAE,CAAC;IAChE,IAAA,yBAAM,GAAE;IACR,IAAA,YAAG,EAAC,KAAK,CAAC;IACF,WAAA,IAAA,cAAK,EAAC,IAAI,CAAC,CAAA;;;;yDAEnB;AApBU,0BAA0B;IAFtC,IAAA,iBAAO,EAAC,oBAAoB,CAAC;IAC7B,IAAA,mBAAU,EAAC,kCAAkC,CAAC;qCAET,oDAAuB;GADhD,0BAA0B,CAqBtC;AArBY,gEAA0B",
      names: [],
      sources: ["/home/user/climbox/packages/api/src/reef-check-surveys/reef-check-surveys.controller.ts"],
      sourcesContent: ["import { Controller, Param, Get } from '@nestjs/common';\r\nimport { ApiOperation, ApiParam, ApiTags } from '@nestjs/swagger';\r\nimport { ReefCheckSurveysService } from './reef-check-surveys.service';\r\nimport { Public } from '../auth/public.decorator';\r\nimport { ApiNestNotFoundResponse } from '../docs/api-response';\r\nimport { ReefCheckSurvey } from './reef-check-surveys.entity';\r\n\r\n@ApiTags('Reef Check Surveys')\r\n@Controller('reef-check-sites/:siteId/surveys')\r\nexport class ReefCheckSurveysController {\r\n  constructor(private surveysService: ReefCheckSurveysService) {}\r\n\r\n  @ApiOperation({ summary: \"Returns all reef check site's survey\" })\r\n  @ApiParam({ name: 'siteId', example: 4236 })\r\n  @Public()\r\n  @Get()\r\n  find(@Param('siteId') siteId: number): Promise<ReefCheckSurvey[]> {\r\n    return this.surveysService.find(siteId);\r\n  }\r\n\r\n  @ApiNestNotFoundResponse(\r\n    'No reef check survey was found with the specified id',\r\n  )\r\n  @ApiOperation({ summary: 'Returns specified reef check survey' })\r\n  @ApiParam({ name: 'id', example: '12345678-abcd-efgh-12345678' })\r\n  @Public()\r\n  @Get(':id')\r\n  findOne(@Param('id') id: string): Promise<ReefCheckSurvey> {\r\n    return this.surveysService.findOne(id);\r\n  }\r\n}\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "26b0a760c7114de0d37adb124c52d0396a5377dd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_gplnkrhrg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_gplnkrhrg();
var __decorate =
/* istanbul ignore next */
(cov_gplnkrhrg().s[0]++,
/* istanbul ignore next */
(cov_gplnkrhrg().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_gplnkrhrg().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_gplnkrhrg().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_gplnkrhrg().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_gplnkrhrg().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_gplnkrhrg().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_gplnkrhrg().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_gplnkrhrg().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_gplnkrhrg().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_gplnkrhrg().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_gplnkrhrg().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_gplnkrhrg().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_gplnkrhrg().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_gplnkrhrg().b[3][0]++;
    cov_gplnkrhrg().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_gplnkrhrg().b[3][1]++;
    cov_gplnkrhrg().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_gplnkrhrg().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_gplnkrhrg().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_gplnkrhrg().b[5][0]++;
        cov_gplnkrhrg().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_gplnkrhrg().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_gplnkrhrg().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_gplnkrhrg().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_gplnkrhrg().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_gplnkrhrg().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_gplnkrhrg().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_gplnkrhrg().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_gplnkrhrg().s[9]++;
  return (
    /* istanbul ignore next */
    (cov_gplnkrhrg().b[9][0]++, c > 3) &&
    /* istanbul ignore next */
    (cov_gplnkrhrg().b[9][1]++, r) &&
    /* istanbul ignore next */
    (cov_gplnkrhrg().b[9][2]++, Object.defineProperty(target, key, r)), r
  );
}));
var __metadata =
/* istanbul ignore next */
(cov_gplnkrhrg().s[10]++,
/* istanbul ignore next */
(cov_gplnkrhrg().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_gplnkrhrg().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_gplnkrhrg().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_gplnkrhrg().f[1]++;
  cov_gplnkrhrg().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_gplnkrhrg().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_gplnkrhrg().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_gplnkrhrg().b[11][0]++;
    cov_gplnkrhrg().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_gplnkrhrg().b[11][1]++;
  }
}));
var __param =
/* istanbul ignore next */
(cov_gplnkrhrg().s[13]++,
/* istanbul ignore next */
(cov_gplnkrhrg().b[13][0]++, this) &&
/* istanbul ignore next */
(cov_gplnkrhrg().b[13][1]++, this.__param) ||
/* istanbul ignore next */
(cov_gplnkrhrg().b[13][2]++, function (paramIndex, decorator) {
  /* istanbul ignore next */
  cov_gplnkrhrg().f[2]++;
  cov_gplnkrhrg().s[14]++;
  return function (target, key) {
    /* istanbul ignore next */
    cov_gplnkrhrg().f[3]++;
    cov_gplnkrhrg().s[15]++;
    decorator(target, key, paramIndex);
  };
}));
/* istanbul ignore next */
cov_gplnkrhrg().s[16]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_gplnkrhrg().s[17]++;
exports.ReefCheckSurveysController = void 0;
const common_1 =
/* istanbul ignore next */
(cov_gplnkrhrg().s[18]++, require("@nestjs/common"));
const swagger_1 =
/* istanbul ignore next */
(cov_gplnkrhrg().s[19]++, require("@nestjs/swagger"));
const reef_check_surveys_service_1 =
/* istanbul ignore next */
(cov_gplnkrhrg().s[20]++, require("./reef-check-surveys.service"));
const public_decorator_1 =
/* istanbul ignore next */
(cov_gplnkrhrg().s[21]++, require("../auth/public.decorator"));
const api_response_1 =
/* istanbul ignore next */
(cov_gplnkrhrg().s[22]++, require("../docs/api-response"));
/* istanbul ignore next */
cov_gplnkrhrg().s[23]++;
let ReefCheckSurveysController = class ReefCheckSurveysController {
  constructor(surveysService) {
    /* istanbul ignore next */
    cov_gplnkrhrg().f[4]++;
    cov_gplnkrhrg().s[24]++;
    this.surveysService = surveysService;
  }
  find(siteId) {
    /* istanbul ignore next */
    cov_gplnkrhrg().f[5]++;
    cov_gplnkrhrg().s[25]++;
    return this.surveysService.find(siteId);
  }
  findOne(id) {
    /* istanbul ignore next */
    cov_gplnkrhrg().f[6]++;
    cov_gplnkrhrg().s[26]++;
    return this.surveysService.findOne(id);
  }
};
/* istanbul ignore next */
cov_gplnkrhrg().s[27]++;
__decorate([(0, swagger_1.ApiOperation)({
  summary: "Returns all reef check site's survey"
}), (0, swagger_1.ApiParam)({
  name: 'siteId',
  example: 4236
}), (0, public_decorator_1.Public)(), (0, common_1.Get)(), __param(0, (0, common_1.Param)('siteId')), __metadata("design:type", Function), __metadata("design:paramtypes", [Number]), __metadata("design:returntype", Promise)], ReefCheckSurveysController.prototype, "find", null);
/* istanbul ignore next */
cov_gplnkrhrg().s[28]++;
__decorate([(0, api_response_1.ApiNestNotFoundResponse)('No reef check survey was found with the specified id'), (0, swagger_1.ApiOperation)({
  summary: 'Returns specified reef check survey'
}), (0, swagger_1.ApiParam)({
  name: 'id',
  example: '12345678-abcd-efgh-12345678'
}), (0, public_decorator_1.Public)(), (0, common_1.Get)(':id'), __param(0, (0, common_1.Param)('id')), __metadata("design:type", Function), __metadata("design:paramtypes", [String]), __metadata("design:returntype", Promise)], ReefCheckSurveysController.prototype, "findOne", null);
/* istanbul ignore next */
cov_gplnkrhrg().s[29]++;
ReefCheckSurveysController = __decorate([(0, swagger_1.ApiTags)('Reef Check Surveys'), (0, common_1.Controller)('reef-check-sites/:siteId/surveys'), __metadata("design:paramtypes", [reef_check_surveys_service_1.ReefCheckSurveysService])], ReefCheckSurveysController);
/* istanbul ignore next */
cov_gplnkrhrg().s[30]++;
exports.ReefCheckSurveysController = ReefCheckSurveysController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZ3BsbmtyaHJnIiwiYWN0dWFsQ292ZXJhZ2UiLCJjb21tb25fMSIsInMiLCJyZXF1aXJlIiwic3dhZ2dlcl8xIiwicmVlZl9jaGVja19zdXJ2ZXlzX3NlcnZpY2VfMSIsInB1YmxpY19kZWNvcmF0b3JfMSIsImFwaV9yZXNwb25zZV8xIiwiUmVlZkNoZWNrU3VydmV5c0NvbnRyb2xsZXIiLCJjb25zdHJ1Y3RvciIsInN1cnZleXNTZXJ2aWNlIiwiZiIsImZpbmQiLCJzaXRlSWQiLCJmaW5kT25lIiwiaWQiLCJfX2RlY29yYXRlIiwiQXBpT3BlcmF0aW9uIiwic3VtbWFyeSIsIkFwaVBhcmFtIiwibmFtZSIsImV4YW1wbGUiLCJQdWJsaWMiLCJHZXQiLCJfX3BhcmFtIiwiUGFyYW0iLCJBcGlOZXN0Tm90Rm91bmRSZXNwb25zZSIsIkFwaVRhZ3MiLCJDb250cm9sbGVyIiwiUmVlZkNoZWNrU3VydmV5c1NlcnZpY2UiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiL2hvbWUvdXNlci9jbGltYm94L3BhY2thZ2VzL2FwaS9zcmMvcmVlZi1jaGVjay1zdXJ2ZXlzL3JlZWYtY2hlY2stc3VydmV5cy5jb250cm9sbGVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbnRyb2xsZXIsIFBhcmFtLCBHZXQgfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7XHJcbmltcG9ydCB7IEFwaU9wZXJhdGlvbiwgQXBpUGFyYW0sIEFwaVRhZ3MgfSBmcm9tICdAbmVzdGpzL3N3YWdnZXInO1xyXG5pbXBvcnQgeyBSZWVmQ2hlY2tTdXJ2ZXlzU2VydmljZSB9IGZyb20gJy4vcmVlZi1jaGVjay1zdXJ2ZXlzLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBQdWJsaWMgfSBmcm9tICcuLi9hdXRoL3B1YmxpYy5kZWNvcmF0b3InO1xyXG5pbXBvcnQgeyBBcGlOZXN0Tm90Rm91bmRSZXNwb25zZSB9IGZyb20gJy4uL2RvY3MvYXBpLXJlc3BvbnNlJztcclxuaW1wb3J0IHsgUmVlZkNoZWNrU3VydmV5IH0gZnJvbSAnLi9yZWVmLWNoZWNrLXN1cnZleXMuZW50aXR5JztcclxuXHJcbkBBcGlUYWdzKCdSZWVmIENoZWNrIFN1cnZleXMnKVxyXG5AQ29udHJvbGxlcigncmVlZi1jaGVjay1zaXRlcy86c2l0ZUlkL3N1cnZleXMnKVxyXG5leHBvcnQgY2xhc3MgUmVlZkNoZWNrU3VydmV5c0NvbnRyb2xsZXIge1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgc3VydmV5c1NlcnZpY2U6IFJlZWZDaGVja1N1cnZleXNTZXJ2aWNlKSB7fVxyXG5cclxuICBAQXBpT3BlcmF0aW9uKHsgc3VtbWFyeTogXCJSZXR1cm5zIGFsbCByZWVmIGNoZWNrIHNpdGUncyBzdXJ2ZXlcIiB9KVxyXG4gIEBBcGlQYXJhbSh7IG5hbWU6ICdzaXRlSWQnLCBleGFtcGxlOiA0MjM2IH0pXHJcbiAgQFB1YmxpYygpXHJcbiAgQEdldCgpXHJcbiAgZmluZChAUGFyYW0oJ3NpdGVJZCcpIHNpdGVJZDogbnVtYmVyKTogUHJvbWlzZTxSZWVmQ2hlY2tTdXJ2ZXlbXT4ge1xyXG4gICAgcmV0dXJuIHRoaXMuc3VydmV5c1NlcnZpY2UuZmluZChzaXRlSWQpO1xyXG4gIH1cclxuXHJcbiAgQEFwaU5lc3ROb3RGb3VuZFJlc3BvbnNlKFxyXG4gICAgJ05vIHJlZWYgY2hlY2sgc3VydmV5IHdhcyBmb3VuZCB3aXRoIHRoZSBzcGVjaWZpZWQgaWQnLFxyXG4gIClcclxuICBAQXBpT3BlcmF0aW9uKHsgc3VtbWFyeTogJ1JldHVybnMgc3BlY2lmaWVkIHJlZWYgY2hlY2sgc3VydmV5JyB9KVxyXG4gIEBBcGlQYXJhbSh7IG5hbWU6ICdpZCcsIGV4YW1wbGU6ICcxMjM0NTY3OC1hYmNkLWVmZ2gtMTIzNDU2NzgnIH0pXHJcbiAgQFB1YmxpYygpXHJcbiAgQEdldCgnOmlkJylcclxuICBmaW5kT25lKEBQYXJhbSgnaWQnKSBpZDogc3RyaW5nKTogUHJvbWlzZTxSZWVmQ2hlY2tTdXJ2ZXk+IHtcclxuICAgIHJldHVybiB0aGlzLnN1cnZleXNTZXJ2aWNlLmZpbmRPbmUoaWQpO1xyXG4gIH1cclxufVxyXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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