{"version":3,"names":["cov_15ow0hwg4","actualCoverage","path_1","s","require","sync_1","fs_1","luxon_1","crypto_1","ReturnCSV","res","startDate","endDate","getRows","filename","f","test","b","Error","minDate","DateTime","fromJSDate","startOf","maxDate","monthChunkSize","createChunks","curr","acc","diff","months","end","minus","milliseconds","start","next","item","chunks","tempFileName","join","process","cwd","randomBytes","toString","fd","openSync","i","length","first","rows","toJSDate","csvLines","stringify","header","writeSync","closeSync","readStream","createReadStream","set","pipe","on","unlinkSync","error","console","status","send","exports"],"sources":["/home/user/climbox/packages/api/src/utils/csv-utils.ts"],"sourcesContent":["import { join } from 'path';\r\n// https://github.com/adaltas/node-csv/issues/372\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { stringify } from 'csv-stringify/sync';\r\nimport {\r\n  closeSync,\r\n  createReadStream,\r\n  openSync,\r\n  unlinkSync,\r\n  writeSync,\r\n} from 'fs';\r\nimport type { Response } from 'express';\r\nimport { DateTime } from 'luxon';\r\nimport { randomBytes } from 'crypto';\r\n\r\ninterface ReturnCSVProps {\r\n  res: Response;\r\n  startDate: Date;\r\n  endDate: Date;\r\n  getRows: (startDate: Date, endDate: Date) => Promise<any>;\r\n  filename: string;\r\n}\r\n\r\nexport async function ReturnCSV({\r\n  res,\r\n  startDate,\r\n  endDate,\r\n  getRows,\r\n  filename,\r\n}: ReturnCSVProps) {\r\n  // Make sure filename contains only valid ascii characters and not \" or <\r\n  // for using in 'Content-Disposition' header\r\n  if (!/^(?!.*[\"<])[\\x20-\\x7F]*$/.test(filename)) {\r\n    throw new Error('Invalid filename');\r\n  }\r\n\r\n  const minDate = DateTime.fromJSDate(startDate).startOf('hour');\r\n  const maxDate = DateTime.fromJSDate(endDate).startOf('hour');\r\n\r\n  const monthChunkSize = 6;\r\n\r\n  const createChunks = (\r\n    curr: DateTime,\r\n    acc: { start: DateTime; end: DateTime }[],\r\n  ): { start: DateTime; end: DateTime }[] => {\r\n    if (curr.diff(minDate, 'months').months < monthChunkSize)\r\n      return [...acc, { end: curr.minus({ milliseconds: 1 }), start: minDate }];\r\n\r\n    const next = curr.minus({ months: monthChunkSize });\r\n    const item = { end: curr.minus({ milliseconds: 1 }), start: next };\r\n\r\n    return createChunks(next, [...acc, item]);\r\n  };\r\n\r\n  const chunks = createChunks(maxDate, []);\r\n\r\n  const tempFileName = join(process.cwd(), randomBytes(8).toString('hex'));\r\n\r\n  const fd = openSync(tempFileName, 'w');\r\n\r\n  try {\r\n    // eslint-disable-next-line fp/no-mutation, no-plusplus\r\n    for (let i = 0; i < chunks.length; i++) {\r\n      const first = i === 0;\r\n\r\n      // we want this not to run in parallel, that's why it is ok here to disable no-await-in-loop\r\n      // eslint-disable-next-line no-await-in-loop\r\n      const rows = await getRows(\r\n        chunks[i].start.toJSDate(),\r\n        chunks[i].end.toJSDate(),\r\n      );\r\n\r\n      const csvLines = stringify(rows, { header: first });\r\n\r\n      writeSync(fd, csvLines);\r\n    }\r\n\r\n    closeSync(fd);\r\n\r\n    const readStream = createReadStream(tempFileName);\r\n\r\n    res.set({\r\n      'Content-Disposition': `attachment; filename=${filename}`,\r\n    });\r\n\r\n    res.set({\r\n      'Access-Control-Expose-Headers': 'Content-Disposition',\r\n    });\r\n\r\n    readStream.pipe(res);\r\n\r\n    readStream.on('end', () => {\r\n      unlinkSync(tempFileName);\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n    unlinkSync(tempFileName);\r\n    res.status(500).send();\r\n  }\r\n}\r\n"],"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"}