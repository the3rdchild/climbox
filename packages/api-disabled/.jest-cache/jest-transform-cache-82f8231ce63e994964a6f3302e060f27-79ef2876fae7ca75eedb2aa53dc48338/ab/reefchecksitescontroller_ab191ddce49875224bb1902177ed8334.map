{"version":3,"names":["cov_1yolahxx80","actualCoverage","common_1","s","require","swagger_1","reef_check_sites_service_1","public_decorator_1","api_response_1","ReefCheckSitesController","constructor","sitesService","f","findOne","id","__decorate","ApiNestNotFoundResponse","ApiOperation","summary","ApiParam","name","example","Public","Get","__param","Param","ApiTags","Controller","ReefCheckSitesService","exports"],"sources":["/home/user/climbox/packages/api/src/reef-check-sites/reef-check-sites.controller.ts"],"sourcesContent":["import { Controller, Param, Get } from '@nestjs/common';\r\nimport { ApiOperation, ApiParam, ApiTags } from '@nestjs/swagger';\r\nimport { ReefCheckSitesService } from './reef-check-sites.service';\r\nimport { Public } from '../auth/public.decorator';\r\nimport { ApiNestNotFoundResponse } from '../docs/api-response';\r\nimport { ReefCheckSite } from './reef-check-sites.entity';\r\n\r\n@ApiTags('Reef Check Sites')\r\n@Controller('reef-check-sites')\r\nexport class ReefCheckSitesController {\r\n  constructor(private sitesService: ReefCheckSitesService) {}\r\n\r\n  @ApiNestNotFoundResponse('No reef check site was found with the specified id')\r\n  @ApiOperation({ summary: 'Returns specified reef check site' })\r\n  @ApiParam({ name: 'id', example: '12345678-abcd-efgh-12345678' })\r\n  @Public()\r\n  @Get(':id')\r\n  findOne(@Param('id') id: string): Promise<ReefCheckSite> {\r\n    return this.sitesService.findOne(id);\r\n  }\r\n}\r\n"],"mappingscAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAAE,QAAA;AAAA;AAAA,CAAAF,cAAA,GAAAG,CAAA,QAAAC,OAAA;AACA,MAAAC,SAAA;AAAA;AAAA,CAAAL,cAAA,GAAAG,CAAA,QAAAC,OAAA;AACA,MAAAE,0BAAA;AAAA;AAAA,CAAAN,cAAA,GAAAG,CAAA,QAAAC,OAAA;AACA,MAAAG,kBAAA;AAAA;AAAA,CAAAP,cAAA,GAAAG,CAAA,QAAAC,OAAA;AACA,MAAAI,cAAA;AAAA;AAAA,CAAAR,cAAA,GAAAG,CAAA,QAAAC,OAAA;AAA+D;AAAAJ,cAAA,GAAAG,CAAA;AAKxD,IAAMM,wBAAwB,GAA9B,MAAMA,wBAAwB;EACnCC,YAAoBC,YAAmC;IAAA;IAAAX,cAAA,GAAAY,CAAA;IAAAZ,cAAA,GAAAG,CAAA;IAAnC,KAAAQ,YAAY,GAAZA,YAAY;EAA0B;EAO1DE,OAAOA,CAAcC,EAAU;IAAA;IAAAd,cAAA,GAAAY,CAAA;IAAAZ,cAAA,GAAAG,CAAA;IAC7B,OAAO,IAAI,CAACQ,YAAY,CAACE,OAAO,CAACC,EAAE,CAAC;EACtC;CACD;AAAA;AAAAd,cAAA,GAAAG,CAAA;AARCY,UAAA,EAAC,IAAAP,cAAA,CAAAQ,uBAAuB,EAAC,oDAAoD,CAAC,EAC7E,IAAAX,SAAA,CAAAY,YAAY,EAAC;EAAEC,OAAO,EAAE;AAAmC,CAAE,CAAC,EAC9D,IAAAb,SAAA,CAAAc,QAAQ,EAAC;EAAEC,IAAI,EAAE,IAAI;EAAEC,OAAO,EAAE;AAA6B,CAAE,CAAC,EAChE,IAAAd,kBAAA,CAAAe,MAAM,GAAE,EACR,IAAApB,QAAA,CAAAqB,GAAG,EAAC,KAAK,CAAC,EACFC,OAAA,QAAAtB,QAAA,CAAAuB,KAAK,EAAC,IAAI,CAAC,G,+KAEnB;AAAA;AAAAzB,cAAA,GAAAG,CAAA;AAVUM,wBAAwB,GAAAM,UAAA,EAFpC,IAAAV,SAAA,CAAAqB,OAAO,EAAC,kBAAkB,CAAC,EAC3B,IAAAxB,QAAA,CAAAyB,UAAU,EAAC,kBAAkB,CAAC,E,iCAEKrB,0BAAA,CAAAsB,qBAAqB,G,EAD5CnB,wBAAwB,CAWpC;AAAA;AAAAT,cAAA,GAAAG,CAAA;AAXY0B,OAAA,CAAApB,wBAAA,GAAAA,wBAAA"}